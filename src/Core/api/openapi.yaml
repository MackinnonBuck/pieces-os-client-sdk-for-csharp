openapi: 3.0.0
info:
  contact:
    email: tsavo@pieces.app
    name: Tsavo Knott
    url: https://pieces.app
  description: "Endpoints for Assets, Formats, Users, Asset, Format, User."
  title: Pieces Isomorphic OpenAPI
  version: "1.0"
servers:
- description: Local Generated Mock Data
  url: http://localhost:1000
- description: Stoplight Static Mock Data
  url: https://stoplight.io/mocks/pieces/platform-openapi:main/13067253
- description: Authentication Domain
  url: https://auth.pieces.services
- description: API Domain
  url: https://api.pieces.services
- description: Auth0
  url: https://pieces.us.auth0.com
security:
- application: []
tags:
- name: Activity
- name: Activities
- name: Allocation
- name: Allocations
- name: Analyses
- name: Anchor
- name: AnchorPoint
- name: AnchorPoints
- name: Anchors
- name: Annotation
- name: Annotations
- name: Application
- name: Applications
- name: Asset
- name: Assets
- name: Auth0
- name: Backup
- name: Backups
- name: Classification
- name: CodeAnalyses
- name: Conversation
- name: Conversations
- name: ConversationMessage
- name: ConversationMessages
- name: Discovery
- name: Distribution
- name: Distributions
- name: ExternalProvider
- name: Format
- name: Formats
- name: Github
- name: Hint
- name: Hints
- name: Html
- name: ImageAnalyses
- name: Linkify
- name: MacOS
- name: MachineLearning
- name: Metrics
- name: Model
- name: Models
- name: Notifications
- name: OCRAnalyses
- name: OS
- name: OpenAI
- name: PKCE
- name: Person
- name: Persons
- name: Piece
- name: QGPT
- name: Range
- name: Ranges
- name: Search
- name: Sensitive
- name: Sensitives
- name: Share
- name: Shares
- name: Tag
- name: Tags
- name: UltraSuite
- name: User
- name: Users
- name: Website
- name: Websites
- name: WellKnown
- name: Workstream
- name: WorkstreamEvent
- name: WorkstreamEvents
- name: WorkstreamPatternEngine
- name: WorkstreamPatternEngineSources
- name: WorkstreamPatternEngineSource
- name: WorkstreamSummary
- name: WorkstreamSummaries
- name: Ollama
paths:
  /.well-known/health:
    get:
      description: Retrieves the health status of the server.
      operationId: get-well-known-health
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      security: []
      summary: "/.well-known/health [GET]"
      tags:
      - WellKnown
  /.well-known/version:
    get:
      operationId: get-well-known-version
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: This is the version.
                type: string
          description: OK
      security: []
      summary: "/.well-known/version [Get]"
      tags:
      - WellKnown
  /.well-known/stream/health:
    get:
      description: This is a Streamed endpoint please use a WS connection to call
        this Endpoint.
      operationId: get-well-known-stream-health
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: This is the version.
                type: string
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      security: []
      summary: "/.well-known/stream/health [WS]"
      tags:
      - WellKnown
  /:
    get:
      description: This is a cloud only Api. This will get a preview of your publically
        accessble Piece.
      operationId: html-share
      parameters:
      - description: "this is the a query param, that a shortened version of the share."
        explode: true
        in: query
        name: p
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                type: string
          description: OK
      security:
      - application: []
      summary: "/ [GET]"
      tags:
      - Piece
  /activities/{activity}/delete:
    post:
      description: |-
        This will delete a specific activity.

        important note: if we delete an activity: that is going to be a generic or a specific/ we will also delete its counter part i.e the specific. and vise versa, this ensures that the references are always cleaned.
      operationId: activities-delete-specific-activity
      parameters:
      - description: This is a specific activity uuid.
        in: path
        name: activity
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activities/{activity}/delete [POST]"
      tags:
      - Activities
  /activities/create:
    post:
      description: This will create a new Activity.
      operationId: activities-create-new-activity
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededActivity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activities/create [POST]"
      tags:
      - Activities
  /activities:
    get:
      description: This will get a snapshot of all of the activities
      operationId: activities-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activities [GET]"
      tags:
      - Activities
  /activity/{activity}:
    get:
      description: This will attempt to get a specific activity.
      operationId: activities-specific-activity-snapshot
      parameters:
      - description: This is a specific activity uuid.
        in: path
        name: activity
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Activity was not found.
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activity/{activity} [GET]"
      tags:
      - Activity
  /activity/identifiers:
    get:
      description: This is going to return all the identifiers of the activity event
        in order of most recent -> oldest.
      operationId: activity-identifiers-snapshot
      parameters:
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      - description: This is an ActivityFilterEnum as a optional filter. Ensure you
          update ActivityFilterEnum if this is updated.
        in: query
        name: activity_filter_enum
        required: false
        schema:
          enum:
          - CREATED
          - UPDATED
          - DELETED
          - REFERENCED
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlattenedActivities'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activity/identifiers [GET]"
      tags:
      - Activity
  /activity/update:
    post:
      description: this will update a specific activity.
      operationId: activity-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activity'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activity/update [POST]"
      tags:
      - Activity
  /allocation/{allocation}:
    get:
      description: This will get a snapshot of a specific allocation.
      operationId: allocation-snapshot
      parameters:
      - explode: false
        in: path
        name: allocation
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationCloud'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Cloud not found.
      summary: "/allocation/{allocation} [GET]"
      tags:
      - Allocation
  /allocation/update:
    post:
      description: This will update a specific allocation.
      operationId: allocation-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationCloud'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationCloud'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "504":
          content:
            text/plain:
              schema:
                type: string
          description: "Gateway Timeout, request timed out."
      summary: "/allocation/update [POST]"
      tags:
      - Allocation
  /allocations/reconnect:
    post:
      description: This will attempt to reconnect to a users cloud. This will ensure
        that we are connected to a users cloud and will ensure that all the data associated
        with a user's cloud is up-to-date.
      operationId: allocations-reconnect-cloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationCloud'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationCloud'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "504":
          content:
            text/plain:
              schema:
                type: string
          description: "Gateway Timeout, request timed out."
      summary: "/allocations/reconnect [POST]"
      tags:
      - Allocations
  /allocations/delete:
    post:
      description: This is unimplemented locally. This will delete an allocation.
        ONLY used within the cloud.
      operationId: allocations-delete-allocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationCloud'
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/allocations/delete [POST]"
      tags:
      - Allocations
  /allocations/disconnect:
    post:
      description: This will attempt to disconnect to a specific users cloud.
      operationId: allocations-disconnect-cloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationCloud'
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "OK, this will return the uuid of the cloud that was disconnected!"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/allocations/disconnect [POST]"
      tags:
      - Allocations
  /allocations/connect:
    post:
      description: This will attempt to connect to a specific users cloud.(Required
        that the current user is logged in.)
      operationId: allocations-connect-new-cloud
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationCloud'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "504":
          content:
            text/plain:
              schema:
                type: string
          description: "Gateway Timeout, request timed out."
      summary: "/allocations/connect [POST]"
      tags:
      - Allocations
  /allocations/create:
    post:
      description: This is unimplemented locally. This will create an allocation.
        ONLY used within the cloud.
      operationId: allocations-create-new-allocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllocationCloud'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationCloud'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/allocations/create [POST]"
      tags:
      - Allocations
  /allocations:
    get:
      description: This is going to get a snapshot of all of the connected allocations.
      operationId: allocations-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allocations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/allocations [GET]"
      tags:
      - Allocations
  /analyses:
    get:
      description: "This will get a snapshot of all of your analyses, that are all\
        \ attached to formats. An analysis can optionally have an codeAnalysis or\
        \ an optional imageAnalysis."
      operationId: analyses-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analyses'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - Analyses
  /anchor/{anchor}:
    get:
      description: This will get a snapshot of a single anchor.
      operationId: anchor-specific-anchor-snapshot
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Anchor not found.
      summary: "/anchor/{anchor} [GET]"
      tags:
      - Anchor
  /anchor/{anchor}/rename:
    post:
      description: This will rename a specific anchor.
      operationId: anchor-rename
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/rename [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: anchor-scores-increment
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/anchor/{anchor}/scores/increment' [POST]"
      tags:
      - Anchor
  /anchor/update:
    post:
      description: This will update a specific anchor.
      operationId: anchor-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Anchor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/update [POST]"
      tags:
      - Anchor
  /anchor_point/update:
    post:
      description: This will update a specific anchorPoint.
      operationId: anchor_point-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnchorPoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnchorPoint'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor_point/update [POST]"
      tags:
      - AnchorPoint
  /anchor_point/{anchor_point}:
    get:
      description: This will get a snapshot of a single anchorPoint.
      operationId: anchor_point-specific-anchor_point-snapshot
      parameters:
      - description: This is the specific uuid of an anchor_point.
        in: path
        name: anchor_point
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnchorPoint'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: AnchorPoint not found.
      summary: "/anchor_point/{anchor_point} [GET]"
      tags:
      - AnchorPoint
  /anchor_points:
    get:
      description: This will get a snapshot of all your anchorPoints.
      operationId: anchor_points-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnchorPoints'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor_points [GET]"
      tags:
      - AnchorPoints
  /anchor_points/create:
    post:
      description: This will create a anchorPoint.
      operationId: anchor_points-create-new-anchor_point
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAnchorPoint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnchorPoint'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor_points/create [POST]"
      tags:
      - AnchorPoints
  /anchor_point/{anchor_point}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: anchor_point-scores-increment
      parameters:
      - description: This is the specific uuid of an anchor_point.
        in: path
        name: anchor_point
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/anchor_point/{anchor_point}/scores/increment' [POST]"
      tags:
      - AnchorPoint
  /anchor_points/{anchor_point}/delete:
    post:
      description: This will delete a specific anchorPoint!
      operationId: anchor_points-delete-specific-anchor_point
      parameters:
      - description: This is the specific uuid of an anchor_point.
        in: path
        name: anchor_point
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor_points/{anchor_point}/delete [POST]"
      tags:
      - AnchorPoints
  /anchors/{anchor}/delete:
    post:
      description: This will delete a specific anchor!
      operationId: anchors-delete-specific-anchor
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchors/{anchor}/delete [POST]"
      tags:
      - Anchors
  /anchors/create:
    post:
      description: This will create a anchor and attach it to a specific asset(s)
        This will also ensure the anchor is normalized.
      operationId: anchors-create-new-anchor
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAnchor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchor'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchors/create [POST]"
      tags:
      - Anchors
  /anchors:
    get:
      description: This will get a snapshot of all your anchors.
      operationId: anchors-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Anchors'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchors [GET]"
      tags:
      - Anchors
  /annotation/{annotation}:
    get:
      description: This will get a snapshot of a specific annotation.
      operationId: annotation-specific-annotation-snapshot
      parameters:
      - description: This is a specific annotation uuid.
        in: path
        name: annotation
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotation/{annotation} [GET]"
      tags:
      - Annotation
  /annotation/{annotation}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: annotation-scores-increment
      parameters:
      - description: This is a specific annotation uuid.
        in: path
        name: annotation
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/annotation/{annotation}/scores/increment' [POST]"
      tags:
      - Annotation
  /annotation/update:
    post:
      description: This will update a specific annotation.
      operationId: annotation-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotation/update [POST]"
      tags:
      - Annotation
  /annotations/create:
    post:
      description: This will create an annotation.
      operationId: annotations-create-new-annotation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAnnotation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotations/create [POST]"
      tags:
      - Annotations
  /annotations/{annotation}/delete:
    post:
      description: this will delete a specific annotation
      operationId: annotations-delete-specific-annotation
      parameters:
      - description: This is a specific annotation uuid.
        in: path
        name: annotation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotations/{annotation}/delete [POST]"
      tags:
      - Annotations
  /annotations:
    get:
      description: |-
        This will get a snapshot of all the annotations.

        This will take an optional filter as a query param.
      operationId: annotations-snapshot
      parameters:
      - description: This is an AnnotationTypeEnum as a optional filter.
        in: query
        name: annotation_type_filter
        required: false
        schema:
          enum:
          - DESCRIPTION
          - COMMENT
          - COMMENTATION
          - DOCUMENTATION
          - SUMMARIZATION
          - SUMMARY
          - EXPLANATION
          - GIT_COMMIT
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotations [GET]"
      tags:
      - Annotations
  /{application}/track:
    post:
      description: Abstracts the process of packaging segments on a per-context basis.
      operationId: track
      parameters:
      - description: This is a uuid that represents an application
        in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConnectorTracking'
        description: 'The body is able to take in several properties '
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "OK, This will jsut return a string of \"OK\"."
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, you will get this in the case that you are trying\
            \ to ping Pieces_OS but havnt connected yet.\"/connect was not called\
            \ for your application.\""
      summary: "/{application}/track [POST]"
      tags:
      - Connector
      x-pieces-internal: true
  /application/update:
    post:
      description: This is an endpoint for updating an application.
      operationId: application-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: "/application/update [GET]"
      tags:
      - Application
  /{application}/suggestion:
    post:
      description: "Invoked whenever a code snippet is copied from an integration.\
        \ For instance, if a JetBrains user copies code, this endpoint can be called\
        \ to assess whether to suggest reusing a piece (if reuse is true, the endpoint\
        \ provides assets that the user may consider using), saving the code snippet,\
        \ or taking no action. \n\n**Note: This endpoint could potentially accept\
        \ a SeededFormat for the request body if required."
      operationId: suggest
      parameters:
      - explode: false
        in: path
        name: application
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConnectorCreation'
        description: This is the Snippet that we will compare to all the saved assets
          to determine what we want to do with it!
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suggestion'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, you will get this in the case that you are trying\
            \ to ping Pieces_OS but havnt connected yet.\"/connect was not called\
            \ for your application.\""
      summary: "/{application}/suggestion [POST]"
      tags:
      - Connector
  /{application}/reaction:
    post:
      description: This will respond to the output generated by the /suggest endpoint.
      operationId: react
      parameters:
      - explode: false
        in: path
        name: application
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
        description: '** This body will need to be modified.'
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: this is just going to be the AssetId that was created
                  or will just be a generic 'OK' if the action specifified was to
                  do nothing.
                type: string
          description: This string will either (1) be a string of the AssetUid or
            (2) will be a generic string of 'OK' if the asset was not saved and 'OK'
            if the result was just used to send information about the a suggested
            reuse.
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, you will get this in the case that you are trying\
            \ to ping Pieces_OS but havnt connected yet.\"/connect was not called\
            \ for your application.\""
      summary: "/{application}/reaction [POST]"
      tags:
      - Connector
  /{application}/onboarded:
    post:
      description: A central endpoint to manage updates to the onboarding process.
      operationId: onboarded
      parameters:
      - description: This is a uuid that represents an application
        in: path
        name: application
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              description: "Pass in true to set onboarded to true, pass in false to\
                \ set it to false"
              type: boolean
        description: Whether or not that application has been onboarded.
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "OK, This will just return a string of \"OK\"."
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, you will get this in the case that you are trying\
            \ to ping Pieces_OS but havnt connected yet.\"/connect was not called\
            \ for your application.\""
      summary: "/onboarded [POST]"
      tags:
      - Connector
  /{application}/intention:
    post:
      description: Allows you to send a SeededAsset for future comparison.
      operationId: intention
      parameters:
      - explode: false
        in: path
        name: application
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConnectorAsset'
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, you will get this in the case that you are trying\
            \ to ping Pieces_OS but havnt connected yet.\"/connect was not called\
            \ for your application.\""
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: "Internal Server Error: "
      summary: "/{application}/intention [POST]"
      tags:
      - Connector
  /applications/{application}:
    get:
      description: "Obtains a snapshot with information about a specific application,\
        \ identified by its UUID."
      operationId: applications-specific-application-snapshot
      parameters:
      - description: This is a uuid that represents an application
        in: path
        name: application
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: "/applications/{application} [GET]"
      tags:
      - Applications
      x-pieces-internal: true
  /applications:
    get:
      description: "Retrieves a comprehensive overview of all applications tracked\
        \ by the Pieces system, including status, version, and engagement metrics."
      operationId: applications-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: OK
      summary: "/applications [GET]"
      tags:
      - Applications
  /applications/session/close:
    post:
      deprecated: true
      description: "Closes an active session, identified by a session UUID, marking\
        \ the end of the user's current interaction with the Pieces application."
      operationId: applications-session-close
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UniversalUniqueIdentifier'
        description: This will accept a required session uuid.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: OK
      summary: "/applications/session/close [POST]"
      tags:
      - Applications
  /applications/session/open:
    post:
      deprecated: true
      description: "Initiates a new session, marking the start of a user's interaction\
        \ with the Pieces application."
      operationId: applications-session-open
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: OK
      summary: "/applications/session/open [POST]"
      tags:
      - Applications
  /applications/register:
    post:
      deprecated: true
      description: Registers a new application within the Pieces ecosystem.
      operationId: applications-register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
        description: This will accept a application.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK
      summary: "/applications/register [POST]"
      tags:
      - Applications
  /asset/{asset}/scores/increment:
    post:
      description: Increments the scores associated with the specified asset based
        on the provided SeededScoreIncrement data in the request body.
      operationId: asset-scores-increment
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/scores/increment [POST]"
      tags:
      - Asset
  /asset/{asset}/export:
    get:
      description: Retrieves an export version of the specified asset.
      operationId: asset-specific-asset-export
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This specifies the type of export the user wants.
        in: query
        name: export_type
        required: true
        schema:
          enum:
          - HTML
          - MD
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedAsset'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/export [GET]"
      tags:
      - Asset
  /asset/{asset}/conversations:
    get:
      description: Retrieves conversations specific to the given asset.
      operationId: asset-specific-asset-conversations
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/conversations [GET]"
      tags:
      - Asset
  /asset/{asset}/activities:
    get:
      description: Retrieves activity events specific to the given asset.
      operationId: asset-specific-asset-activities
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activities'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/activities [GET]"
      tags:
      - Asset
  /asset/{asset}/formats:
    get:
      description: Retrieves the formats available for a specified asset.
      operationId: asset-formats
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formats'
          description: OK
      summary: "/asset/{asset}/formats [GET] Scoped To Asset"
      tags:
      - Asset
  /asset/{asset}/websites/disassociate/{website}:
    post:
      description: Disassociates a website from an asset. It performs the same action
        as the website equivalent.
      operationId: asset-disassociate-website
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/websites/disassociate/{website} [POST]"
      tags:
      - Asset
  /asset/{asset}/websites/associate/{website}:
    post:
      description: Associates a website with an asset. It performs the same action
        as its website equivalent.
      operationId: asset-associate-website
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/websites/associate/{website} [POST]"
      tags:
      - Asset
  /asset/{asset}/tags/associate/{tag}:
    post:
      description: Associates a tag with a specified asset. It performs the same action
        as the tag equivalent.
      operationId: asset-associate-tag
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/tags/associate/{tag} [POST]"
      tags:
      - Asset
  /asset/{asset}/tags/disassociate/{tag}:
    post:
      description: Disassociates a tag from an asset. It performs the same action
        as the tag equivalent.
      operationId: asset-disassociate-tag
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/tags/disassociate/{tag} [POST]"
      tags:
      - Asset
  /asset/{asset}:
    get:
      description: Retrieves the snapshot of a specific asset
      operationId: asset-snapshot
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Asset no longer exists and is Gone.
      summary: "/asset/{asset} [GET] Scoped To Asset"
      tags:
      - Asset
    post:
      description: "Retrieves a snapshot of a specific asset, along with the user\
        \ requesting the snapshot."
      operationId: asset-snapshot-post
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAccessor'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/asset/{asset} [POST] Scoped to an Asset"
      tags:
      - Asset
  /asset/reclassify:
    post:
      description: Retrieves the formats available for a specified asset.
      operationId: asset-reclassify
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetReclassification'
        description: This will accept a Reclassification that includeds and assetand
          a language that this assets needs to be reclassified to. We will just return
          an Asset that has been reclassified.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/asset/reclassify [POST]"
      tags:
      - Asset
  /asset/update:
    post:
      description: Allows the user to update an existing Asset. It accepts the Asset
        object that needs updating and returns the fully updated Asset.
      operationId: asset-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        description: This endpoint allows the user to update an existing Asset. It
          accepts the Asset object that needs updating and returns the fully updated
          Asset.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/asset/update [POST] Scoped to Asset"
      tags:
      - Asset
  /assets/{asset}/delete:
    post:
      description: "Deletes a specific asset from the system by providing its unique\
        \ identifier (UID). Upon successful deletion, it returns the UID of the deleted\
        \ asset."
      operationId: assets-delete-asset
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        explode: false
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: this will return the uid of the asset deleted.
                type: string
          description: OK
      summary: "/assets/{asset}/delete [POST] Scoped to Asset"
      tags:
      - Assets
  /assets/{asset}/formats:
    get:
      description: Retrieves the available formats for a specific asset identified
        by its ID
      operationId: assets-specific-asset-formats-snapshot
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formats'
          description: OK
      summary: "/assets/{asset}/formats [GET] Scoped To Assets"
      tags:
      - Assets
  /assets/{asset}:
    get:
      description: Allows clients to retrieve details of a specific asset by providing
        its UUID in the path.
      operationId: assets-specific-asset-snapshot
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: A specific asset per the provided asset id.
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Asset no longer exists and is Gone.
      summary: "/assets/{asset} [GET] Scoped to Assets"
      tags:
      - Assets
  /assets/create:
    post:
      description: "Accepts a seeded (a structure that comes before an asset, and\
        \ will be used in creation) asset and uploads it to Pieces. The response will\
        \ be the newly created Asset object."
      operationId: assets-create-new-asset
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seed'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/assets/create [POST] Scoped to Asset"
      tags:
      - Assets
  /assets/draft:
    post:
      description: "Allows developers to input a Seed and receive a drafted asset\
        \ with preprocessed information. No data is persisted; this is solely an input/output\
        \ endpoint.  For images, it returns the original Seed."
      operationId: assets-draft
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Seed'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seed'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/assets/draft [POST]"
      tags:
      - Assets
  /assets/identifiers:
    get:
      description: Retrieves all asset IDs associated with your account.
      operationId: assets-identifiers-snapshot
      parameters:
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlattenedAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/assets/identifiers [GET]"
      tags:
      - Assets
  /assets/pseudo:
    get:
      description: Retrieves a snapshot exclusively containing pseudo Assets from
        your Pieces drive.
      operationId: assets-pseudo-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PseudoAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/assets/pseudo [GET]"
      tags:
      - Assets
  /assets/recommended:
    get:
      description: "Expects a SeededAssetsRecommendation Model in the request body,\
        \ containing assets and interactions. Returns an Assets Model suitable for\
        \ UI."
      operationId: assets-get-recommended-assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAssetsRecommendation'
        description: The body of the request will be an SeededAssetsRecommendation
          Model with interaction meta data included at body.interactions.iterable
          and then the corrresponding index-paired body.assets.iterable with a fully
          populated assets array with fully sub-populated formats.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: OK
      summary: Your GET endpoint
      tags:
      - Assets
  /assets/related:
    get:
      description: Retrieves one or more related assets when provided with one or
        more input assets.
      operationId: assets-get-related-assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assets'
        description: The body of the request is an object (Assets Model) with iterable
          internally.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: OK
      summary: "/assets/related [GET]"
      tags:
      - Assets
  /assets/search:
    get:
      description: |-
        Performs a search across your pieces and returns Assets (the results) based on your query. Presently, it only requires your query to be sent in the body. It is mandatory to include searchable_tags (comma-separated values of tags) or a query string.

        If a query is provided, a fuzzy search will be conducted. If searchable tags are provided, a tag-based search will be executed.

        If neither are included, a 500 error will be returned.
      operationId: search-assets
      parameters:
      - description: This is a string that you can use to search your assets.
        in: query
        name: query
        schema:
          type: string
        style: form
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: This is a comma separated value of tags used for search.
        in: query
        name: searchable_tags
        required: false
        schema:
          type: string
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/assets/search?query=string [GET]"
      tags:
      - Assets
    post:
      description: |-
        Enables searching through your pieces and returns Assets (the results) based on your query.

        When sending a query in the request body, fuzzy search is applied.

        Additionally, the request body can include a search space, currently as a list of UUIDs (and potentially Seeds in the future). Optional filters can also be included in the request body, represented as an iterable of filters, all of which are combined using AND operations.
      operationId: assets-search-with-filters
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetsSearchWithFiltersInput'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetsSearchWithFiltersOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/assets/search [POST]"
      tags:
      - Assets
  /assets/stream:
    get:
      description: Provides a WebSocket connection that emits changes to your assets.
      operationId: stream-assets
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: OK
      summary: "/assets/stream [WS]"
      tags:
      - Assets
  /assets/stream/transferables:
    get:
      description: "Provides a WebSocket connection that emits changes to your assets,\
        \ including their transferable."
      operationId: get-assets-stream-transferables
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: OK
      summary: "/assets/stream/transferables [WS]"
      tags:
      - Assets
  /assets/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your asset's
        identifiers (UUIDs).
      operationId: assets-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
      summary: "/assets/stream/identifiers [WS]"
      tags:
      - Assets
  /assets:
    get:
      description: Get all of the users Assets.
      operationId: assets-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: "This will let us know if a developer, wants a snapshot related\
          \ to suggested content or normal content"
        in: query
        name: suggested
        required: false
        schema:
          type: boolean
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
          description: OK
      summary: "/assets [GET] Scoped to Assets"
      tags:
      - Assets
      x-internal: false
  /authorize:
    get:
      description: |-
        An endpoint that is used locally authenticate via a PKCE Flow.

        Example
        https://auth.pieces.services
        /authorize?audience=https%3A%2F%2Fpieces.us.auth0.com%2Fapi%2Fv2%2F&scope=email+profile+offline_access+openid&response_type=code&client_id=9sW4Pa1LEjX67l6VO14u0207NLYeXnu1&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fpkce%2Fresponse%2Fcode&code_challenge_method=S256&code_challenge=yxRssZxdfBpMigRmDxAety1QU72Bd5WnDUbtlsCZOnk&response_mode=form_post&state=4bd0b9a389b4b229602346c33913b4c3c199628a90011ab3a901302ab62b3832
      operationId: authorize-auth0
      parameters:
      - description: ' The unique identifier of the target API you want to access.'
        explode: true
        in: query
        name: audience
        required: true
        schema:
          example: https://pieces.us.auth0.com/api/v2/
          type: string
        style: form
      - description: "The scopes which you want to request authorization for. These\
          \ must be separated by a space. You can request any of the standard OpenID\
          \ Connect (OIDC) scopes about users, such as profile and email, custom claims\
          \ that must conform to a namespaced format, or any scopes supported by the\
          \ target API (for example, read:contacts). Include offline_access to get\
          \ a Refresh Token."
        explode: false
        in: query
        name: scope
        required: true
        schema:
          items:
            enum:
            - openid
            - email
            - profile
            - offline_access
            type: string
          type: array
        style: spaceDelimited
      - description: Indicates to Auth0 which OAuth 2.0 Flow you want to perform.
          Use code for Authorization Code Grant (PKCE) Flow.
        explode: true
        in: query
        name: response_type
        required: true
        schema:
          enum:
          - code
          example: code
          type: string
        style: form
      - description: Your application's Client ID.
        explode: true
        in: query
        name: client_id
        required: true
        schema:
          example: 9sW4Pa1LEjX67l6VO14u0207NLYeXnu1
          type: string
        style: form
      - description: An opaque value the clients adds to the initial request that
          Auth0 includes when redirecting the back to the client. This value must
          be used by the client to prevent CSRF attacks.
        explode: true
        in: query
        name: state
        required: false
        schema:
          type: string
        style: form
      - description: The URL to which Auth0 will redirect the browser after authorization
          has been granted by the user.
        explode: true
        in: query
        name: redirect_uri
        required: false
        schema:
          type: string
        style: form
      - description: "Method used to generate the challenge. The PKCE spec defines\
          \ two methods, S256 and plain, however, Auth0 supports only S256 since the\
          \ latter is discouraged."
        explode: true
        in: query
        name: code_challenge_method
        required: true
        schema:
          enum:
          - S256
          example: S256
          type: string
        style: form
      - description: Generated challenge from the code_verifier.
        explode: true
        in: query
        name: code_challenge
        required: true
        schema:
          example: yxRssZxdfBpMigRmDxAety1QU72Bd5WnDUbtlsCZOnk
          type: string
        style: form
      - description: The name of the connection configured to your application.
        explode: true
        in: query
        name: connection
        required: false
        schema:
          type: string
        style: form
      - description: "To initiate a silent authentication request, use prompt=none\
          \ (see Remarks for more info)."
        explode: true
        in: query
        name: prompt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: response_mode
        required: true
        schema:
          enum:
          - form_post
          - fragment
          - query
          - web_message
          type: string
        style: form
      responses:
        "200":
          content:
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/ResultedPKCE'
          description: OK
      summary: "https://auth.pieces.services/authorize [GET]"
      tags:
      - Auth0
  /backup/asset:
    post:
      operationId: backup-asset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
      responses:
        "204":
          description: No Content
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, or they cannot Backup to the Cloud."
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: |-
            Network Authentication Required, This means that you user needs to be authenticated with OS inorder to backup. The User also need to be connected to their cloud to backup.(If either of the 2 are not connected we will return a 511)

            TODO thinking about returning a more comprehensive value for digestion on the recieving side.
      summary: "/backup/asset [POST]"
      tags:
      - Backup
  /backup:
    post:
      description: ""
      operationId: backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assets'
      responses:
        "204":
          description: No Content
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, or they cannot Backup to the Cloud."
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: |-
            Network Authentication Required, This means that you user needs to be authenticated with OS inorder to backup. The User also need to be connected to their cloud to backup.(If either of the 2 are not connected we will return a 511)

            TODO thinking about returning a more comprehensive value for digestion on the recieving side.
      summary: "/backup [POST]"
      tags:
      - Backup
  /classification/generic/convert:
    post:
      description: |
        This endpoint converts on a best effort basis from one generic format to another, i.e. from Code to HLJS
      operationId: convert-generic-classification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededFormat'
        description: |
          This is a seededFormat that we want to turn into a specific rendering SeededFormat.

          Ensure that you pass through a fragment.string.raw

          Ensure that you pass through a classification with the generic/specific/rendering all specified
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeededFormat'
          description: OK - The SeededFormat that was successfully converted to the
            rendering format that was specified.
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "501":
          description: Generic Classification Conversion Not Implemented
      summary: Convert Generic Classification
      tags:
      - Classification
  /code_analyses:
    get:
      description: "This will get a snapshot of all of your code analyses, a code\
        \ analysis is attached to an analysis."
      operationId: code-analyses-snapshot
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeAnalyses'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - CodeAnalyses
  /connect:
    post:
      description: Abstracts a bootup/connection for a specific context.
      operationId: connect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConnectorConnection'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Context'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
          description: "Bad Request, Application Failed to connect, Please ensure\
            \ this is a valid integration. This happens in the case a developer provides\
            \ and incorrect {application} (applicationId) within the route that doest\
            \ match a preregisterd integration."
      security: []
      summary: "/connect [POST]"
      tags:
      - Connector
  /conversation/{conversation}/messages:
    get:
      description: Retrieves messages specific to a particular conversation.
      operationId: conversation-specific-conversation-messages
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessages'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/messages [GET]"
      tags:
      - Conversation
  /conversation/{conversation}/anchors/disassociate/{anchor}:
    post:
      description: "Updates both the anchor and the conversation, deleting (disassociating)\
        \ them simultaneously."
      operationId: conversation-disassociate-anchor
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/anchors/disassociate/{anchor} [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/summarize:
    post:
      description: "Generates a summary of a given conversation and saves it as an\
        \ annotation associated with the conversation. It returns a reference to the\
        \ annotation, which serves as the summary."
      operationId: conversation-summarize
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationSummarizeInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationSummarizeOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/summarize [POST]"
      tags:
      - Conversation
  /conversation/{conversation}:
    get:
      description: Retrieves a specific conversation.
      operationId: conversation-get-specific-conversation
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Website not found.
      summary: "/conversation/{conversation} [GET]"
      tags:
      - Conversation
  /conversations/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your conversation
        identifiers (UUIDs).
      operationId: conversations-stream-identifiers
      responses: {}
      summary: "/conversations/stream/identifiers [WS]"
      tags:
      - Conversations
  /conversations/{conversation}/delete:
    post:
      description: Deletes a specific conversation.
      operationId: conversations-delete-specific-conversation
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations/{conversation}/delete [POST]"
      tags:
      - Conversations
  /conversations/create:
    post:
      description: Creates a specific conversation.
      operationId: conversations-create-specific-conversation
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConversation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations/create [POST]"
      tags:
      - Conversations
  /conversation/{conversation}/scores/increment:
    post:
      description: Increment scores associated with a conversation. It accepts a SeededScoreIncrement
        object as input to adjust the scores accordingly based on the provided data.
      operationId: conversation-scores-increment
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/scores/increment [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/assets/disassociate/{asset}:
    post:
      description: "Updates both the asset and the conversation, effectively disassociating\
        \ them."
      operationId: conversation-disassociate-asset
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/assets/disassociate/{asset} [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/rename:
    post:
      description: Renames a specific conversation using machine learning (ML) techniques.
      operationId: conversation-specific-conversation-rename
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/rename [POST]"
      tags:
      - Conversation
  /conversations/identifiers:
    get:
      description: Retrieves all the UUIDs associated with a Conversation.
      operationId: conversations-identifiers-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlattenedConversations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations/identifiers [GET]"
      tags:
      - Conversations
  /conversations:
    get:
      description: Retrieves a snapshot of a specific conversation.
      operationId: conversations-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations [GET]"
      tags:
      - Conversations
  /conversation/{conversation}/assets/associate/{asset}:
    post:
      description: "Updates both the asset and the conversation, associating the two\
        \ together."
      operationId: conversation-associate-asset
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/assets/associate/{asset} [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/anchors/associate/{anchor}:
    post:
      description: "Updates both the anchor and the conversation, associating them\
        \ together."
      operationId: conversation-associate-anchor
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/anchors/associate/{anchor} [POST]"
      tags:
      - Conversation
  /conversation/update:
    post:
      description: Updates a specific conversation.
      operationId: conversation-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conversation'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/update [POST]"
      tags:
      - Conversation
  /conversations/create/from_asset/{asset}:
    post:
      description: Creates a conversation based on an asset. It initiates a conversation
        and generates an initial message that includes a summary of the asset used
        as contextual grounding.
      operationId: conversations-create-from-asset
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationsCreateFromAssetOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations/create/from_asset/{asset} [POST]"
      tags:
      - Conversations
  /conversation/{conversation}/grounding/messages/associate/{message}:
    post:
      description: "Stores the grounding context for a conversation. It allows to\
        \ associate a message with the conversation's grounding object, facilitating\
        \ contextual understanding and management of the conversation."
      operationId: conversation-grounding-messages-associate-message
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/grounding/messages/associate/{message}\
        \ [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/grounding/messages/disassociate/{message}:
    post:
      description: "Removes a specific grounding context for a conversation, and allows\
        \ us to disassociate a message from the conversation's grounding object."
      operationId: conversation-grounding-messages-disassociate-message
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/grounding/messages/disassociate/{message}\
        \ [POST]"
      tags:
      - Conversation
  /database/export:
    get:
      description: This is going to export your current database.
      operationId: database-export
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportedDatabase'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - Database
  /database/import:
    post:
      description: "This is going to take in a database, and merge it with the current\
        \ database. This will revert your database back to it original form if this\
        \ request fails."
      operationId: database-import
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportedDatabase'
        description: ""
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, and they cannot create a shareable link."
      summary: "/database/import [POST]"
      tags:
      - Database
  /discovery/discover/sensitives:
    post:
      description: "This endpoint will accept an array of text values, and attampt\
        \ to extract sensitive data out of it."
      operationId: discovery_discover_sensitives
      parameters:
      - description: For most cases set to true. If this is set to true we will handle
          the behavior automically or else we will not proactively handle specific
          behavior but we will let the developer decide the behavior.
        in: query
        name: automatic
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededDiscoverableSensitives'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredSensitives'
          description: OK
      summary: "/discovery/discover/sensitives [POST]"
      tags:
      - Discovery
  /discovery/discover/tags/related:
    post:
      description: This will take in a tag or multiple tags and return all the tags
        that are related to the tag or tag provide in the body.
      operationId: discovery-discover-tags-related
      parameters:
      - description: For most cases set to true. If this is set to true we will handle
          the behavior automically or else we will not proactively handle specific
          behavior but we will let the developer decide the behavior.
        in: query
        name: automatic
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededDiscoverableRelatedTags'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredRelatedTags'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/discovery/discover/tags/related [POST]"
      tags:
      - Discovery
  /discovery/discover/assets/html:
    post:
      description: This is the discover discover assets html endpoint. The goal of
        this endpoint is to either take an iterable of urls and pages(an html string)
        and extract all the assets from the iterable.
      operationId: discovery-discover-assets-html
      parameters:
      - description: For most cases set to true. If this is set to true we will handle
          the behavior automically or else we will not proactively handle specific
          behavior but we will let the developer decide the behavior.
        in: query
        name: automatic
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededDiscoverableHtmlWebpages'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredHtmlWebpages'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/discovery/discover/assets/html[POST]"
      tags:
      - Discovery
  /discovery/discover/assets:
    post:
      description: "This is the endpoint used for bulk import. In both cases of the\
        \ bulk import flow, fragments or files. When we already have \"snippets\"\
        \ or fragments to discover and now our job is to check if they are actually\
        \ valid snippets(clustering). Otherwise, we should have a file to parse &&\
        \ snippitize and then run through the clustering."
      operationId: discovery_discover_assets
      parameters:
      - description: For most cases set to true. If this is set to true we will handle
          the behavior automically or else we will not proactively handle specific
          behavior but we will let the developer decide the behavior.
        in: query
        name: automatic
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededDiscoverableAssets'
        description: "The discovery/discover/assets endpoint will accept seededDiscoverableAssets,\
          \ that represetns an iterable of multiple fragments or files."
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveredAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/discovery/discover/assets [POST]"
      tags:
      - Discovery
  /distributions/create:
    post:
      description: This will create a new distribution.
      operationId: distributions-create-new-distribution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededDistribution'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/distributions/create [POST]"
      tags:
      - Distributions
  /distributions/{distribution}/delete:
    post:
      description: This will delete a specific distribution.
      operationId: distributions-delete-specific-distribution
      parameters:
      - description: This is the uuid of a specific distribution.
        in: path
        name: distribution
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/distributions/{distribution}/delete [POST]"
      tags:
      - Distributions
  /distributions:
    get:
      description: This will get a specific snapshot of all our distributions.
      operationId: distributions-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distributions'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/distributions [GET]"
      tags:
      - Distributions
  /distribution/update:
    post:
      description: This will update a specific Distribution.
      operationId: distribution-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Distribution'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/distribution/update [POST]"
      tags:
      - Distribution
  /distribution/{distribution}:
    get:
      description: This will get a specific snapshot of a distribution.
      operationId: distributions-specific-distribution-snapshot
      parameters:
      - description: This is the uuid of a specific distribution.
        in: path
        name: distribution
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Distribution'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Distribution not found.
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/distribution/{distribution} [GET]"
      tags:
      - Distribution
  /external_provider/api_key/create:
    post:
      description: This will create a specific external_provider api_key from a specific
        user Auth0UserMetadata
      operationId: external_provider-api_key-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecreatedExternalProviderApiKey'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedExternalProviderApiKey'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/external_provider/api_key/create [POST]"
      tags:
      - ExternalProvider
  /external_provider/api_key/update:
    post:
      description: This will update a specific external_provider api_key from a specific
        user Auth0UserMetadata
      operationId: external_provider-api_key-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreupdatedExternalProviderApiKey'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedExternalProviderApiKey'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/external_provider/api_key/update [POST]"
      tags:
      - ExternalProvider
  /external_provider/api_key/delete:
    post:
      description: This will remove a specific external_provider api_key from a specific
        user Auth0UserMetadata
      operationId: external_provider-api_key-delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredeletedExternalProviderApiKey'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletedExternalProviderApiKey'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/external_provider/api_key/delete [POST]"
      tags:
      - ExternalProvider
  /format/{format}:
    get:
      description: Get a snapshot of a specific format.
      operationId: format-snapshot
      parameters:
      - description: The id (uuid) for a specific format.
        in: path
        name: format
        required: true
        schema:
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferable
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: OK
      summary: "/format/{format} [GET] Scoped to Format"
      tags:
      - Format
  /format/{format}/analysis:
    get:
      description: This will get an analysis from a format's id.
      operationId: format-analysis
      parameters:
      - description: The id (uuid) for a specific format.
        in: path
        name: format
        required: true
        schema:
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/format/{format}/analysis [GET]"
      tags:
      - Format
  /format/reclassify:
    post:
      description: This endpoint will be used to reclassify a single Format.
      operationId: format-reclassify
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferable
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatReclassification'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: OK
      summary: "/format/reclassify [POST]"
      tags:
      - Format
  /format/update/value:
    post:
      description: |-
        This will update a format's value, ie, a formats fragment or file depending on what is provided.

        code/text fragment behavior: If this format is an asset.preview.base we will update the asset.original's value. if this format is an asset.preview.original we will update the asset.preview.base's value.

        code/text file behavior: If the the format that is update is the asset.preview.base is a fragment and the asset.original is file then we will update the asset.original's value to be bytes or string respectively. This goes the same for orignal to preview but will be go the reverse order so if the original is a file we will update the preview base's fragment string.

        image fragment/file: We will not modify preview -> orignal or original -> preview here. so there are zero side effects in this case, and will update as normal. (this will be the case for all other value updates.)
      operationId: format-update-value
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferable
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Format'
        description: This is the format that you want to update.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: "OK, you will get an updated format."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "[POST] /format/update/value"
      tags:
      - Format
  /formats/{format}:
    get:
      description: Request a specific format when given a id (uuid in path params)
      operationId: formats-specific-format-snapshot
      parameters:
      - description: The id (uuid) for a specific format.
        in: path
        name: format
        required: true
        schema:
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          format: uuid
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferable
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Format'
          description: OK
      summary: "/formats/{format} [GET] Scoped to Formats"
      tags:
      - Formats
  /formats:
    get:
      description: Get all of your formats for a given user.
      operationId: formats-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Formats'
          description: OK
      summary: "/formats [GET] Scoped to Formats"
      tags:
      - Formats
  /github/gists/import:
    post:
      description: |-
        This will attempt to get all the gist availble and return them to the user as a DiscoveredAssets.

        if automatic is true we will automatically create the asset.

        v1. will just get all the users' gists. implemented.
        v2. can get specific a public gist.
      operationId: import-github-gists
      parameters:
      - description: For most cases set to true. If this is set to true we will handle
          the behavior automically or else we will not proactively handle specific
          behavior but we will let the developer decide the behavior.
        in: query
        name: automatic
        schema:
          default: true
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededGithubGistsImport'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seeds'
          description: OK
        "412":
          content:
            text/plain:
              schema:
                type: string
          description: "Precondition Failed, This means the user was not authenticated\
            \ with PiecesOS with github."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Network Authentication Required, Not logged into Pieces os\
            \ required the user to authenticate. or if the user is not connected to\
            \ their cloud."
      summary: "/github/gists/import [POST]"
      tags:
      - Github
  /hint/{hint}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: hint-scores-increment
      parameters:
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/hint/{hint}/scores/increment' [POST]"
      tags:
      - Hint
  /hint/{hint}:
    get:
      description: This will get a snapshot of a specific hint.
      operationId: hint-specific-hint-snapshot
      parameters:
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hint'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hint/{hint} [POST]"
      tags:
      - Hint
  /hint/update:
    post:
      description: This will update a specific hint.
      operationId: hint-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hint'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hint/update [POST]"
      tags:
      - Hint
  /hints/create:
    post:
      description: This will create a hint.
      operationId: hints-create-new-hint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededHint'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hint'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hints/create [POST]"
      tags:
      - Hints
  /hints/{hint}/delete:
    post:
      description: This will delete a specific hint.
      operationId: hints-delete-specific-hint
      parameters:
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hints/{hint}/delete [POST]"
      tags:
      - Hints
  /hints:
    get:
      description: This will get a snapshot of all of the hints.
      operationId: hints-snapshot
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hints'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hints [GET]"
      tags:
      - Hints
  /image_analyses:
    get:
      description: "This will get a snapshot of all of your code analyses, a code\
        \ analysis is attached to an image analysis."
      operationId: image-analyses-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageAnalyses'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - ImageAnalyses
  /linkify/multiple:
    post:
      description: '- assumption that you have already backed up the asset''s that
        you are sending to this endpoint.(b/c the assets are ids.)'
      operationId: linkify-multiple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkifyMultiple'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: OK
        "409":
          content:
            text/plain:
              schema:
                type: string
          description: "If a name is passed in as an optional property, and the name\
            \ is already take we will not be able to assign the name."
        "413":
          content:
            text/plain:
              schema:
                type: string
          description: Request Entity Too Large
        "417":
          content:
            text/plain:
              schema:
                type: string
          description: "Expectation Failed, if this status is return that means that\
            \ you did not fully upload all your assets that you are attempting to\
            \ add to a collection."
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, and they cannot create a shareable link."
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: |-
            Network Authentication Required, This means that you user needs to be authenticated with OS inorder to create shareable links. The User also need to be connected to their cloud to create shareable links.(If either of the 2 are not connected we will return a 511)

            TODO thinking about returning a more comprehensive value for digestion on the recieving side.
      summary: "/linkify/multiple [POST]"
      tags:
      - Linkify
  /linkify/{share}/revoke:
    post:
      description: This will revoke a link.
      operationId: linkify-share-revoke
      parameters:
      - explode: false
        in: path
        name: share
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: "OK, this is the uuid of the share that was revoked."
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, and they cannot revoke a shareable link."
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: |-
            Network Authentication Required, This means that you user needs to be authenticated with OS inorder to create shareable links. The User also need to be connected to their cloud to create shareable links.(If either of the 2 are not connected we will return a 511)

            TODO thinking about returning a more comprehensive value for digestion on the recieving side.
      summary: "[POST} /linkify/{share}/revoke"
      tags:
      - Linkify
  /linkify:
    post:
      description: ""
      operationId: linkify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Linkify'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: OK
        "412":
          content:
            text/plain:
              schema:
                type: string
          description: This means that Github Account has not been connected to this
            user yet.
        "413":
          content:
            text/plain:
              schema:
                type: string
          description: Request Entity Too Large
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user need\
            \ to update their local os, and they cannot create a shareable link."
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: |-
            Network Authentication Required, This means that you user needs to be authenticated with OS inorder to create shareable links. The User also need to be connected to their cloud to create shareable links.(If either of the 2 are not connected we will return a 511)

            TODO thinking about returning a more comprehensive value for digestion on the recieving side.
      summary: "/linkify [POST]"
      tags:
      - Linkify
  /machine_learning/text/technical_language/parsers/segmentation:
    post:
      description: |-
        This is a functional endpoint that will parse a message or text in to text or code.

        if the optional query param is passed along 'classify' then we will optionally classify the just the code that is segmented.
      operationId: segment-technical_language
      parameters:
      - description: "This will let us know if you want us to classifiy your code,\
          \ this is default to false."
        in: query
        name: classify
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnsegmentedTechnicalLanguage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentedTechnicalLanguage'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/machine_learning/text/technical_language/parsers/segmentation [POST]"
      tags:
      - MachineLearning
      x-pieces-internal: true
  /macos/assets/create:
    post:
      description: Exposes an endpoint for the MacOS Services plugin to send over
        MacOS Specific Data
      operationId: assets-create-new-asset-from-macos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededMacOSAsset'
        description: A SeededMacosApplication which contains the value and an Application
          Instance
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/macos/assets/create [Post]"
      tags:
      - MacOS
  /message/{message}:
    get:
      description: This will get a specific snapshot of a message
      operationId: message-specific-message-snapshot
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessage'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Website not found.
      summary: "/message/{message} [GET]"
      tags:
      - ConversationMessage
  /message/{message}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: message-scores-increment
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/message/{message}/scores/increment' [POST]"
      tags:
      - ConversationMessage
  /message/{message}/annotations/disassociate/{annotation}:
    post:
      description: This will enable us to dissassociate a message from an annotation.
      operationId: message-disassociate-annotation
      parameters:
      - description: This is a specific annotation uuid.
        in: path
        name: annotation
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/annotations/disassociate/{annotation} [POST]"
      tags:
      - ConversationMessage
  /message/{message}/annotations/associate/{annotation}:
    post:
      description: This will associate a message with an annotation.
      operationId: message-associate-annotation
      parameters:
      - description: This is a specific annotation uuid.
        in: path
        name: annotation
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/annotations/associate/{annotation} [POST]"
      tags:
      - ConversationMessage
  /message/update:
    post:
      description: This will update a conversation message.
      operationId: message-specific-message-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationMessage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessage'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/update [GET]"
      tags:
      - ConversationMessage
  /messages/create:
    post:
      description: This will create a Message on a specific conversation.
      operationId: messages-create-specific-message
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededConversationMessage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessage'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/messages/create [POST]"
      tags:
      - ConversationMessages
  /messages/{message}/delete:
    post:
      description: This will delete a specific message.
      operationId: messages-delete-specific-message
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/messages/{message}/delete [POST]"
      tags:
      - ConversationMessages
  /messages:
    get:
      description: This will get all the messages.
      operationId: messages-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessages'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/messages [GET]"
      tags:
      - ConversationMessages
  /metrics/formats:
    get:
      description: This is going to get a snapshot of our FormatsMetrics
      operationId: get-metrics-formats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormatsMetrics'
          description: OK
      summary: "/metrics/formats [GET]"
      tags:
      - Metrics
  /metrics/formats/ordered:
    get:
      description: This will return a list of code formats in desc order from most
        to least formats uploaded.
      operationId: metrics-formats-ordered
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderedMetrics'
          description: OK
      summary: "/metrics/formats/ordered [GET]"
      tags:
      - Metrics
  /model/{model}/load:
    post:
      description: "Loads a previously downloaded model into memory. It differs from\
        \ downloading, as downloading involves transferring the entire model to your\
        \ machine, while loading simply loads the model into memory."
      operationId: model-specific-model-load
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/{model}/load [POST]"
      tags:
      - Model
  /model/{model}/download/cancel:
    post:
      description: Cancels a specific model download that is currently in progress.
      operationId: model-specific-model-download-cancel
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/{model}/download/cancel [POST]"
      tags:
      - Model
  /model/{model}/download:
    post:
      description: Downloads a specific model to your local machine.
      operationId: model-specific-model-download
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/{model}/download [POST]"
      tags:
      - Model
  /model/{model}/download/progress:
    get:
      description: This is a WebSocket connection that provides real-time updates
        on the download progress of a specific model.
      operationId: model-specific-model-download-progress
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDownloadProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/{model}/download/progress [WS]"
      tags:
      - Model
  /model/{model}/unload:
    post:
      description: Unloads a previously loaded model from memory and effectively frees
        up the RAM consumed by the model.
      operationId: model-specific-model-unload
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/{model}/unload [POST]"
      tags:
      - Model
  /model/{model}:
    get:
      description: Retrieves a specific ML model.
      operationId: models-specific-model-snapshot
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: model was not found.
      summary: "/model/{model} [GET]"
      tags:
      - Model
  /model/update:
    post:
      description: Updates a machine learning model. This functionality is exclusively
        available for models with the 'custom:true' setting.
      operationId: model-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/model/update [POST]"
      tags:
      - Model
  /model/{model}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: model-scores-increment
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/model/{model}/scores/increment' [POST]"
      tags:
      - Model
  /models/create:
    post:
      description: "Creates a machine learning model. By default, all models created\
        \ through this endpoint will have the 'custom' attribute set to true. Additionally,\
        \ the endpoint ensures that no duplicate models exist before creating a new\
        \ one."
      operationId: models-create-new-model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededModel'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models/create [POST]"
      tags:
      - Models
  /models/{model}/delete:
    post:
      description: "Deletes a specific model. It is exclusively available for custom\
        \ models with the 'custom: true' attribute."
      operationId: models-delete-specific-model
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models/{model}/delete [POST]"
      tags:
      - Models
  /models/{model}/delete/cache:
    post:
      description: "Deletes the data associated with a specific model, such as assets\
        \ or libraries downloaded specifically for this model. \n\nNote: This functionality\
        \ is currently only available for LLM models."
      operationId: models-delete-specific-model-cache
      parameters:
      - description: model id
        in: path
        name: model
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelDeleteCacheInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelDeleteCacheOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models/{model}/delete/cache [POST]"
      tags:
      - Models
  /models/unload:
    post:
      description: Unloads all available machine learning models that are unloadable.
      operationId: unload-models
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models/unload [POST]"
      tags:
      - Models
  /models:
    get:
      description: This will get a snapshot of all of your models.
      operationId: models-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models [GET]"
      tags:
      - Models
  /notifications/local/send:
    post:
      description: Retrieves a snapshot of all available models.
      operationId: send-local-notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
      responses:
        "200":
          description: OK
      summary: Send notification
      tags:
      - Notifications
  /oauth/token:
    post:
      description: |
        An endpoint to generate a OAuth Token for an authentication flow.
      operationId: exchange-for-auth0-token
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenizedPKCE'
        description: The needed properties to exchange a PKCE Code for an OAuth Token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthToken'
          description: OK
      summary: "https://auth.pieces.services/oauth/token [POST]"
      tags:
      - Auth0
  /ocr_analyses:
    get:
      description: "This will get a snapshot of all of your ocr analyses, an ocr analysis\
        \ is attached to an image analysis."
      operationId: ocr-analyses-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OCRAnalyses'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - OCRAnalyses
  /open_ai/models/list:
    post:
      description: |-
        This will get a list of all of your Models from OpenAI w/ you user.auth0.openAI.apiKey.

        if the user is unauthenticated or if the openAI key doesnt exist or if it is invalid we will return a 401.

        Requires internet as this will ping out to OpenAI's server to get the models.
      operationId: open_ai-models-list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenAIModelsListInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpenAIModelsListOutput'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/open_ai/models/list [POST]"
      tags:
      - OpenAI
  /os/filesystem/files/pick:
    post:
      description: This will trigger a filer picker and return the string paths of
        the files that were selected.
      operationId: os-filesystem-pick-files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilePickerInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/filesystem/files/pick [POST]"
      tags:
      - OS
  /os/filesystem/folders/pick:
    post:
      description: This will trigger a folder picker and return the string paths of
        the folders that were selected.
      operationId: os-filesystem-pick-folders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/filesystem/folders/pick [POST]"
      tags:
      - OS
  /os/link_provider:
    post:
      description: |-
        This will link an external provider to your current auth0 account.

        Will throw errors if your user is not signed in.
      operationId: link-provider
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededExternalProvider'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnedUserProfile'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Unauthorized, this means your user is not authenticated"
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/link_provider [POST]"
      tags:
      - OS
  /os/restart:
    get:
      description: "This will restart PiecesOS, if successfull with return a 204.\
        \ This is a LOCALOS Only Endpoint."
      operationId: os-restart
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Your GET endpoint
      tags:
      - OS
  /os/sign_in:
    post:
      description: A trigger that launches a Sign into OS Server
      operationId: sign-into-OS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      summary: ""
      tags:
      - OS
  /os/sign_out:
    post:
      description: A trigger that signs out a user from the OS
      operationId: sign-out-of-OS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: OK
      summary: "/os/sign_out [POST]"
      tags:
      - OS
  /os/update/check:
    post:
      description: "This is a helper endpoint that will check the status of an update\
        \ for PiecesOS. IE if there is an update downloading, if there is one available,\
        \ but the downloading has not started... etc"
      operationId: os-update-check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UncheckedOSServerUpdate'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerUpdateStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/update/check [POST]"
      tags:
      - OS
  /person/{person}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: person-scores-increment
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/person/{person}/scores/increment' [POST]"
      tags:
      - Person
  /person/{person}:
    get:
      description: This will get a snapshot of a specific person
      operationId: person-snapshot
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person} [GET]"
      tags:
      - Person
  /person/update:
    post:
      description: This will update a specific person
      operationId: update-person
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
      summary: "/person/update [POST]"
      tags:
      - Person
  /persons/create:
    post:
      description: This will create a new person.
      operationId: persons-create-new-person
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededPerson'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/persons/create [POST]"
      tags:
      - Persons
  /persons/{person}/delete:
    post:
      description: This will delete a specific person.
      operationId: persons-delete-person
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/persons/{person}/delete [POST]"
      tags:
      - Persons
  /persons:
    get:
      description: This will get a snapshot of all of your people
      operationId: persons-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Persons'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/persons [GET]"
      tags:
      - Persons
  /pkce/challenge:
    get:
      description: An endpoint that returns a PKCE Challenge
      operationId: get-challenge
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKCE'
          description: OK
      summary: Your GET endpoint
      tags:
      - PKCE
  /pkce/clear:
    post:
      description: This is a function to Clear a PKCE Authentication Flow
      operationId: clear-PKCE
      parameters: []
      responses:
        "204":
          description: No Content
      summary: "/pkce/clear [POST]"
      tags:
      - PKCE
  /pkce/code:
    post:
      description: An endpoint to get the PKCE Code - this endpoint proxies the call
        out to Authorize within Auth0
      operationId: generate-code
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededPKCE'
        description: All of the properties that the client might want to send over
          to authorize a PKCE Code Flow
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKCE'
          description: OK
      summary: "/pkce/code [POST]"
      tags:
      - PKCE
  /pkce/response/code:
    post:
      description: This is a callback function hosted to help pass along the ResultedPKCE
        code from authorize through to the callback.
      operationId: respond-with-code
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResultedPKCE'
        description: Form Data From Return Callback (Driven by Auth0)
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKCE'
            text/html:
              schema:
                description: HTML to be returned to the page for redirect.
                type: string
          description: OK
      summary: "/pkce/response/code [POST]"
      tags:
      - PKCE
  /pkce/token:
    post:
      description: "A proxy endpoint for PKCE token generation, internally calls Auth0\
        \ /oauth/token"
      operationId: generate-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizedPKCE'
        description: The needed properties to exchange a PKCE Code for an OAuth Token
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKCE'
          description: OK
      summary: "/pkce/token [POST]"
      tags:
      - PKCE
  /qgpt/hints:
    post:
      description: "Generates suggested questions that users can ask. It accepts the\
        \ answer displayed to the user, relevant code snippets used for the answer,\
        \ and the previous query as inputs. In return, it provides a list of questions\
        \ that can be presented to the user."
      operationId: hints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTHintsInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTQuestionOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/qgpt/hints [POST]"
      tags:
      - QGPT
  /qgpt/persons/related:
    post:
      description: |-
        Utilize this endpoint for Who Support, identifying individuals who can provide assistance when given context such as a Seed or a QGPT Conversation, for example.

        Input:
          - (optional) seed: Seed - Only supports fragments for now.
          - (optional) conversation: QGPTConversation.

        Output:
          - persons: Persons
      operationId: persons-related
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTPersonsRelatedInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTPersonsRelatedOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/qgpt/persons/related [POST]"
      tags:
      - QGPT
  /qgpt/question:
    post:
      description: |-
        Processes relevant code snippets or UUIDs returned from the /qgpt/relevance endpoint, along with a question query, to provide possible answers.

        Note:
          - Relevant seeds must either include an ID used within the /qgpt/relevance endpoint or a seed with a fragment/string; otherwise, an error will be thrown.
          - This endpoint utilizes your query and relevant snippets to generate multiple answers, each accompanied by a score.
      operationId: question
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTQuestionInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTQuestionOutput'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "429":
          content:
            text/plain:
              schema:
                type: string
          description: Too Many Requests (Rate limit or quota exceeded)
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "503":
          content:
            text/plain:
              schema:
                type: string
          description: "Service Unavailable, (engine is currently overloaded)"
      summary: "/qgpt/question [POST]"
      tags:
      - QGPT
  /qgpt/relevance:
    post:
      description: "This is the first phase to the QGPT flow. \nPlease one of the\
        \ following.\n1. provide an absolute path on the users machine that we can\
        \ use locally.\n2. provide Seeds that you want to compare to, which will be\
        \ ONLY fragment/string values(all other values will be ignored)\n3. provide\
        \ assets, here you can provide an iterable of the asset id, and we will do\
        \ the rest\n4. you can set your database boolean to true which will tell us\
        \ to use your entire DB as the query space.\n\nrequired - query: string; This\
        \ is the question of the user.\noptional - question: boolean; This will by-pass\
        \ the second endpoint and just ask the question and return the results(as\
        \ an ease of use bool)\n\nThis endpoint will embed everything. and will return\
        \ the relevance snippets that we will use in the next phase, to answer your\
        \ question.\n\non the UI: we can show this to users (around this is the snippets\
        \ we used to answer your question.)\n\nNext: feed this information to the\
        \ /qgpt/question [POST] endpoint to get your question answered.(unless you\
        \ included the question:true optional boolean, then you will get the results\
        \ from here.)"
      operationId: relevance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTRelevanceInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTRelevanceOutput'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "429":
          content:
            text/plain:
              schema:
                type: string
          description: Too Many Requests (Rate limit or quota exceeded)
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "503":
          content:
            text/plain:
              schema:
                type: string
          description: "Service Unavailable, (engine is currently overloaded)"
      summary: "/qgpt/relevance [POST]"
      tags:
      - QGPT
  /qgpt/reprompt:
    post:
      description: "This will take in a followup question and the history of the conversation,\
        \ and emit your a prompt or query that you can pass to the /qgpt/relevance\
        \ and then the /qgpt/question endpoint to get your next answer."
      operationId: reprompt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTRepromptInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTRepromptOutput'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/qgpt/reprompt [POST]"
      tags:
      - QGPT
  /qgpt/stream:
    get:
      description: "Provides a WebSocket connection that streams inputs to the qGPT\
        \ model. It handles relevance and questions, but will throw an error if both\
        \ are passed in simultaneously. However, if you wish to utilize both question\
        \ and relevance, you can obtain stream results by passing relevance with the\
        \ option 'question:true'. It is designed to manage multiple conversations."
      operationId: qgpt-stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QGPTStreamInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QGPTStreamOutput'
          description: OK
        "401":
          content:
            application/json:
              schema:
                type: string
          description: "Invalid Authentication, Incorrect API key provided or organization"
        "429":
          content:
            application/json:
              schema:
                type: string
          description: Rate limit/Quota exceeded
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "503":
          content:
            application/json:
              schema:
                type: string
          description: The engine is currently overloaded
      summary: "/qgpt/stream [WS]"
      tags:
      - QGPT
  /relationship/{relationship}:
    get:
      description: This will return a single relationship object.
      operationId: relationships-specific-relationship-snapshot
      parameters:
      - description: this is a specific relationship uuid.
        in: path
        name: relationship
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationship'
          description: OK
      summary: "/relationship/{relationship} [GET]"
      tags:
      - Relationship
  /relationships:
    get:
      description: This will return all of the relationships that exists within your
        pieces db.
      operationId: relationships-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Relationships'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/relationships [GET]"
      tags:
      - Relationships
  /search/full_text:
    get:
      description: "This will run FTS for exact search, and will NOT run fuzzy matching.\
        \ This will only search the content within the "
      operationId: full-text-search
      parameters:
      - description: This is a string that you can use to search your assets.
        in: query
        name: query
        schema:
          type: string
        style: form
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/search/full_text [GET]"
      tags:
      - Search
  /search/neural_code:
    get:
      description: "This will run ncs on your assets. This will simply return FlattenedAssets,\
        \ but will just be the assetuuids that match."
      operationId: neural-code-search
      parameters:
      - description: This is a string that you can use to search your assets.
        in: query
        name: query
        schema:
          type: string
        style: form
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/search/neural_code [GET]"
      tags:
      - Search
  /search/tag_based:
    post:
      description: "This will run our tag based search, and return the assets that\
        \ best match your passed in tags. This will simply return FlattenedAssets,\
        \ but will just be the assetuuids that match."
      operationId: tag-based-search
      parameters:
      - description: "This is helper boolean that will give you the ability to also\
          \ include your pseudo assets, we will always default to false."
        in: query
        name: pseudo
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededAssetTags'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAssets'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/search/tag_based [POST]"
      tags:
      - Search
  /sensitive/{sensitive}:
    get:
      description: This will get a specific sensitive via the sensitive uuid.
      operationId: sensitive-snapshot
      parameters:
      - explode: false
        in: path
        name: sensitive
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensitive'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitive/{sensitive} [GET]"
      tags:
      - Sensitive
  /sensitive/{sensitive}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: sensitive-scores-increment
      parameters:
      - description: This is a uuid that represents a sensitive.
        in: path
        name: sensitive
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/sensitive/{sensitive}/scores/increment' [POST]"
      tags:
      - Sensitive
  /sensitive/update:
    post:
      description: This will update a specific sensitive
      operationId: update-sensitive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensitive'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensitive'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitive/update [POST]"
      tags:
      - Sensitive
  /sensitives/create:
    post:
      description: This will create a new sensitive model.
      operationId: sensitives-create-new-sensitive
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededSensitive'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensitive'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitives/create [POST]"
      tags:
      - Sensitives
  /sensitives/{sensitive}/delete:
    post:
      description: This will delete a sensitive based on the sensitive uuid.
      operationId: sensitives-delete-sensitive
      parameters:
      - description: This is a uuid that represents a sensitive.
        explode: false
        in: path
        name: sensitive
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: ""
      summary: "/sensitives/{sensitive}/delete [POST]"
      tags:
      - Sensitives
  /sensitives:
    get:
      description: This will get a snapshot of all of the sensitives.
      operationId: sensitives-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensitives'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitives [GET]"
      tags:
      - Sensitives
  /share/{share}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: share-scores-increment
      parameters:
      - description: Share id
        in: path
        name: share
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/share/{share}/scores/increment' [POST]"
      tags:
      - Share
  /share/{share}:
    get:
      description: Get the snapshot of a specific share.
      operationId: share-snapshot
      parameters:
      - description: Share id
        in: path
        name: share
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: OK
      summary: "/share/{share}"
      tags:
      - Share
  /share/update:
    post:
      description: "This endpoint will accept a Share that the user wants to update,\
        \ and will return a full Share that was updated!"
      operationId: share-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
        description: This is the Share that needs to be updated.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: OK
      summary: "/share/update [POST]"
      tags:
      - Share
  /shares/create:
    post:
      description: This endpoint will accept an asset. Response here will be a Share
        that was created.
      operationId: shares-create-new-share
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededShare'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: OK
      summary: "/shares/create [POST]"
      tags:
      - Shares
  /shares/{share}:
    get:
      description: This is an endpoint to enable a client to access a specific share
        through a provided share id.
      operationId: shares-specific-share-snapshot
      parameters:
      - description: Share id
        in: path
        name: share
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: A specific share per the provided share id.
      summary: "/shares/{share} [GET]"
      tags:
      - Shares
  /shares/{share}/delete:
    post:
      description: "This endpoint will just take a share id(as a url param) to delete\
        \ out of the shares table, will return the share id that was deleted."
      operationId: shares-delete-share
      parameters:
      - description: Share id
        in: path
        name: share
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
      summary: "/shares/{share}/delete [POST]"
      tags:
      - Shares
  /shares:
    get:
      description: This will return all of your shares. A Share is an asset that you
        as a user decided to share with another user via link.
      operationId: shares-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: OK
      summary: "/shares [GET]"
      tags:
      - Shares
  /tag/{tag}/assets/associate/{asset}:
    post:
      description: This will associate a tag with a asset.
      operationId: tag-associate-asset
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tag/{tag}/assets/associate/{asset} [POST]"
      tags:
      - Tag
  /tag/{tag}/assets/disassociate/{asset}:
    post:
      description: This will enable us to dissassociate a tag from a asset.
      operationId: tag-disassociate-asset
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tag/{tag}/assets/disassociate/{asset} [POST]"
      tags:
      - Tag
  /tag/{tag}/persons/disassociate/{person}:
    post:
      description: This will enable us to dissassociate a tag from a person.
      operationId: tag-disassociate-person
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tag/{tag}/persons/disassociate/{person} [POST]"
      tags:
      - Tag
  /tag/{tag}/persons/associate/{person}:
    post:
      description: This will associate a tag with a person.
      operationId: tag-associate-person
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tag/{tag}/persons/associate/{person} [POST]"
      tags:
      - Tag
  /tag/{tag}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: tag-scores-increment
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/tag/{tag}/scores/increment' [POST]"
      tags:
      - Tag
  /tag/{tag}:
    get:
      description: This will get a specific tag.
      operationId: tags-specific-tag-snapshot
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Tag was not found.
      summary: "/tag/{tag} [GET]"
      tags:
      - Tag
  /tag/update:
    post:
      description: This will update a specific tag.
      operationId: tag-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tag/update [POST]"
      tags:
      - Tag
  /tags/create:
    post:
      description: This will create a new tag.
      operationId: tags-create-new-tag
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededTag'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags/create [POST]"
      tags:
      - Tags
  /tags/exists:
    post:
      description: "This will check all of the tags in our database to see if this\
        \ specific provided tag actually exists, if not we will just return a null\
        \ tag in the output."
      operationId: tags-exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExistentMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingMetadata'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags/exists [POST]"
      tags:
      - Tags
  /tags/{tag}/delete:
    post:
      description: This will delete a specific tag.
      operationId: tags-delete-specific-tag
      parameters:
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags/{tag}/delete [POST]"
      tags:
      - Tags
  /tags:
    get:
      description: This will get a snapshot of all of your tags.
      operationId: tags-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags [GET]"
      tags:
      - Tags
  /ultra_suite/assets/create:
    post:
      description: This Endpoint will create an Asset that is sent from UltraSuite.
      operationId: assets-create-ultra-suite-asset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededUltraSuiteAsset'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
          description: OK
      summary: "/ultra_suite/assets/create [POST]"
      tags:
      - UltraSuite
  /user/clear:
    post:
      description: 'An endpoint to clear the current user. '
      operationId: clear-user
      responses:
        "204":
          description: No Content
      summary: /user/clear
      tags:
      - User
  /user/providers:
    get:
      description: |-
        This will retrieve all the users Providers that are connected to this account.

        If called locally. we will 501 - because it is not implemented locally yet.

        If called in the cloud, we will refresh && get your access tokens to access these providers.
      operationId: user-providers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnedUserProfile'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "501":
          content:
            text/plain:
              schema:
                type: string
          description: Not Implemented
      summary: Your GET endpoint
      tags:
      - User
  /user/select:
    post:
      description: This will select the current user.
      operationId: select-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth0User'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      security:
      - auth0: []
      summary: "/user/select [POST]"
      tags:
      - User
  /user/stream:
    get:
      description: Provides a WebSocket connection that streams user data.
      operationId: stream-user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      summary: "/user/stream [WS]"
      tags:
      - User
  /user/update/vanity:
    post:
      description: "This is a local route to update your vanityname. ie mark.pieces.cloud,\
        \ where \"mark\" is the vanityname."
      operationId: user-update-vanity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        description: "This will take an update userProfile, with the updated vanity\
          \ name!"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: "The original dns record was not found, please wait for cloud\
            \ connectivity to fully connect."
        "409":
          content:
            text/plain:
              schema:
                type: string
          description: "Conflict, This means that we were unable to update the username\
            \ because it was already taken."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Unable to create a username. Internal Server Error.
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Network Authentication Required, Cannot Update the Vanityname\
            \ of the user because the user is either not signed in or in not connected\
            \ to the cloud."
      summary: "/user/update/vanity [POST]"
      tags:
      - User
  /user/update:
    post:
      description: This will update a specific user in the database.
      operationId: update-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      summary: "/user/update [POST]"
      tags:
      - User
  /user:
    get:
      description: This will return a snapshot of the current user. This will return
        our ReturnUserProfile and the user on that object is just a UserProfile and
        can potentially be null.
      operationId: user-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnedUserProfile'
          description: OK
      summary: "/user [GET]"
      tags:
      - User
  /userinfo:
    get:
      description: Get the users info from the Auth0 API
      operationId: get-auth0-user-info
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth0User'
          description: OK
      security:
      - auth0: []
      summary: "https://auth.pieces.services/userinfo [GET]"
      tags:
      - Auth0
  /users/authenticate/from_token:
    post:
      description: Creates a User From a oAuth Token
      operationId: authenticate-from-oauth-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthToken'
        description: ""
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      security:
      - auth0: []
      summary: "/users/authenticate/from_token [POST]"
      tags:
      - Users
  /users/{user}/disconnect:
    post:
      description: Locally Removing a user for the purpose of Signing Out
      operationId: users-disconnect-user
      parameters:
      - explode: false
        in: path
        name: user
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: OK
      summary: "/users/{user}/disconnect [POST]"
      tags:
      - Users
  /users/{user}:
    get:
      description: "This enables the client to get the current user. \nThis endpoint\
        \ will return a UserPRofile or will throw an error since you are sending user\
        \ uid."
      operationId: users-specific-user-snapshot
      parameters:
      - description: The id (uuid) for a specific user.
        in: path
        name: user
        required: true
        schema:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          format: uuid
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
      summary: "/users/{user} [GET] Scoped to Users"
      tags:
      - Users
  /users:
    get:
      description: this will return a snapshot of all of the users that are in the
        users database. TODO might want to make this internal.
      operationId: users-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: OK
      summary: "/users [GET]"
      tags:
      - Users
  /v2/logout:
    get:
      description: https://auth0.com/docs/api/authentication#logout
      operationId: auth0-logout
      parameters:
      - description: The client ID of the Auth0 Instance
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: The URL that the logout endpoint will return to
        explode: true
        in: query
        name: returnTo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/html:
              schema:
                description: Likely to be a HTML Page!
                type: string
          description: OK
      summary: "https://auth.pieces.services/v2/logout [GET]"
      tags:
      - Auth0
  /website/update:
    post:
      description: This will update a specific website.
      operationId: website-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Website'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/update [POST]"
      tags:
      - Website
  /website/{website}/persons/associate/{person}:
    post:
      description: This will associate a website with a person.
      operationId: website-associate-person
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/persons/associate/{person} [POST]"
      tags:
      - Website
  /website/{website}/assets/disassociate/{asset}:
    post:
      description: This will enable us to dissassociate a website from a asset.
      operationId: website-disassociate-asset
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/assets/disassociate/{asset} [POST]"
      tags:
      - Website
  /website/{website}/assets/associate/{asset}:
    post:
      description: This will associate a website with a asset.
      operationId: website-associate-asset
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/assets/associate/{asset} [POST]"
      tags:
      - Website
  /website/{website}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: website-scores-increment
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/website/{website}/scores/increment' [POST]"
      tags:
      - Website
  /website/{website}:
    get:
      description: This will get a snapshot of a single website.
      operationId: websites-specific-website-snapshot
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Website not found.
      summary: "/website/{website} [GET]"
      tags:
      - Website
  /website/{website}/persons/disassociate/{person}:
    post:
      description: This will enable us to dissassociate a website from a person.
      operationId: website-disassociate-person
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/persons/disassociate/{person} [POST]"
      tags:
      - Website
  /websites/create:
    post:
      description: This will create a website and attach it to a specific asset.
      operationId: websites-create-new-website
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWebsite'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Website'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites/create [POST]"
      tags:
      - Websites
  /websites/exists:
    post:
      description: "This will check all of the websites in our database to see if\
        \ this specific provided website actually exists, if not we will just return\
        \ a null website in the output."
      operationId: websites-exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExistentMetadata'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingMetadata'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites/exists [POST]"
      tags:
      - Websites
  /websites/{website}/delete:
    post:
      description: This will delete a specific website!
      operationId: websites-delete-specific-website
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites/{website}/delete [POST]"
      tags:
      - Websites
  /websites:
    get:
      description: This will get a snapshot of all your websites.
      operationId: websites-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Websites'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites [GET]"
      tags:
      - Websites
  /conversation/{conversation}/websites/associate/{website}:
    post:
      description: "Updates both the website and the conversation, and associate them\
        \ together."
      operationId: conversation-associate-website
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/websites/associate/{website} [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/websites/disassociate/{website}:
    post:
      description: Allows us to disassociate a conversation from a specific website
      operationId: conversation-disassociate-website
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/websites/disassociate/{website} [POST]"
      tags:
      - Conversation
  /website/{website}/conversations/disassociate/{conversation}:
    post:
      description: This will enable us to dissassociate a website from a conversation.
      operationId: website-disassociate-conversation
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/conversations/disassociate/{conversation} [POST]"
      tags:
      - Website
  /website/{website}/conversations/associate/{conversation}:
    post:
      description: This will associate a website with a conversation.
      operationId: website-associate-conversation
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/conversations/associate/{conversation} [POST]"
      tags:
      - Website
  /applications/external:
    get:
      description: "Provides a snapshot of all external applications detected on the\
        \ user's machine, such as Microsoft Teams classic, Google Chat, Obsidian,\
        \ etc."
      operationId: applications-external-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedExternalApplications'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/applications/external [GET]"
      tags:
      - Applications
  /applications/external/related:
    get:
      description: "Retrieves a list of external applications installed on the user's\
        \ machine that have potential integrations with Pieces, including those not\
        \ yet installed by the user and those anticipated to be supported in the future."
      operationId: applications-external-related
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedExternalApplications'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/applications/external/related [GET]"
      tags:
      - Applications
  /machine_learning/text/technical_language/generators/personification:
    post:
      description: |-
        This is going to take in some personification details ie languages & personas.

        and will return generated Seeds that can be used as snippets post/pre onboarding.
      operationId: personification-technical-language-generation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreonboardedPersonaDetails'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardedPersonaDetails'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/machine_learning/text/technical_language/generators/personification\
        \ [GET]"
      tags:
      - MachineLearning
  /os/device/information:
    get:
      description: This will get information related to your specific device.
      operationId: os-device-information
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSDeviceInformationReturnable'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/device/information [GET]"
      tags:
      - OS
  /backups:
    get:
      description: |-
        This will get a snapshot of Backsup within the cloud.

        This endpoint requires our user to be authenticated and connected to the cloud.
      operationId: backups-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backups'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operations with\
            \ the cloud"
      summary: "/backups [GET]"
      tags:
      - Backups
  /backups/create:
    post:
      description: This take a local database and ensure that it is backed up to the
        cloud.
      operationId: backups-create-new-backup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededBackup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operations with\
            \ the cloud"
      summary: "/backups/create [POST]"
      tags:
      - Backups
  /backup/{backup}/restore:
    post:
      description: |-
        Given a backup identifier version_timestamp.

        we will restore a given backup from the cloud and override your local database!!!

        NOTE!!!! This will NOT sync, ie all local snippets will get replaced with the restored database.
      operationId: backup-restore-specific-backup
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operations with\
            \ the cloud"
      summary: "/backup/{backup}/restore [POST]"
      tags:
      - Backup
  /backups/{backup}/delete:
    post:
      description: This will delete a specific backup from the cloud.
      operationId: backups-delete-specific-backup
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backups/{backup}/delete [POST]"
      tags:
      - Backups
  /backups/create/streamed:
    post:
      description: |-
        This take a local database and ensure that it is backed up to the cloud.

        NOTE: This is a streamed version of the /backups/create. and Since the Generator is unable to generate a streamed endpoint. this is a place holder, and will need to be implemented isolated from the code generator.
      operationId: backups-create-new-backup-streamed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededBackup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStreamedProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backups/create/streamed [POST]"
      tags:
      - Backups
  /backups/create/streamed/websocket:
    get:
      description: |-
        WEBSOCKET VERSION! This take a local database and ensure that it is backed up to the cloud.

        NOTE: This is a streamed version of the /backups/create. and Since the Generator is unable to generate a streamed endpoint. this is a place holder, and will need to be implemented isolated from the code generator.
      operationId: backups-create-new-backup-streamed-websocket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededBackup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStreamedProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to perform this action"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backups/create/streamed/websocket [WS]"
      tags:
      - Backups
  /backup/{backup}/creation/cancel:
    post:
      description: |-
        This is Going to cancel a create backup (streamed) or not streamed that is currently in progress.

        This will throw a 500 if there is not a backup in progress.

        TODO: ADD mofe DESCRIPITON To this.
      operationId: backup-specific-creation-cancel
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/backup/{backup}/creation/cancel [POST]"
      tags:
      - Backup
  /backup/{backup}/creation/status:
    get:
      description: 'TODO add a description:'
      operationId: backup-specific-creation-status
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStatus'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/backup/{backup}/creation/status [GET]"
      tags:
      - Backup
  /backup/{backup}/restore/streamed:
    post:
      description: |-
        This take a local database and ensure that it is backed up to the cloud.

        NOTE: This is a streamed version of the /backups/<backup>/restore. and Since the Generator is unable to generate a streamed endpoint. this is a place holder, and will need to be implemented isolated from the code generator.
      operationId: backup-restore-specific-backup-streamed
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStreamedProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to change the beta status"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backup/{backup}/restore/streamed [POST]"
      tags:
      - Backup
  /backup/{backup}/restore/streamed/websocket:
    get:
      description: |-
        WEBOCKET IMPLEMENTATION: This take a local database and ensure that it is backed up to the cloud.

        NOTE: This is a streamed version of the /backups/<backup>/restore. and Since the Generator is unable to generate a streamed endpoint. this is a place holder, and will need to be implemented isolated from the code generator.
      operationId: backup-restore-specific-backup-streamed-websocket
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStreamedProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to change the beta status"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backup/{backup}/restore/streamed/websocket [WS]"
      tags:
      - Backup
  /backups/streamed/progress:
    get:
      description: "This endpoint is a Websocket, that will list all the current websockets\
        \ that are in progress, this will emit changes as there are changes with the\
        \ backups or restores in progress."
      operationId: backups-streamed-progress
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupsStreamedProgress'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/backups/streamed/progress [WS]"
      tags:
      - Backups
  /backup/{backup}/restoration/cancel:
    post:
      description: |-
        This will cancel a Restoration that is in progress and restore to the original database.

        Note: if there is not a restore in progress we will return a 500.

        TODO add
      operationId: backup-specific-restoration-cancel
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Backup'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/backup/{backup}/restoration/cancel [POST]"
      tags:
      - Backup
  /backup/{backup}/restoration/status:
    get:
      description: 'TODO add a description:'
      operationId: backup-specific-restoration-status
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupStatus'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/backup/{backup}/restoration/status [GET]"
      tags:
      - Backup
  /backup/{backup}:
    get:
      description: This will just get the metadata associated with a specific backup.
      operationId: backup-specific-backup-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific backup.(version_timestamp)
        in: path
        name: backup
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to change the beta status"
        "505":
          content:
            text/plain:
              schema:
                type: string
          description: "HTTP Version Not Supported, This means that your user needs\
            \ to update their local os, or they cannot perform backup operation with\
            \ the cloud"
      summary: "/backup/{backup} [GET]"
      tags:
      - Backup
  /message/update/value:
    post:
      description: This will update the value of a conversation message.
      operationId: message-update-value
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationMessage'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationMessage'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/update/value [POST]"
      tags:
      - ConversationMessage
  /user/refresh:
    get:
      description: This will refresh a user.
      operationId: refresh-user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/user/refresh [GET]"
      tags:
      - User
  /ranges:
    get:
      description: This will get a snapshot of all your ranges.
      operationId: ranges-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ranges'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ranges [GET]"
      tags:
      - Ranges
  /ranges/{range}/delete:
    post:
      description: This will delete a specific range from the database!
      operationId: ranges-delete-specific-range
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ranges/{range}/delete [POST]"
      tags:
      - Ranges
  /ranges/create:
    post:
      description: This will create a new Range in the database.
      operationId: ranges-create-new-range
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededRange'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ranges/create [POST]"
      tags:
      - Ranges
  /range/{range}:
    get:
      description: This will get a snapshot of a single range.
      operationId: ranges-specific-range-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Range not found.
      summary: "/range/{range} [GET]"
      tags:
      - Range
  /range/update:
    post:
      description: This will update a specific range.
      operationId: range-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Range'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Range'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/range/update [POST]"
      tags:
      - Range
  /range/{range}/conversations/grounding/temporal_range/workstreams/associate/{conversation}:
    post:
      description: This will associate a range with a conversation(grounding.temporal.workstreams).
        This will do the same thing as the conversation equivalent.
      operationId: range-associate-conversation-grounding-temporal_range-workstreams
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/range/{range}/conversations/grounding/temporal_range/workstreams/associate/{conversation}\
        \ [POST]"
      tags:
      - Range
  /range/{range}/conversations/grounding/temporal_range/workstreams/disassociate/{conversation}:
    post:
      description: This will enable us to disassociate a range from a conversation(grounding.temporal.workstreams).
        This will do the same thing as the conversation equivalent.
      operationId: range-disassociate-conversation-grounding-temporal_range-workstreams
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/range/{range}/conversations/grounding/temporal_range/workstreams/disassociate/{conversation}\
        \ [POST]"
      tags:
      - Range
  /conversation/{conversation}/grounding/temporal_range/workstreams/associate/{range}:
    post:
      description: This will associate a workstream(range) with a conversation. This
        will do the same thing as the range equivalent.
      operationId: conversation-associate-grounding-temporal_range-workstream
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/grounding/temporal/ranges/associate/{range}\
        \ [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/grounding/temporal_range/workstreams/disassociate/{range}:
    post:
      description: This will enable us to disassociate a workstream(range) from a
        conversation. This will do the same thing as the range equivalent.
      operationId: conversation-disassociate-grounding-temporal_range-workstream
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/grounding/temporal_range/workstreams/disassociate/{range}\
        \ [POST]"
      tags:
      - Conversation
  /range/{range}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a range with a workstream summary. This will
        do the same thing as the workstreamSummary equivalent.
      operationId: range-associate-workstream_summary
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/range/{range}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Range
  /range/{range}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate a range from a workstream summary.
        This will do the same thing as the workstreamSummary equivalent.
      operationId: range-disassociate-workstream_summary
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/range/{range}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Range
  /range/{range}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: range-scores-increment
      parameters:
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/range/{range}/scores/increment' [POST]"
      tags:
      - Range
  /workstream_events:
    get:
      description: This will get a snapshot of all your workstream events.
      operationId: workstream_events-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamEvents'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_events [GET]"
      tags:
      - WorkstreamEvents
  /workstream_events/{workstream_event}/delete:
    post:
      description: This will delete a specific workstream_event from the database!
      operationId: workstream_events-delete-specific-workstream_event
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_events/{workstream_event}/delete [POST]"
      tags:
      - WorkstreamEvents
  /workstream_events/create:
    post:
      description: This will create a new WorkstreamEvent in the database.
      operationId: workstream_events-create-new-workstream_event
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWorkstreamEvent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamEvent'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_events/create [POST]"
      tags:
      - WorkstreamEvents
  /workstream_event/{workstream_event}:
    get:
      description: This will get a snapshot of a single workstream_event.
      operationId: workstream_events-specific-workstream_event-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamEvent'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: WorkstreamEvent not found.
      summary: "/workstream_event/{workstream_event} [GET]"
      tags:
      - WorkstreamEvent
  /workstream_event/update:
    post:
      description: This will update a specific workstream_event.
      operationId: workstream_event-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamEvent'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamEvent'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_event/update [POST]"
      tags:
      - WorkstreamEvent
  /workstream_event/{workstream_event}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a workstream_event with a workstream summary.
        This will do the same thing as the workstreamSummary equivalent.
      operationId: workstream_event-associate-workstream_summary
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_event/{workstream_event}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - WorkstreamEvent
  /workstream_event/{workstream_event}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate a workstream_event from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: workstream_event-disassociate-workstream_summary
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_event/{workstream_event}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - WorkstreamEvent
  /workstream_event/{workstream_event}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: workstream_event-scores-increment
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/workstream_event/{workstream_event}/scores/increment' [POST]"
      tags:
      - WorkstreamEvent
  /workstream_summaries:
    get:
      description: This will get a snapshot of all your workstream summaries.
      operationId: workstream_summaries-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSummaries'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summaries [GET]"
      tags:
      - WorkstreamSummaries
  /workstream_summaries/{workstream_summary}/delete:
    post:
      description: This will delete a specific workstream_summary from the database!
      operationId: workstream_summaries-delete-specific-workstream_summary
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summaries/{workstream_summary}/delete [POST]"
      tags:
      - WorkstreamSummaries
  /workstream_summaries/create:
    post:
      description: This will create a new WorkstreamSummary in the database.
      operationId: workstream_summaries-create-new-workstream_summary
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWorkstreamSummary'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSummary'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summaries/create [POST]"
      tags:
      - WorkstreamSummaries
  /workstream_summary/{workstream_summary}:
    get:
      description: This will get a snapshot of a single workstream_summary.
      operationId: workstream_summaries-specific-workstream_summary-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSummary'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: WorkstreamSummary not found.
      summary: "/workstream_summary/{workstream_summary} [GET]"
      tags:
      - WorkstreamSummary
  /workstream_summary/update:
    post:
      description: This will update a specific workstream_summary.
      operationId: workstream_summary-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamSummary'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSummary'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/update [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/workstream_events/associate/{workstream_event}:
    post:
      description: This will associate a workstream_summary with a workstream_event.
        This will do the same thing as the workstream_event equivalent.
      operationId: workstream_summary-associate-workstream_event
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/workstream_events/associate/{workstream_event}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/workstream_events/disassociate/{workstream_event}:
    post:
      description: This will enable us to disassociate a workstream_summary from a
        workstream_event. This will do the same thing as the workstream_event equivalent.
      operationId: workstream_summary-disassociate-workstream_event
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_event.
        in: path
        name: workstream_event
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/workstream_events/disassociate/{workstream_event}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/ranges/associate/{range}:
    post:
      description: This will associate a range with a workstream_summary. This will
        do the same thing as the range equivalent.
      operationId: workstream_summary-associate-range
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/ranges/associate/{range}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/ranges/disassociate/{range}:
    post:
      description: This will enable us to disassociate a range from a workstream_summary.
        This will do the same thing as the range equivalent.
      operationId: workstream_summary-disassociate-range
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific range.
        in: path
        name: range
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/ranges/disassociate/{range}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: workstream_summary-scores-increment
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/workstream_summary/{workstream_summary}/scores/increment' [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/websites/associate/{website}:
    post:
      description: This will associate a website with a workstream_summary. This will
        do the same thing as the website equivalent.
      operationId: workstream_summary-associate-website
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/websites/associate/{website}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/websites/disassociate/{website}:
    post:
      description: This will enable us to disassociate a website from a workstream_summary.
        This will do the same thing as the website equivalent.
      operationId: workstream_summary-disassociate-website
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/websites/disassociate/{website}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /website/{website}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a website with a workstream summary. This will
        do the same thing as the workstreamSummary equivalent.
      operationId: website-associate-workstream_summary
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Website
  /website/{website}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate a website from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: website-disassociate-workstream_summary
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Website
  /workstream_summary/{workstream_summary}/anchors/associate/{anchor}:
    post:
      description: This will associate a anchor with a workstream_summary. This will
        do the same thing as the anchor equivalent.
      operationId: workstream_summary-associate-anchor
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/anchors/associate/{anchor}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/anchors/disassociate/{anchor}:
    post:
      description: This will enable us to disassociate a anchor from a workstream_summary.
        This will do the same thing as the anchor equivalent.
      operationId: workstream_summary-disassociate-anchor
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/anchors/disassociate/{anchor}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /anchor/{anchor}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a anchor with a workstream summary. This will
        do the same thing as the workstreamSummary equivalent.
      operationId: anchor-associate-workstream_summary
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate a anchor from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: anchor-disassociate-workstream_summary
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Anchor
  /workstream_summary/{workstream_summary}/assets/associate/{asset}:
    post:
      description: This will associate an asset with a workstream_summary. This will
        do the same thing as the asset equivalent.
      operationId: workstream_summary-associate-asset
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/assets/associate/{asset}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/assets/disassociate/{asset}:
    post:
      description: This will enable us to disassociate a asset from a workstream_summary.
        This will do the same thing as the asset equivalent.
      operationId: workstream_summary-disassociate-asset
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/assets/disassociate/{asset}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /asset/{asset}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a asset with a workstream summary. This will
        do the same thing as the workstreamSummary equivalent.
      operationId: asset-associate-workstream_summary
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Asset
  /asset/{asset}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate an asset from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: asset-disassociate-workstream_summary
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Asset
  /workstream_summary/{workstream_summary}/conversations/associate/{conversation}:
    post:
      description: This will associate an conversation with a workstream_summary.
        This will do the same thing as the conversation equivalent.
      operationId: workstream_summary-associate-conversation
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/conversations/associate/{conversation}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/conversations/disassociate/{conversation}:
    post:
      description: This will enable us to disassociate a conversation from a workstream_summary.
        This will do the same thing as the conversation equivalent.
      operationId: workstream_summary-disassociate-conversation
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/conversations/disassociate/{conversation}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /conversation/{conversation}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a conversation with a workstream summary. This
        will do the same thing as the workstreamSummary equivalent.
      operationId: conversation-associate-workstream_summary
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Conversation
  /conversation/{conversation}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate an conversation from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: conversation-disassociate-workstream_summary
      parameters:
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Conversation
  /workstream_summary/{workstream_summary}/persons/associate/{person}:
    post:
      description: This will associate an person with a workstream_summary. This will
        do the same thing as the person equivalent.
      operationId: workstream_summary-associate-person
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/persons/associate/{person}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /workstream_summary/{workstream_summary}/persons/disassociate/{person}:
    post:
      description: This will enable us to disassociate a person from a workstream_summary.
        This will do the same thing as the person equivalent.
      operationId: workstream_summary-disassociate-person
      parameters:
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summary/{workstream_summary}/persons/disassociate/{person}\
        \ [POST]"
      tags:
      - WorkstreamSummary
  /person/{person}/workstream_summaries/associate/{workstream_summary}:
    post:
      description: This will associate a person with a workstream summary. This will
        do the same thing as the workstreamSummary equivalent.
      operationId: person-associate-workstream_summary
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/workstream_summaries/associate/{workstream_summary}\
        \ [POST]"
      tags:
      - Person
  /person/{person}/workstream_summaries/disassociate/{workstream_summary}:
    post:
      description: This will enable us to disassociate an person from a workstream
        summary. This will do the same thing as the workstreamSummary equivalent.
      operationId: person-disassociate-workstream_summary
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is a identifier that is used to identify a specific workstream_summary.
        in: path
        name: workstream_summary
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/workstream_summaries/disassociate/{workstream_summary}\
        \ [POST]"
      tags:
      - Person
  /workstream_pattern_engine/processors/vision/activate:
    post:
      description: |-
        This will activate your Workstream Pattern Engine. This is used to aggregate information on your user's desktop, specifically recording
        the application in focus and aggregating relevant context that will then be used to ground the copilot conversations, as well as the feed.

        Note: required to be a beta user to use this feature until this is live(roughly mid to late April)
      operationId: workstream_pattern_engine_processors_vision_activate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
          description: OK
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: "Forbidden, this is not available for non-beta used until mid\
            \ to late April."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/activate [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/deactivate:
    post:
      description: |-
        This will deactivate your Workstream Pattern Engine. This is used to aggregate information on your user's desktop, specifically recording
        the application in focus and aggregating relevant context that will then be used to ground the copilot conversations, as well as the feed.

        Note: required to be a beta user to use this feature until this is live(roughly mid to late April)
      operationId: workstream_pattern_engine_processors_vision_deactivate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
          description: OK
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: "Forbidden, this is not available for non-beta used until mid\
            \ to late April."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/deactivate [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/status:
    get:
      description: |-
        This will get a snapshot of the status your Workstream Pattern Engine. This is used to aggregate information on your user's desktop, specifically recording
        the application in focus and aggregating relevant context that will then be used to ground the copilot conversations, as well as the feed.

        Note: required to be a beta user to use this feature until this is live(roughly mid to late April)
      operationId: workstream_pattern_engine_processors_vision_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
          description: OK
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: "Forbidden, this is not available for non-beta used until mid\
            \ to late April."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/status [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/clear:
    post:
      description: |-
        This will clear the data for the Workstream Pattern Engine, specifically for our vision data.

        This boy will accept ranges of time that the user wants to remove the processing from.
      operationId: workstream_pattern_engine_processors_vision_data_clear
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamPatternEngineDataCleanupRequest'
      responses:
        "204":
          description: No Content
        "403":
          content:
            text/plain:
              schema:
                type: string
          description: "Forbidden, this is not available for non-beta used until mid\
            \ to late April."
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/data/clear [POST]"
      tags:
      - WorkstreamPatternEngine
  /os/permissions:
    get:
      description: |-
        This will only work on Macos and Windows.

        And will get the permissions of the user's local machine w/ regard to anything needed to effectively run PiecesOS.

        Note: this will let us know if we need to tell them to take action to enable any given permissions
      operationId: os-permissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPermissions'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/permissions [GET]"
      tags:
      - OS
  /os/permissions/request:
    post:
      description: |-
        This will only work on Macos and Windows.

        This will request permissions for the given inputs
      operationId: os-permissions-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSPermissions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSPermissions'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/permissions/request [POST]"
      tags:
      - OS
  /user/beta/status:
    post:
      description: This will be an endpoint to give access or remove access immediately
        from a given user.(isomorphic from the given provider)
      operationId: user-beta-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserBetaStatus'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserBetaStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
        "511":
          content:
            text/plain:
              schema:
                type: string
          description: "Authentication Required, This means that you user needs to\
            \ be authenticated with OS in order to change the beta status"
      summary: "/user/beta/status [POST]"
      tags:
      - User
  /asset/{asset}/conversations/associate/{conversation}:
    post:
      description: associates a conversation and an asset. It performs the same action
        as the conversation equivalent.
      operationId: asset-associate-conversation
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/conversations/associate/{conversation} [POST]"
      tags:
      - Asset
  /asset/{asset}/conversations/disassociate/{conversation}:
    post:
      description: Disassociates a conversation from an asset. It performs the same
        action as the conversation equivalent.
      operationId: asset-disassociate-conversation
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/conversations/disassociate/{conversation} [POST]"
      tags:
      - Asset
  /asset/{asset}/persons/associate/{person}:
    post:
      description: associates a person and an asset. It performs the same action as
        the person equivalent.
      operationId: asset-associate-person
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/persons/associate/{person} [POST]"
      tags:
      - Asset
  /asset/{asset}/persons/disassociate/{person}:
    post:
      description: Disassociates a person from an asset. It performs the same action
        as the person equivalent.
      operationId: asset-disassociate-person
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/persons/disassociate/{person} [POST]"
      tags:
      - Asset
  /asset/{asset}/anchors/associate/{anchor}:
    post:
      description: associates an anchor and an asset. It performs the same action
        as the anchor equivalent.
      operationId: asset-associate-anchor
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/persons/associate/{anchor} [POST]"
      tags:
      - Asset
  /asset/{asset}/anchors/disassociate/{anchor}:
    post:
      description: Disassociates a anchor from an asset. It performs the same action
        as the anchor equivalent.
      operationId: asset-disassociate-anchor
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/anchors/disassociate/{anchor} [POST]"
      tags:
      - Asset
  /person/{person}/assets/associate/{asset}:
    post:
      description: associates a person and an asset. It performs the same action as
        the asset equivalent.
      operationId: person-associate-asset
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/assets/associate/{asset} [POST]"
      tags:
      - Person
  /person/{person}/assets/disassociate/{asset}:
    post:
      description: Disassociates a person from an asset. It performs the same action
        as the asset equivalent.
      operationId: person-disassociate-asset
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/assets/disassociate/{asset} [POST]"
      tags:
      - Person
  /person/{person}/websites/associate/{website}:
    post:
      description: associates a website and a person. It performs the same action
        as the website equivalent.
      operationId: person-associate-website
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/websites/associate/{website} [POST]"
      tags:
      - Person
  /person/{person}/websites/disassociate/{website}:
    post:
      description: Disassociates a person from a website. It performs the same action
        as the website equivalent.
      operationId: person-disassociate-website
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/websites/disassociate/{website} [POST]"
      tags:
      - Person
  /person/{person}/tags/associate/{tag}:
    post:
      description: associates a tag and a person. It performs the same action as the
        tag equivalent.
      operationId: person-associate-tag
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/tags/associate/{tag} [POST]"
      tags:
      - Person
  /person/{person}/tags/disassociate/{tag}:
    post:
      description: Disassociates a person from a tag. It performs the same action
        as the tag equivalent.
      operationId: person-disassociate-tag
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: tag id
        in: path
        name: tag
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/tags/disassociate/{tag} [POST]"
      tags:
      - Person
  /anchor/{anchor}/assets/associate/{asset}:
    post:
      description: associates an anchor and an asset. It performs the same action
        as the asset equivalent.
      operationId: anchor-associate-asset
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/assets/associate/{asset} [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/assets/disassociate/{asset}:
    post:
      description: Disassociates an anchor from an asset. It performs the same action
        as the asset equivalent.
      operationId: anchor-disassociate-asset
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/assets/disassociate/{asset} [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/conversations/associate/{conversation}:
    post:
      description: associates an anchor and a conversation. It performs the same action
        as the conversation equivalent.
      operationId: anchor-associate-conversation
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/conversations/associate/{conversation} [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/conversations/disassociate/{conversation}:
    post:
      description: Disassociates an anchor from a conversation. It performs the same
        action as the conversation equivalent.
      operationId: anchor-disassociate-conversation
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/conversations/disassociate/{conversation} [POST]"
      tags:
      - Anchor
  /workstream_pattern_engine/ingestions/create:
    post:
      description: |-
        This will take in events from plugins that will be used to drive data to be displayed in the feed.

        This is not guaranteed to display information that is taken into this endpoint in the feed.

        We take a subset of the information provided in this endpoint + information from the WPE to curated a highly
        relevant Heads up display of useful materials.
      operationId: workstream_pattern_engine_create_ingestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWorkstreamIngestion'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamIngestion'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/ingestions/create [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream/suggestions/stream:
    get:
      description: Provides a WebSocket connection that emits changes to your workstream
        suggestions.
      operationId: workstream_suggestions_stream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSuggestions'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream/suggestions/stream [WS]"
      tags:
      - Workstream
  /workstream/suggestions/refresh:
    post:
      description: This will trigger a refresh(recalculation) of the suggestions items.
      operationId: workstream_suggestions_refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWorkstreamSuggestionsRefresh'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamSuggestionsRefresh'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream/suggestions/refresh [POST]"
      tags:
      - Workstream
  /tags/search:
    post:
      description: This will search your tags for a specific tag
      operationId: search-tags
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedTags'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags/search [POST]"
      tags:
      - Tags
  /websites/search:
    post:
      description: |-
        This will search your websites for a specific website

        note: we will search the url, and search the name of the website
      operationId: search-websites
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedWebsites'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites/search [POST]"
      tags:
      - Websites
  /persons/search:
    post:
      description: |-
        This will search your persons for a specific person

        note: we will search, name, email, and username
      operationId: search-persons
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedPersons'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/persons/search [POST]"
      tags:
      - Persons
  /sensitives/search:
    post:
      description: |-
        This will search your sensitives for a specific sensitive

        note: we will search the value of the sensitive
      operationId: search-sensitives
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedSensitives'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitives/search [POST]"
      tags:
      - Sensitives
  /anchors/search:
    post:
      description: |-
        This will search your anchors for a specific anchor

        note: we will search all the anchor points
      operationId: search-anchors
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAnchors'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchors/search [POST]"
      tags:
      - Anchors
  /conversations/search:
    post:
      description: |-
        This will search your conversations for a specific conversation

        note: we will search annotations, the name of the conversation, and the conversation messages
      operationId: search-conversations
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedConversations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversations/search [POST]"
      tags:
      - Conversations
  /conversation/{conversation}/search:
    post:
      description: |-
        This will search a specific conversation for a match

        note: here we will only search the conversationMessages for this given Conversation
      operationId: search-conversation-specific-messages
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: This is the uuid of a conversation.
        in: path
        name: conversation
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedConversationMessages'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/conversation/{conversation}/search [POST]"
      tags:
      - Conversation
  /messages/search:
    post:
      description: |-
        This will search your conversationMessages for a specific conversation_message

        note: we will just search the conversation message values
      operationId: search-messages
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedConversationMessages'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/messages/search [POST]"
      tags:
      - ConversationMessages
  /annotations/search:
    post:
      description: |-
        This will search your annotations for a specific annotation

        note: we will just search the annotation value
      operationId: search-annotations
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedAnnotations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotations/search [POST]"
      tags:
      - Annotations
  /hints/search:
    post:
      description: |-
        This will search your hints for a specific hint

        note: we will just search the hint value
      operationId: search-hints
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedHints'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hints/search [POST]"
      tags:
      - Hints
  /workstream_summaries/search:
    post:
      description: |-
        This will search your workstream_summaries for a specific workstream_summary

        note: we will just search the summary value(which is an annotation)
      operationId: search-workstream_summaries
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedWorkstreamSummaries'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_summaries/search [POST]"
      tags:
      - WorkstreamSummaries
  /workstream_pattern_engine/processors/vision/status/stream:
    get:
      description: |-
        This is a websocket for the status of the workstream pattern engine for vision.

        This will emit an event when this is first connected to, and will emit an event when every this value changes

        This will emit a "WorkstreamPatternEngineStatus" Model.
      operationId: workstream_pattern_engine_processors_vision_status_stream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/status/steam [WS]"
      tags:
      - WorkstreamPatternEngine
  /os/update/check/stream:
    get:
      description: |-
        This will first kick off the check.

        Then will stream the progress.

        **TODO lets think about if we want to have a closing
        NOTE: it is reccommended to use the stream instead of pulling(via the normal check endpoint).
      operationId: os_update_check_stream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerUpdateStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/update/check/stream [WS]"
      tags:
      - OS
  /os/settings:
    get:
      description: This is a snapshot of the piecesOS settings
      operationId: os_settings_snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerSettings'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/settings [GET]"
      tags:
      - OS
  /os/settings/stream:
    get:
      description: This is a websocket that will emit a change on the update of the
        OSSettings.
      operationId: os_settings_stream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerSettings'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/settings/stream [WS]"
      tags:
      - OS
  /os/settings/update:
    post:
      description: |-
        This will ensure that we update the os settings.

        This will emit a change via the setting stream as well.
      operationId: os_settings_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSServerSettings'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerSettings'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/settings/update [POST]"
      tags:
      - OS
  /workstream_pattern_engine/processors/vision/calibrations/focused:
    get:
      description: |-
        This will get the copilot/feed/xyz dimensions of the focused window.

        This endpoint will attempt to do the following:
        1. get the focus window
        2. we will do a lookup to see if we have the copilot/feed/xyz dimension for this window
        if not we will return null
        if so we will return the dimensions as well as when the dimensions were taken

        note: in the future we can make a differentiation of the dimensions based on the type of qrCode.
        note: no need to pass in the window name: b/c we will just get the focused window
        note: we will also return the window name in the returnable so the dev can verify this is the window of the plugin.
      operationId: workstream_pattern_engine_processors_vision_calibrations_focused
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionCalibration'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/calibrations/focused\
        \ [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/calibrations:
    get:
      description: "This will return a snapshot of all of our captured copilot window\
        \ Dimensions \n\nnote: this will return many captures\nnote: will want to\
        \ add type of calibration for this specific dimension(ie copilot/feed/xyz)\n\
        note: in the future we can make a differentiation of the dimensions based\
        \ on the type of qrCode."
      operationId: workstream_pattern_engine_processors_vision_calibrations_snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionCalibrations'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/calibrations [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/calibration/capture:
    post:
      description: |-
        This will attempt to capture the copilot/feed/xyz dimensions of current focused window

        note: in the future we can make a differentiation of the dimensions based on the type of qrCode.
      operationId: workstream_pattern_engine_processors_vision_calibration_capture
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionCalibration'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/calibration/capture [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/sources:
    get:
      description: This will return all of the applications(focused windows) that
        have events saved within WPE qdrant collection.
      operationId: workstream_pattern_engine_processors_sources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineSources'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/sources [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/metadata:
    get:
      description: This is an endpoint that will return the metadata of the vision
        data (WPE qdrant size)
      operationId: workstream_pattern_engine_processors_vision_metadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionMetadata'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/metadata [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/events:
    get:
      description: |-
        This will return a snapshot of all of the WPE qdrant events

        note: if the transferables: are true then we will provide values for each of our events otherwise
              we will just provide basic metadata
      operationId: workstream_pattern_engine_processors_vision_events_snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvents'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/data/events [GET]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/events/search:
    post:
      description: This will search your WPE events and will return a list of events
        that match the query/timestamp range/list of applications
      operationId: workstream_pattern_engine_processors_vision_events_search
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedWorkstreamPatternEngineVisionEvents'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/data/events/search [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/events/scoped_delete:
    post:
      description: This will remove the UUIDs that were removed from the qdrant event.
      operationId: workstream_pattern_engine_processors_vision_events_scoped_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkstreamPatternEngineVisionEventDeletions'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlattenedWorkstreamPatternEngineVisionEvents'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/events/scoped_delete\
        \ [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/events/{vision_event}/delete:
    post:
      description: This will delete a single event.
      operationId: workstream_pattern_engine_processors_vision_event_delete_specific_vision_event
      parameters:
      - description: This is a identifier that is used to identify a specific WPE_vision
          event.
        in: path
        name: vision_event
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/events/{vision_event}/delete\
        \ [POST]"
      tags:
      - WorkstreamPatternEngine
  /workstream_pattern_engine/processors/vision/data/events/{vision_event}:
    get:
      description: This will return a specific event from the WPE.
      operationId: workstream_pattern_engine_processors_vision_events_specific_snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      - description: This is a identifier that is used to identify a specific WPE_vision
          event.
        in: path
        name: vision_event
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvent'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/processors/vision/data/events/{vision_event}\
        \ [GET]"
      tags:
      - WorkstreamPatternEngine
  /anchor/{anchor}/persons/associate/{person}:
    post:
      description: associates an anchor and a person. It performs the same action
        as the person equivalent.
      operationId: anchor-associate-person
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/persons/associate/{person} [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/persons/disassociate/{person}:
    post:
      description: Disassociates an anchor from a person. It performs the same action
        as the person equivalent.
      operationId: anchor-disassociate-person
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/persons/disassociate/{person} [POST]"
      tags:
      - Anchor
  /person/{person}/anchors/associate/{anchor}:
    post:
      description: associates a person and an anchor. It performs the same action
        as the anchor equivalent.
      operationId: person-associate-anchor
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/anchors/associate/{anchor} [POST]"
      tags:
      - Person
  /person/{person}/anchors/disassociate/{anchor}:
    post:
      description: Disassociates a person from an achor. It performs the same action
        as the anchor equivalent.
      operationId: person-disassociate-anchor
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/anchors/disassociate/{anchor} [POST]"
      tags:
      - Person
  /os/browser/url/open:
    post:
      description: This will accept a url and launch this in an external browser.
      operationId: os-browser-url-open
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/browser/url/open [POST]"
      tags:
      - OS
  /os/filesystem/file/open:
    post:
      description: |-
        This will accept a path and will launch a path in a given finder/file explorer window

        note: TODO in the future add an endpoint for open/in || open/with (browser,files,...etc)
              && if so we will want /os/open_with/file
      operationId: os-filesystem-file-open
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/filesystem/file/open [POST]"
      tags:
      - OS
  /os/memory/optimize:
    post:
      description: "This will optimize memory across PiecesOS.(TODO in the future\
        \ might want to accept a body, so this will be a POST)"
      operationId: os-memory-optimize
      responses:
        "204":
          description: No Content
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/memory/optimize [POST]"
      tags:
      - OS
  /os/metadata:
    get:
      description: This will return metadata (total materials) in your pieces drive.
      operationId: os-metadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSServerMetadata'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/metadata [GET]"
      tags:
      - OS
      x-pieces-internal: true
  /os/applet/launch:
    post:
      description: |-
        This will attempt to launch(serve) a micro_application. If one is already spun up we will just return the port number.
        TODO: take in an application and return a port number at minimum.
      operationId: os-applet-launch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InactiveOSServerApplet'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveOSServerApplet'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/applet/launch [POST]"
      tags:
      - OS
  /os/applet/restart:
    post:
      description: This will attempt to restart a micro_application.(this will shut
        down the copilot and then rehost it)
      operationId: os-applet-restart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InactiveOSServerApplet'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActiveOSServerApplet'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/applet/restart [POST]"
      tags:
      - OS
  /os/applet/terminate:
    post:
      description: This will attempt to shutdown or terminate a specified micro_application.
      operationId: os-applet-terminate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminatingOSServerApplet'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/applet/terminate [POST]"
      tags:
      - OS
  /os/filesystem/path/verify:
    post:
      description: This will determine in a given path is a file/a directory or invalid.
      operationId: os-filesystem-path-verify
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifiedOSFilesystemPath'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/filesystem/path/verify [POST]"
      tags:
      - OS
  /os/filesystem/file/read/streamed:
    get:
      description: "This will stream(via a WS the contents of a file back to the client,\
        \ given a file, it will read the contents and return to the client.\n\nNOTE:\
        \ will NOT support relative paths. only ABSOLUTE paths.\nNOTE: needs to be\
        \ a File.(will not stream a folder)\nNOTE: we might want to put a limit on\
        \ the size of the file(IE no more than a GB or something like that??)\nTODO:\
        \ would be nice to cancel stream\nNOTE: for v2 we could have two query params\
        \ i.e. find which could take in a relative path and or file name and \n  \
        \    the other could be compress i.e. streaming a gzip vs the raw bytes..\
        \ \n      the caveat here would be mack would need to decompress em."
      operationId: os-filesystem-file-read-streamed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSFileStreamingReadAttempt'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSFileStreamingRead'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/filesystem/file/read/streamed [WS]"
      tags:
      - OS
  /os/terminate:
    post:
      description: This will force quit PiecesOS
      operationId: os-terminate
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/os/terminate [POST]"
      tags:
      - OS
  /asset/{asset}/hints/associate/{hint}:
    post:
      description: associates an asset and a hint. It performs the same action as
        the hint equivalent.
      operationId: asset-associate-hint
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/hints/associate/{hint} [POST]"
      tags:
      - Asset
  /asset/{asset}/hints/disassociate/{hint}:
    post:
      description: Disassociates an asset from a hint. It performs the same action
        as the hint equivalent.
      operationId: asset-disassociate-hint
      parameters:
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/asset/{asset}/hints/disassociate/{hint} [POST]"
      tags:
      - Asset
  /hint/{hint}/assets/associate/{asset}:
    post:
      description: associates a hint and an asset. It performs the same action as
        the asset equivalent.
      operationId: hint-associate-asset
      parameters:
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hint/{hint}/assets/associate/{asset} [POST]"
      tags:
      - Hint
  /hint/{hint}/assets/disassociate/{asset}:
    post:
      description: Disassociates a hint from an asset. It performs the same action
        as the asset equivalent.
      operationId: hint-disassociate-asset
      parameters:
      - description: This is a specific hint uuid
        in: path
        name: hint
        required: true
        schema:
          type: string
      - description: The id (uuid) of the asset that you are trying to access.
        in: path
        name: asset
        required: true
        schema:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          format: uuid
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hint/{hint}/assets/disassociate/{asset} [POST]"
      tags:
      - Hint
  /message/{message}/persons/disassociate/{person}:
    post:
      description: This will enable us to disassociate a message from a person.
      operationId: message-disassociate-person
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/persons/disassociate/{person} [POST]"
      tags:
      - ConversationMessage
  /message/{message}/persons/associate/{person}:
    post:
      description: This will associate a message with a person.
      operationId: message-associate-person
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/persons/associate/{person} [POST]"
      tags:
      - ConversationMessage
  /message/{message}/anchors/associate/{anchor}:
    post:
      description: This will associate a message with an anchor.
      operationId: message-associate-anchor
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/anchors/associate/{anchor} [POST]"
      tags:
      - ConversationMessage
  /message/{message}/anchors/disassociate/{anchor}:
    post:
      description: This will enable us to disassociate a message from an anchor.
      operationId: message-disassociate-anchor
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/anchors/disassociate/{anchor} [POST]"
      tags:
      - ConversationMessage
  /message/{message}/websites/associate/{website}:
    post:
      description: This will associate a message with a website.
      operationId: message-associate-website
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: Associate a message with a website
      tags:
      - ConversationMessage
  /message/{message}/websites/disassociate/{website}:
    post:
      description: This will enable us to disassociate a message from a website.
      operationId: message-disassociate-website
      parameters:
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/message/{message}/websites/disassociate/{website} [POST]"
      tags:
      - ConversationMessage
  /website/{website}/messages/associate/{message}:
    post:
      description: This will associate a website with a message.
      operationId: website-associate-message
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/messages/associate/{message} [POST]"
      tags:
      - Website
  /website/{website}/messages/disassociate/{message}:
    post:
      description: This will enable us to disassociate a website from a message.
      operationId: website-disassociate-message
      parameters:
      - description: website id
        in: path
        name: website
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/website/{website}/messages/disassociate/{message} [POST]"
      tags:
      - Website
  /person/{person}/messages/disassociate/{message}:
    post:
      description: This will enable us to disassociate a person from a message.
      operationId: person-disassociate-message
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/messages/disassociate/{message} [POST]"
      tags:
      - Person
  /person/{person}/messages/associate/{message}:
    post:
      description: This will associate a person with a message.
      operationId: person-associate-message
      parameters:
      - description: This is a uuid that represents a person.
        in: path
        name: person
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/person/{person}/messages/associate/{message} [POST]"
      tags:
      - Person
  /anchor/{anchor}/messages/disassociate/{message}:
    post:
      description: This will enable us to disassociate a anchor from a message.
      operationId: anchor-disassociate-message
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/messages/disassociate/{message} [POST]"
      tags:
      - Anchor
  /anchor/{anchor}/messages/associate/{message}:
    post:
      description: This will associate a anchor with a message.
      operationId: anchor-associate-message
      parameters:
      - description: This is the specific uuid of an anchor.
        in: path
        name: anchor
        required: true
        schema:
          type: string
      - description: This is the uuid of a message.
        in: path
        name: message
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor/{anchor}/messages/associate/{message} [POST]"
      tags:
      - Anchor
  /annotations/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your annotation
        identifiers (UUIDs).
      operationId: annotations-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/annotations/stream/identifiers [WS]"
      tags:
      - Annotations
  /applications/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your application
        identifiers (UUIDs).
      operationId: applications-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/applications/stream/identifiers [WS]"
      tags:
      - Applications
  /activities/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your activity
        identifiers (UUIDs).
      operationId: activities-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/activities/stream/identifiers [WS]"
      tags:
      - Activities
  /anchors/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your anchor
        identifiers (UUIDs).
      operationId: anchors-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchors/stream/identifiers [WS]"
      tags:
      - Anchors
  /anchor_points/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your annotation
        identifiers (UUIDs).
      operationId: anchor_points-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/anchor_points/stream/identifiers [WS]"
      tags:
      - AnchorPoints
  /hints/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your hint
        identifiers (UUIDs).
      operationId: hints-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/hints/stream/identifiers [WS]"
      tags:
      - Hints
  /messages/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your conversation
        messages identifiers (UUIDs).
      operationId: conversation_messages-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/messages/stream/identifiers [WS]"
      tags:
      - ConversationMessages
  /formats/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your format
        identifiers (UUIDs).
      operationId: formats-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/formats/stream/identifiers [WS]"
      tags:
      - Formats
  /persons/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your person
        identifiers (UUIDs).
      operationId: persons-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/persons/stream/identifiers [WS]"
      tags:
      - Persons
  /ranges/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your range
        identifiers (UUIDs).
      operationId: ranges-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ranges/stream/identifiers [WS]"
      tags:
      - Ranges
  /sensitives/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your sensitive
        identifiers (UUIDs).
      operationId: sensitives-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/sensitives/stream/identifiers [WS]"
      tags:
      - Sensitives
  /tags/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your tag
        identifiers (UUIDs).
      operationId: tags-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/tags/stream/identifiers [WS]"
      tags:
      - Tags
  /websites/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your website
        identifiers (UUIDs).
      operationId: websites-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/websites/stream/identifiers [WS]"
      tags:
      - Websites
  /models/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your model
        identifiers (UUIDs).
      operationId: models-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/models/stream/identifiers [WS]"
      tags:
      - Models
  /ollama/installs:
    get:
      description: This will return all the installation in a given session
      operationId: ollama-installs-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployments'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/installs [GET]"
      tags:
      - Ollama
  /ollama/install:
    post:
      description: |-
        This will start the installation for ollama.
        NOTE: This will return immediately, use the update status
      operationId: ollama-install
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/install [POST]"
      tags:
      - Ollama
  /ollama/install/{identifier}:
    get:
      description: This will get the status of a given installation
      operationId: ollama-install-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific generic
          event.
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/install/{identifier} [GET]"
      tags:
      - Ollama
  /ollama/install/{identifier}/cancel:
    post:
      description: This will cancel a specific installation that is in-progress.
      operationId: ollama-install-cancel
      parameters:
      - description: This is a identifier that is used to identify a specific generic
          event.
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/install/{identifier}/cancel [POST]"
      tags:
      - Ollama
  /ollama/updates:
    get:
      description: This will return all the attempted updates in a given session
      operationId: ollama-updates-snapshot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployments'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/updates [GET]"
      tags:
      - Ollama
  /ollama/update:
    post:
      description: |-
        This will start the update for ollama.
        NOTE: This will return immediately, use the ollama status endpoint to checks it status.
        NOTE: This will required a user to pass in deployment that they would like to update to.(only thing required will be version here, and that this is a valid version to update to.)
      operationId: ollama-update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OllamaDeployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/update [POST]"
      tags:
      - Ollama
  /ollama/uninstall:
    post:
      description: |-
        This will uninstall Ollama.

        NOTE: the request body is the installation that will be deleted.
      operationId: ollama-uninstall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OllamaDeployment'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/uninstall [POST]"
      tags:
      - Ollama
  /ollama/update/{identifier}:
    get:
      description: This will get the status of a given update.
      operationId: ollama-update-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific generic
          event.
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/update/{identifier} [GET]"
      tags:
      - Ollama
  /ollama/update/{identifier}/cancel:
    post:
      description: This will cancel a specific update that is in-progress.
      operationId: ollama-update-cancel
      parameters:
      - description: This is a identifier that is used to identify a specific generic
          event.
        in: path
        name: identifier
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaDeployment'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/update/{identifier}/cancel [POST]"
      tags:
      - Ollama
  /ollama/status:
    get:
      description: "This will get a status on Ollama, ie if ollama is installed, if\
        \ it needs an update, \nif there are installations in progress, or updates\
        \ in progress"
      operationId: ollama-status-check
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/status [GET]"
      tags:
      - Ollama
  /ollama/status/stream:
    get:
      description: |-
        This provides a Websocket connection, that will emit a change on the initial connection and then all realtime updates:
        - if an update have started
        - if an installation has started
        - if Ollama has been installed/uninstalled
        - if an updated is required for Ollama
      operationId: ollama-status-check-stream
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OllamaStatus'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/ollama/status/stream [WS]"
      tags:
      - Ollama
  /workstream_pattern_engine/sources/{source}/delete:
    post:
      description: This will delete a specific workstream pattern engine source!
      operationId: workstream_pattern_engine-sources-delete-specific-source
      parameters:
      - description: This is a identifier that is used to identify a specific WorkstreamPatternEngineSource
        in: path
        name: source
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/sources/{source}/delete [POST]"
      tags:
      - WorkstreamPatternEngineSources
  /workstream_pattern_engine/sources/create:
    post:
      description: This will create a anchor and attach it to a specific asset(s)
        This will also ensure the anchor is normalized.
      operationId: workstream_pattern_engine-sources-create-new-source
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededWorkstreamPatternEngineSource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/sources/create [POST]"
      tags:
      - WorkstreamPatternEngineSources
  /workstream_pattern_engine/sources:
    get:
      description: This will get a snapshot of all your anchors.
      operationId: workstream_pattern_engine-sources-snapshot
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSources'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/sources [GET]"
      tags:
      - WorkstreamPatternEngineSources
  /workstream_pattern_engine/source/{source}:
    get:
      description: This will get a snapshot of a single workstream pattern engine
        source.
      operationId: workstream_pattern_engine-sources-specific-source-snapshot
      parameters:
      - description: This is a identifier that is used to identify a specific WorkstreamPatternEngineSource
        in: path
        name: source
        required: true
        schema:
          type: string
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
          description: OK
        "410":
          content:
            text/plain:
              schema:
                type: string
          description: Workstream pattern Engine source not found.
      summary: "/workstream_pattern_engine/source/{source} [GET]"
      tags:
      - WorkstreamPatternEngineSource
  /workstream_pattern_engine/source/update:
    post:
      description: This will update a specific workstream pattern engine source.
      operationId: workstream_pattern_engine-source-update
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/source/update [POST]"
      tags:
      - WorkstreamPatternEngineSource
  /workstream_pattern_engine/sources/search:
    post:
      description: This will search your workstream pattern engine sources
      operationId: workstream_pattern_engine-search-sources
      parameters:
      - description: This is a boolean that will decided if we are want to return
          the transferable data (default) or not(performance enhancement)
        in: query
        name: transferables
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchInput'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchedIdentifiedWorkstreamPatternEngineSources'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/sources/search [POST]"
      tags:
      - WorkstreamPatternEngineSources
  /workstream_pattern_engine/sources/stream/identifiers:
    get:
      description: Provides a WebSocket connection that emits changes to your workstream-pattern-engine
        soures identifiers (UUIDs).
      operationId: workstream_pattern_engine-sources-stream-identifiers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamedIdentifiers'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "/workstream_pattern_engine/sources/stream/identifiers [WS]"
      tags:
      - WorkstreamPatternEngineSources
  /workstream_pattern_engine/source/{source}/scores/increment:
    post:
      description: This will take in a SeededScoreIncrement and will increment the
        material relative to the incoming body.
      operationId: workstream_pattern_engine-source-scores-increment
      parameters:
      - description: This is a identifier that is used to identify a specific WorkstreamPatternEngineSource
        in: path
        name: source
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeededScoreIncrement'
      responses:
        "204":
          description: No Content
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/workstream_pattern_engine/source/{source}/scores/increment' [POST]"
      tags:
      - WorkstreamPatternEngineSource
  /user/access_token:
    get:
      description: This will return a user accessToken for usage w/ this user.
      operationId: user-access-token
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: This will return the PKCE token.
        "500":
          content:
            text/plain:
              schema:
                type: string
          description: Internal Server Error
      summary: "'/user/access_token' [GET]"
      tags:
      - User
  /.well-known/installation/path:
    get:
      description: This endpoint will return the installation path of PiecesOS
      operationId: get-installation-path
      responses:
        "200":
          content:
            text/plain:
              schema:
                description: This is the version.
                type: string
          description: OK
      security: []
      summary: "/.well-known/installation/path [Get]"
      tags:
      - WellKnown
components:
  examples: {}
  parameters:
    activity:
      description: This is a specific activity uuid.
      in: path
      name: activity
      required: true
      schema:
        type: string
    transferables:
      description: This is a boolean that will decided if we are want to return the
        transferable data (default) or not(performance enhancement)
      in: query
      name: transferables
      required: false
      schema:
        type: boolean
    pseudo:
      description: "This is helper boolean that will give you the ability to also\
        \ include your pseudo assets, we will always default to false."
      in: query
      name: pseudo
      required: false
      schema:
        type: boolean
    activity_filter_enum:
      description: This is an ActivityFilterEnum as a optional filter. Ensure you
        update ActivityFilterEnum if this is updated.
      in: query
      name: activity_filter_enum
      required: false
      schema:
        enum:
        - CREATED
        - UPDATED
        - DELETED
        - REFERENCED
        type: string
    anchor:
      description: This is the specific uuid of an anchor.
      in: path
      name: anchor
      required: true
      schema:
        type: string
    anchor_point:
      description: This is the specific uuid of an anchor_point.
      in: path
      name: anchor_point
      required: true
      schema:
        type: string
    annotation:
      description: This is a specific annotation uuid.
      in: path
      name: annotation
      required: true
      schema:
        type: string
    annotation_type_filter:
      description: This is an AnnotationTypeEnum as a optional filter.
      in: query
      name: annotation_type_filter
      required: false
      schema:
        enum:
        - DESCRIPTION
        - COMMENT
        - COMMENTATION
        - DOCUMENTATION
        - SUMMARIZATION
        - SUMMARY
        - EXPLANATION
        - GIT_COMMIT
        type: string
    application:
      description: This is a uuid that represents an application
      in: path
      name: application
      required: true
      schema:
        type: string
    asset:
      description: The id (uuid) of the asset that you are trying to access.
      in: path
      name: asset
      required: true
      schema:
        example: 2254f2c8-5797-40e8-ac56-41166dc0e159
        format: uuid
        type: string
    export_type:
      description: This specifies the type of export the user wants.
      in: query
      name: export_type
      required: true
      schema:
        enum:
        - HTML
        - MD
        type: string
    website:
      description: website id
      in: path
      name: website
      required: true
      schema:
        type: string
    tag:
      description: tag id
      in: path
      name: tag
      required: true
      schema:
        type: string
    query:
      description: This is a string that you can use to search your assets.
      in: query
      name: query
      schema:
        type: string
      style: form
    searchable_tags:
      description: This is a comma separated value of tags used for search.
      in: query
      name: searchable_tags
      required: false
      schema:
        type: string
    suggested:
      description: "This will let us know if a developer, wants a snapshot related\
        \ to suggested content or normal content"
      in: query
      name: suggested
      required: false
      schema:
        type: boolean
    conversation:
      description: This is the uuid of a conversation.
      in: path
      name: conversation
      required: true
      schema:
        type: string
    message:
      description: This is the uuid of a message.
      in: path
      name: message
      required: true
      schema:
        type: string
    automatic:
      description: For most cases set to true. If this is set to true we will handle
        the behavior automically or else we will not proactively handle specific behavior
        but we will let the developer decide the behavior.
      in: query
      name: automatic
      schema:
        default: true
        type: boolean
    distribution:
      description: This is the uuid of a specific distribution.
      in: path
      name: distribution
      required: true
      schema:
        type: string
    format:
      description: The id (uuid) for a specific format.
      in: path
      name: format
      required: true
      schema:
        example: 102ff265-fdfb-4142-8d94-4932d400199c
        format: uuid
        type: string
    transferable:
      description: This is a boolean that will decided if we are want to return the
        transferable data (default) or not(performance enhancement)
      in: query
      name: transferable
      schema:
        type: boolean
    hint:
      description: This is a specific hint uuid
      in: path
      name: hint
      required: true
      schema:
        type: string
    classify:
      description: "This will let us know if you want us to classifiy your code, this\
        \ is default to false."
      in: query
      name: classify
      required: false
      schema:
        type: boolean
    model:
      description: model id
      in: path
      name: model
      required: true
      schema:
        type: string
    person:
      description: This is a uuid that represents a person.
      in: path
      name: person
      required: true
      schema:
        type: string
    relationship:
      description: this is a specific relationship uuid.
      in: path
      name: relationship
      required: true
      schema:
        type: string
    sensitive:
      description: This is a uuid that represents a sensitive.
      in: path
      name: sensitive
      required: true
      schema:
        type: string
    share:
      description: Share id
      in: path
      name: share
      required: true
      schema:
        type: string
    user:
      description: The id (uuid) for a specific user.
      in: path
      name: user
      required: true
      schema:
        example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        format: uuid
        type: string
    backup:
      description: This is a identifier that is used to identify a specific backup.(version_timestamp)
      in: path
      name: backup
      required: true
      schema:
        type: string
    range:
      description: This is a identifier that is used to identify a specific range.
      in: path
      name: range
      required: true
      schema:
        type: string
    workstream_summary:
      description: This is a identifier that is used to identify a specific workstream_summary.
      in: path
      name: workstream_summary
      required: true
      schema:
        type: string
    workstream_event:
      description: This is a identifier that is used to identify a specific workstream_event.
      in: path
      name: workstream_event
      required: true
      schema:
        type: string
    vision_event:
      description: This is a identifier that is used to identify a specific WPE_vision
        event.
      in: path
      name: vision_event
      required: true
      schema:
        type: string
    identifier:
      description: This is a identifier that is used to identify a specific generic
        event.
      in: path
      name: identifier
      required: true
      schema:
        type: string
    source:
      description: This is a identifier that is used to identify a specific WorkstreamPatternEngineSource
      in: path
      name: source
      required: true
      schema:
        type: string
  responses: {}
  schemas:
    SeededActivity:
      description: |-
        This is the preseed to a full blown Activity.

        This is the minimum information needed to create an Activity, used within our [POST] /activities/create

        if mechenism is not passed in we will default to AUTOMATIC

        NOT required to pass in an asset/user/format.
      properties:
        event:
          $ref: '#/components/schemas/SeededConnectorTracking'
        application:
          $ref: '#/components/schemas/Application'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        user:
          $ref: '#/components/schemas/ReferencedUser'
        format:
          $ref: '#/components/schemas/ReferencedFormat'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
      required:
      - application
      - event
      title: SeededActivity
      type: object
      x-stoplight:
        id: p98hvskt36fud
    SeededConnectorTracking:
      description: |-
        This model is designed to be light weight and low friction while most of the heavy lifting will be happening inside of the context servers.

        This Model is important because this has references to our materials, instead of fully referenced materials.(very similar to our SeededTrackedEvent, consider consolidating and converting these to Referenced models instead of ID's)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        format:
          $ref: '#/components/schemas/SeededTrackedFormatEvent'
        asset:
          $ref: '#/components/schemas/SeededTrackedAssetEvent'
        interaction:
          $ref: '#/components/schemas/SeededTrackedInteractionEvent'
        keyboard:
          $ref: '#/components/schemas/SeededTrackedKeyboardEvent'
        session:
          $ref: '#/components/schemas/SeededTrackedSessionEvent'
        assets:
          $ref: '#/components/schemas/SeededTrackedAssetsEvent'
        ml:
          $ref: '#/components/schemas/SeededTrackedMachineLearningEvent'
        adoption:
          $ref: '#/components/schemas/SeededTrackedAdoptionEvent'
        conversation:
          $ref: '#/components/schemas/SeededTrackedConversationEvent'
      title: SeededConnectorTracking
      type: object
    EmbeddedModelSchema:
      description: This is a model that will keep track of all of our version related
        to our models. ie (1) the database migration and (2) the global semantic version
        of the api.
      properties:
        migration:
          description: this is the current database version that this model was used
            for.
          type: integer
        semantic:
          $ref: '#/components/schemas/EmbeddedModelSchemaSemanticVersionEnum'
      required:
      - migration
      - semantic
      title: EmbeddedModelSchema
      type: object
    EmbeddedModelSchemaSemanticVersionEnum:
      default: MAJOR_0_MINOR_0_PATCH_1
      description: This is a Semantic Version Enum that will reflect the Semantic
        version of the api.
      enum:
      - MAJOR_0_MINOR_0_PATCH_1
      readOnly: true
      title: EmbeddedModelSchemaSemanticVersionEnum
      type: string
    SeededTrackedFormatEvent:
      description: |
        Again this is a model designed to be sent over to a context server to be built and then sent along to segment.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifier_description_pair:
          $ref: '#/components/schemas/TrackedFormatEventIdentifierDescriptionPairs'
        format:
          $ref: '#/components/schemas/ReferencedFormat'
        metadata:
          $ref: '#/components/schemas/TrackedFormatEventMetadata'
      required:
      - format
      - identifier_description_pair
      title: SeededTrackedFormatEvent
      type: object
      x-pieces-internal: true
    TrackedFormatEventIdentifierDescriptionPairs:
      description: "This is a model that allows us to send send over super specific\
        \ format related events such as copied, deleted, downloaded, etc"
      maxProperties: 1
      minProperties: 1
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        format_created:
          description: The key value pair for an asset being created.
          enum:
          - a_format_was_created
          type: string
        format_copied:
          description: If a format was copied entirely
          enum:
          - if_a_format_was_entirely_copied
          type: string
        format_partially_copied:
          description: If a format was copied partially
          enum:
          - if_a_format_was_partially_copied
          type: string
        format_downloaded:
          description: If a format was downloaded
          enum:
          - if_a_format_was_downloaded
          type: string
        format_deleted:
          description: If an format was deleted
          enum:
          - if_a_format_was_deleted
          type: string
        format_generic_classification_updated:
          description: If a generic classification was changed on a format
          enum:
          - if_a_generic_classification_was_changed_on_a_format
          type: string
        format_specific_classification_updated:
          description: If a specific classification was changed on a format
          enum:
          - if_a_specific_classification_was_changed_on_a_format
          type: string
        format_updated:
          description: "a format was updated, generic update."
          enum:
          - a_format_was_updated
          type: string
        format_inserted:
          description: a format was inserted
          enum:
          - a_format_was_inserted
          type: string
        format_value_edited:
          description: "a format's value was update ie, the text, etc..."
          enum:
          - a_format_value_was_edited
          type: string
      title: TrackedFormatEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    ReferencedFormat:
      description: A reference to a format which at minimum must have the format's
        id. But in the case of a hydrated client API it may have a populated reference
        of type Format.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: The id of the Format
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedFormat'
      required:
      - id
      title: "ReferencedFormat [DAG Safety]"
      type: object
    FlattenedFormat:
      description: |-
        A representation of Data for a particular Form Factor of an Asset.[DAG Compatible - Directed Acyclic Graph Data Structure]

        FlattenedFormats prevent Cycles in Reference because all outbound references are strings as opposed to crosspollinated objects.

        i.e. FlattenedFormat.asset is Type String

        fragment or file will always be defined. Even thought they are both optional.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          type: string
        creator:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: string
        classification:
          $ref: '#/components/schemas/Classification'
        icon:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        application:
          $ref: '#/components/schemas/Application'
        asset:
          description: "A uuid model. 36 Characters (4 Dashes, 32 Numbers/Letters) "
          example: 6a2f41a3-c54c-fce8-32d2-0324e1c32e22
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          title: UniversalUniqueIdentifier (UUID)
          type: string
          x-tags:
          - uuid
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        synced:
          $ref: '#/components/schemas/GroupedTimestamp'
        cloud:
          description: This is a path used to determine what path this format lives
            at within the cloud.
          type: string
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
        file:
          $ref: '#/components/schemas/FileFormat'
        analysis:
          $ref: '#/components/schemas/FlattenedAnalysis'
        relationship:
          $ref: '#/components/schemas/Relationship'
        activities:
          $ref: '#/components/schemas/FlattenedActivities'
      required:
      - application
      - asset
      - bytes
      - classification
      - created
      - creator
      - id
      - role
      - updated
      title: "FlattenedFormat [DAG Safety]"
      type: object
    Classification:
      description: This is the specific classification of an Asset's Format.(This
        is on a per format basis b/c an asset could have different formats that are
        different format representations of the Asset.)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        generic:
          $ref: '#/components/schemas/ClassificationGenericEnum'
        specific:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        rendering:
          $ref: '#/components/schemas/ClassificationRenderingEnum'
      required:
      - generic
      - specific
      title: Classification
      type: object
    ClassificationGenericEnum:
      description: "EXTERNAL_RESOURCE_REFERENCE can be thought of as anything such\
        \ as URL, URI, UNIX PATH, etc"
      enum:
      - CODE
      - TEXT
      - IMAGE
      - VIDEO
      - EXTERNAL_RESOURCE_REFERENCE
      - UNKNOWN
      - FILE
      title: ClassificationGenericEnum
      type: string
    ClassificationSpecificEnum:
      description: ""
      enum:
      - csx
      - cs
      - html
      - htm
      - shtml
      - xhtml
      - hs
      - hs-boot
      - hsig
      - cpp
      - cc
      - cp
      - cxx
      - c
      - h
      - hh
      - hpp
      - hxx
      - inl
      - ipp
      - ixx
      - cppm
      - csv
      - doc
      - docm
      - docx
      - exe
      - gif
      - ico
      - jpe
      - jpeg
      - jpg
      - jpgm
      - jpgv
      - log
      - mp2
      - mp2a
      - mp3
      - mp4
      - mp4a
      - oga
      - ogg
      - ogv
      - ogx
      - ppt
      - pptx
      - pptm
      - qt
      - text
      - tif
      - tiff
      - txt
      - wav
      - weba
      - webm
      - webp
      - xla
      - xlam
      - xlc
      - xlm
      - xls
      - xlsb
      - xlsm
      - xlsx
      - xlt
      - xltm
      - xltx
      - pdf
      - png
      - rpm
      - zip
      - woff
      - woff2
      - svgz
      - bin
      - bmp
      - eot
      - gz
      - jar
      - mpkg
      - ai
      - eps
      - dmg
      - list
      - rtx
      - uri
      - uris
      - urls
      - css
      - dart
      - java
      - bsh
      - js
      - jsx
      - mjs
      - htc
      - json
      - ipynb
      - gltf
      - jsonml
      - ps
      - ssml
      - wasm
      - rtf
      - cco
      - pl
      - pc
      - pm
      - pmc
      - pod
      - t
      - xml
      - tld
      - dtml
      - rng
      - rss
      - opml
      - svg
      - xaml
      - sublime-snippet
      - tmLanguage
      - tmPreferences
      - tmSnippet
      - tmTheme
      - csproj
      - fsproj
      - sqlproj
      - vbproj
      - vcproj
      - vcxproj
      - dae
      - props
      - targets
      - xsd
      - xsl
      - xslt
      - ecma
      - node
      - php
      - php3
      - php4
      - php5
      - php7
      - php8
      - phps
      - phpt
      - phtml
      - py
      - py3
      - pyw
      - pyi
      - pyx
      - pyx.in
      - pxd
      - pxd.in
      - pxi
      - pxi.in
      - rpy
      - cpy
      - gyp
      - gypi
      - vpy
      - smk
      - wscript
      - bazel
      - bzl
      - pyc
      - class
      - p
      - pas
      - curl
      - mcurl
      - go
      - swift
      - rs
      - ts
      - tsx
      - rb
      - rbi
      - rbx
      - rjs
      - rabl
      - rake
      - capfile
      - jbuilder
      - gemspec
      - podspec
      - irbrc
      - pryrc
      - prawn
      - thor
      - Appfile
      - Appraisals
      - Berksfile
      - Brewfile
      - Cheffile
      - Deliverfile
      - Fastfile
      - Gemfile
      - Guardfile
      - Podfile
      - Rakefile
      - Rantfile
      - Scanfile
      - simplecov
      - Snapfile
      - Thorfile
      - Vagrantfile
      - scala
      - sbt
      - sc
      - cmd
      - bat
      - coffee
      - erl
      - hrl
      - escript
      - lua
      - luau
      - md
      - mdown
      - mdwn
      - markdown
      - markdn
      - matlab
      - m
      - ps1
      - sh
      - bash
      - bashrc
      - ash
      - zsh
      - .bash_aliases
      - .bash_completions
      - .bash_functions
      - .bash_login
      - .bash_logout
      - .bash_profile
      - .bash_variables
      - .profile
      - .textmate_init
      - .zlogin
      - .zlogout
      - .zprofile
      - .zshenv
      - .zshrc
      - PKGBUILD
      - ebuild
      - eclass
      - r
      - sql
      - ddl
      - dml
      - tex
      - ltx
      - sty
      - cls
      - UNKNOWN
      - yaml
      - yml
      - toml
      - tml
      - Cargo.lock
      - Gopkg.lock
      - Pipfile
      - poetry.lock
      - uniform_resource_locator
      - custom_url_scheme
      - unix_file_path
      - windows_file_path
      - uniform_resource_identifier
      - hljs-1c
      - hljs-abnf
      - hljs-accesslog
      - hljs-actionscript
      - hljs-ada
      - hljs-angelscript
      - hljs-apache
      - hljs-applescript
      - hljs-arcade
      - hljs-arduino
      - hljs-armasm
      - hljs-asciidoc
      - hljs-aspectj
      - hljs-autohotkey
      - hljs-autoit
      - hljs-avrasm
      - hljs-awk
      - hljs-axapta
      - hljs-bash
      - hljs-basic
      - hljs-bnf
      - hljs-brainfuck
      - hljs-cal
      - hljs-capnproto
      - hljs-ceylon
      - hljs-clean
      - hljs-clojure-repl
      - hljs-clojure
      - hljs-cmake
      - hljs-coffeescript
      - hljs-coq
      - hljs-cos
      - hljs-cpp
      - hljs-crmsh
      - hljs-crystal
      - hljs-c
      - hljs-cs
      - hljs-csp
      - hljs-css
      - hljs-d
      - hljs-dart
      - hljs-delphi
      - hljs-diff
      - hljs-django
      - hljs-dns
      - hljs-dockerfile
      - hljs-dos
      - hljs-dsconfig
      - hljs-dts
      - hljs-dust
      - hljs-ebnf
      - hljs-elixir
      - hljs-elm
      - hljs-erb
      - hljs-erlang-repl
      - hljs-erlang
      - hljs-excel
      - hljs-fix
      - hljs-flix
      - hljs-fortran
      - hljs-fsharp
      - hljs-gams
      - hljs-gauss
      - hljs-gcode
      - hljs-gherkin
      - hljs-glsl
      - hljs-gml
      - hljs-go
      - hljs-golo
      - hljs-gradle
      - hljs-groovy
      - hljs-haml
      - hljs-handlebars
      - hljs-haskell
      - hljs-haxe
      - hljs-hsp
      - hljs-htmlbars
      - hljs-http
      - hljs-hy
      - hljs-inform7
      - hljs-ini
      - hljs-irpf90
      - hljs-isbl
      - hljs-java
      - hljs-javascript
      - hljs-jboss-cli
      - hljs-json
      - hljs-julia-repl
      - hljs-julia
      - hljs-kotlin
      - hljs-lasso
      - hljs-ldif
      - hljs-leaf
      - hljs-less
      - hljs-lisp
      - hljs-livecodeserver
      - hljs-livescript
      - hljs-llvm
      - hljs-lsl
      - hljs-lua
      - hljs-makefile
      - hljs-markdown
      - hljs-mathematica
      - hljs-matlab
      - hljs-maxima
      - hljs-mel
      - hljs-mercury
      - hljs-mipsasm
      - hljs-mizar
      - hljs-mojolicious
      - hljs-monkey
      - hljs-moonscript
      - hljs-n1ql
      - hljs-nginx
      - hljs-nimrod
      - hljs-nix
      - hljs-nsis
      - hljs-objectivec
      - hljs-ocaml
      - hljs-openscad
      - hljs-oxygene
      - hljs-parser3
      - hljs-perl
      - hljs-pf
      - hljs-pgsql
      - hljs-php
      - hljs-plaintext
      - hljs-pony
      - hljs-powershell
      - hljs-processing
      - hljs-profile
      - hljs-prolog
      - hljs-properties
      - hljs-protobuf
      - hljs-puppet
      - hljs-purebasic
      - hljs-python
      - hljs-q
      - hljs-qml
      - hljs-r
      - hljs-reasonml
      - hljs-rib
      - hljs-roboconf
      - hljs-routeros
      - hljs-rsl
      - hljs-ruby
      - hljs-ruleslanguage
      - hljs-rust
      - hljs-sas
      - hljs-scala
      - hljs-scheme
      - hljs-scilab
      - hljs-scss
      - hljs-shell
      - hljs-smali
      - hljs-smalltalk
      - hljs-sml
      - hljs-sqf
      - hljs-sql
      - hljs-stan
      - hljs-stata
      - hljs-step21
      - hljs-stylus
      - hljs-subunit
      - hljs-swift
      - hljs-taggerscript
      - hljs-tap
      - hljs-tcl
      - hljs-tex
      - hljs-thrift
      - hljs-tp
      - hljs-twig
      - hljs-typescript
      - hljs-vala
      - hljs-vbnet
      - hljs-vbscript-html
      - hljs-vbscript
      - hljs-verilog
      - hljs-vhdl
      - hljs-vim
      - hljs-x86asm
      - hljs-xl
      - hljs-xml
      - hljs-xquery
      - hljs-yaml
      - hljs-toml
      - hljs-zephir
      - hljs-html
      - groovy
      - kt
      - el
      - clj
      - ex
      - adb
      - ads
      - agda
      - elm
      - exs
      - glsl
      - ml
      - lean
      - lisp
      - rkt
      - sparql
      - vhdl
      - zig
      - dockerfile
      - f03
      - f08
      - f18
      - f90
      - f95
      - jl
      - mm
      - scm
      - sol
      - sv
      - asp
      - cfm
      - fs
      - fsi
      - fsx
      - tf
      - vba
      - svelte
      - vue
      - scss
      - feature
      - ini
      - ftl
      - hcl
      - abap
      - nim
      title: ClassificationSpecificEnum
      type: string
    ClassificationRenderingEnum:
      description: Specifically supported renderings...usually between generic types
      enum:
      - HTML
      - TWENTY_FOUR_BIT_ANSI_ESCAPED_SEQUENCES
      - HIGHLIGHT_JS_HTML
      title: ClassificationRenderingEnum
      type: string
    Role:
      description: This is the specific role of a format.
      enum:
      - ORIGINAL
      - ADDITIONAL
      - BOTH
      - PREVIEW
      title: Role
      type: string
    Application:
      description: |-
        A Model to describe what application a format/analytics event originated.

        mechanism: This will let us know where this came from.
        ie.only 2 enums are used here or else throw and error.
        default mechanism here is MANUAL- meaning that this came from our user Connecting an application.
        INTERNAL - means that this came from a shareable link
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: The ID of the application at the device level
          type: string
        name:
          $ref: '#/components/schemas/ApplicationNameEnum'
        version:
          description: This is the specific version number 0.0.0
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        onboarded:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        capabilities:
          $ref: '#/components/schemas/CapabilitiesEnum'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        automaticUnload:
          description: This is a proper that will let us know if we will proactivity
            unload all of your machine learning models.by default this is false.
          type: boolean
        enrichment:
          $ref: '#/components/schemas/SeededAssetEnrichment'
      required:
      - id
      - name
      - onboarded
      - platform
      - privacy
      - version
      title: Application
      type: object
    ApplicationNameEnum:
      description: This is a running enumeration for the Names of all the Applications
        that can be Registered
      enum:
      - SUBLIME
      - VS_CODE
      - JETBRAINS
      - FIREFOX_ADDON_MV2
      - FIREFOX_ADDON_MV3
      - SAFARI_EXTENSION_MV2
      - SAFARI_EXTENSION_MV3
      - PIECES_FOR_DEVELOPERS
      - PIECES_FOR_DEVELOPERS_CLI
      - OS_SERVER
      - GOOGLE_CHROME_EXTENSION_MV2
      - GOOGLE_CHROME_EXTENSION_MV3
      - ULTRA_EDIT
      - ATOM_PACKAGE
      - ADOBE_ILLUSTRATOR_PIECES_COLOR_SHARE
      - MICROSOFT_TEAMS
      - CHAT_GPT
      - OBSIDIAN
      - JUPYTER_HUB
      - VISUAL_STUDIO
      - MICROSOFT_EDGE
      - BRAVE
      - GOOGLE_CHAT
      - SLACK
      - AZURE_DATA_STUDIO
      - OPEN_SOURCE
      - R_STUDIO
      - VIM
      - NOTION
      - GITHUB_DESKTOP
      - RAYCAST
      - REPLIT
      - ALFRED
      - FIGMA
      - SKETCH
      - ADOBE_ILLUSTRATOR
      - NOTEPAD_PLUS_PLUS
      - EMBEETLE
      - ECLIPSE
      - X_CODE
      - NETBEANS
      - UNKNOWN
      title: ApplicationNameEnum
      type: string
    PlatformEnum:
      description: "This is an Enumeration for a Platform ie, WEB, MACOS, LINUX, WINDOWS"
      enum:
      - WEB
      - MACOS
      - LINUX
      - WINDOWS
      - FUCHSIA
      - IOS
      - ANDROID
      - UNKNOWN
      readOnly: true
      title: PlatformEnum
      type: string
    PrivacyEnum:
      description: |-
        OPEN: Means that privacy is fully open
        CLOSED: Means that privacy is fully locked down, and private
        ANONYMOUS: Means that we are allowed to collect information but it cannot get attached to me as the user.
      enum:
      - OPEN
      - CLOSED
      - ANONYMOUS
      title: PrivacyEnum
      type: string
    CapabilitiesEnum:
      description: This lets us know what capabilites in relation to ml/ cloud infrastructure
        you are opting into.
      enum:
      - LOCAL
      - CLOUD
      - BLENDED
      title: CapabilitiesEnum
      type: string
      x-stoplight:
        id: ac00y4704q0i5
    MechanismEnum:
      description: |-
        This will let us know how an asset was uploaded.

        MANUAL: this is an event such as a user driven send to pieces, or a paste to pieces.

        RECOMMENDED: This is an event that was initiall recommended via the suggestion flow, and a user decided totake the recommendation.

        AUTOMATIC: This is not user driven at all and the asset was automatically uploaded via the suggestion flow. or other methods.

        INTERNAL: This is an undelete able enum used for internal use only.
      enum:
      - MANUAL
      - RECOMMENDED
      - AUTOMATIC
      - INTERNAL
      - DELETED
      - UNKNOWN
      title: MechanismEnum
      type: string
    SeededAssetEnrichment:
      description: |-
        This is a specific Model for the SeededAsset that will enable the developer to modify the enrichment levels of persons, tags, websites.

        These enrichment levels will guarentee that the # of people/tags/websites do not eceeed the provided value, but will not guarentee a minimum.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tags:
          type: integer
        websites:
          type: integer
        persons:
          type: integer
        hints:
          type: integer
      title: SeededAssetEnrichment
      type: object
      x-stoplight:
        id: k51oacpa6b0vj
    UniversalUniqueIdentifier:
      description: "A uuid model. 36 Characters (4 Dashes, 32 Numbers/Letters) "
      example: 6a2f41a3-c54c-fce8-32d2-0324e1c32e22
      format: uuid
      maxLength: 36
      minLength: 36
      pattern: "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
        -[0-9a-fA-F]{12}"
      title: UniversalUniqueIdentifier (UUID)
      type: string
      x-tags:
      - uuid
    ByteDescriptor:
      description: This is a nice microclass to help with managing the size of a File
        or Fragment in a readable way for UI's
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          example: 33600
          format: int64
          type: integer
        readable:
          example: 33.6 KB
          type: string
      required:
      - readable
      - value
      title: ByteDescriptor
      type: object
    GroupedTimestamp:
      description: A helper classs to wrap Date-Time Values with Useful Helper Properties
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          format: date-time
          type: string
        readable:
          example: "Last week - June 3rd, 3:33 a.m."
          type: string
      required:
      - value
      title: GroupedTimestamp
      type: object
    FragmentFormat:
      description: This will be either a TransferableString or TransferableBytes that
        represent your fragment. ONLY Pass one or the other DONT pass both or neither.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        string:
          $ref: '#/components/schemas/TransferableString'
        bytes:
          $ref: '#/components/schemas/TransferableBytes'
        metadata:
          $ref: '#/components/schemas/FragmentMetadata'
      title: FragmentFormat
      type: object
    TransferableString:
      description: |-
        This is a String representaion of any of these changes.

        [NOT IMPLEMENTED] base64, base64_url, data_url
        [IMPLEMENTED] raw
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        raw:
          description: IMPLEMENTED
          type: string
        base64:
          description: NOT IMPLEMENTED
          type: string
        base64_url:
          description: NOT IMPLEMENTED
          type: string
        data_url:
          description: NOT IMPLEMENTED
          type: string
      title: TransferableString
      type: object
    TransferableBytes:
      description: |-
        Bytes is a Model for A FileFormat. Raw and file are the only 2 that are currently supported. Raw and file are an array of integers that represent the file.Typical conversion UTF8 -> array[int] or UTF8 -> array[bytes(in hexidecimal)] -> array[int]. Either way you convert is up to you but the type we need here is an array of integers.

        [NOT IMPLEMENTED] base64, base64_url, data_url
        [IMPLEMENTED] raw
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        raw:
          description: IMPLEMENTED
          items:
            type: integer
          type: array
        base64:
          description: NOT IMPLEMENTED
          items:
            type: integer
          type: array
        base64_url:
          description: NOT IMPLEMENTED
          items:
            type: integer
          type: array
        data_url:
          description: NOT IMPLEMENTED
          items:
            type: integer
          type: array
      title: TransferableBytes
      type: object
    FragmentMetadata:
      description: This is a model for metadata of a file!
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ext:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
      title: FragmentMetadata
      type: object
    FileFormat:
      description: This describes a FileFormat. If you need meta data you can get
        all of that from your format wrapper.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        bytes:
          $ref: '#/components/schemas/TransferableBytes'
        string:
          $ref: '#/components/schemas/TransferableString'
      title: FileFormat
      type: object
    FlattenedAnalysis:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code:
          $ref: '#/components/schemas/CodeAnalysis'
        id:
          type: string
        format:
          description: this is a reference to the format that it belongs too.
          type: string
        image:
          $ref: '#/components/schemas/FlattenedImageAnalysis'
      required:
      - format
      - id
      title: FlattenedAnalysis
      type: object
    CodeAnalysis:
      description: |-
        This is the ML Analysis object Specific to code.

        prediction and similarity are custom types. ** please dont not modify **
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tokenized:
          items:
            type: string
          type: array
        language:
          type: string
        type:
          $ref: '#/components/schemas/ClassificationGenericEnum'
        prediction:
          additionalProperties:
            type: number
          type: object
        similarity:
          additionalProperties:
            type: number
          type: object
        top5Colors:
          items:
            type: integer
          type: array
        top5Sorted:
          items:
            type: string
          type: array
        id:
          type: string
        analysis:
          description: this is just a reference to the analysis parent object.
          type: string
        model:
          $ref: '#/components/schemas/Model'
      required:
      - analysis
      - id
      - model
      - type
      title: CodeAnalysis
      type: object
    Model:
      description: "This is a Machine Learning Model, that will give readable information\
        \ about the Machine Learning Model Used."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: |
            uuid
          type: string
        version:
          description: this is a version of the model.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        name:
          description: This is an Optional Name of the Model.
          type: string
        description:
          description: An Optional Description of the model itself.
          type: string
        cloud:
          description: This will inform the user if this was a model that is hosted
            in the cloud
          type: boolean
        type:
          $ref: '#/components/schemas/ModelTypeEnum'
        usage:
          $ref: '#/components/schemas/ModelUsageEnum'
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
        ram:
          $ref: '#/components/schemas/ByteDescriptor'
        quantization:
          description: "quantization is a string like: q8f16_0,  q4f16_1, etc..."
          type: string
        foundation:
          $ref: '#/components/schemas/ModelFoundationEnum'
        downloaded:
          description: This is an optional bool to let us know if this model has been
            downloaded locally.
          type: boolean
        loaded:
          description: "This is a boolean that represents if the model is loaded into\
            \ memory.(this is not persisted, and is calculated on the fly.)"
          type: boolean
        unique:
          description: This is the unique model name used to load the model.
          type: string
        parameters:
          description: This is the number of parameters in terms of billions.
          nullable: true
          type: number
        provider:
          $ref: '#/components/schemas/ExternalMLProviderEnum'
        cpu:
          description: This is an optional bool that is optimized for CPU usage.
          type: boolean
        downloading:
          description: "This is a calculated property, that will say if this is currently\
            \ downloading."
          type: boolean
        maxTokens:
          $ref: '#/components/schemas/ModelMaxTokens'
        custom:
          description: "This will let us know if this is a custom, or fine tuned model\
            \ imported by the user."
          type: boolean
        capabilities:
          $ref: '#/components/schemas/ModelCapabilities'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - cloud
      - created
      - id
      - name
      - type
      - usage
      - version
      title: Model
      type: object
    ModelTypeEnum:
      description: "This will describe the type of Model balanced, speed, accuracy..."
      enum:
      - BALANCED
      - SPEED
      - ACCURACY
      title: ModelTypeEnum
      type: string
    ModelUsageEnum:
      description: "These are all the possible uses for a model, i.e. code classification,\
        \ OCR, text vs code,  tagify code, tag-based code search, neural code search,\
        \ tagify color and code description."
      enum:
      - OCR
      - CODE_CLASSIFICATION
      - TEXT_VS_CODE
      - TAGIFY_CODE
      - TLP_TAG_SEARCH
      - TLP_NEURAL_CODE_SEARCH
      - TAGIFY_COLOR_FROM_CODE
      - CODE_DESCRIPTION
      - CODE_TITLE
      - CODE_SEARCH_QUERIES
      - CODE_EXTRACTIVE_TAGS
      - CODE_EXTRACTIVE_LINKS
      - CODE_CONVERSATION
      - CODE_GENERATION
      - CODE_SEARCH
      - CODE_DISCOVERY
      - CODE_RELATED_PEOPLE
      - CODE_FRAMEWORK
      - VIDEO_OCR
      - TEXT_VS_CODE_SEGMENTATION
      - TEXT_EMBEDDING
      - TECHNICAL_ERROR
      title: ModelUsageEnum
      type: string
    ModelFoundationEnum:
      description: |-
        This is used to describe the foundational models used within POS.

        Note: LATEST models could be used as the latests of these and then could use a system to either(check a file) or
              we could add and endpoint to click out to the cloud to get the latest models and update these locally so that our users
              can always have the latest without having to update the application.(not used for now)
      enum:
      - GPT_3.5
      - GPT_4
      - T5
      - LLAMA_2_7B
      - LLAMA_2_13B
      - LLAMA_2_70B
      - LLAMA_3_2B
      - LLAMA_3_13B
      - LLAMA_3_70B
      - CODE_LLAMA_2_7B
      - CODE_LLAMA_2_13B
      - CODE_LLAMA_2_70B
      - BARD
      - ALPACA_7B
      - ALPACA_13B
      - ALPACA_33B
      - ALPACA_65B
      - VICUNA_7B
      - VICUNA_13B
      - VICUNA_33B
      - VICUNA_65B
      - GUANACO_7B
      - GUANACO_13B
      - GUANACO_33B
      - GUANACO_65B
      - OPENLLAMA_7B
      - OPENLLAMA_13B
      - GORILLA_7B
      - GORILLA_13B
      - GORILLA_33B
      - GORILLA_65B
      - WIZARDLM_7B
      - WIZARDLM_13B
      - WIZARDLM_30B
      - YULANCHAT_13B
      - YULANCHAT_65B
      - REDPAJAMA_3B
      - REDPAJAMA_7B
      - REDPAJAMA_13B
      - REDPAJAMA_33B
      - REDPAJAMA_65B
      - DOLLY_70M
      - DOLLY_160M
      - DOLLY_410M
      - DOLLY_1B
      - DOLLY_1.4B
      - DOLLY_2.8B
      - DOLLY_6.9B
      - DOLLY_12B
      - PYTHIA_70M
      - PYTHIA_160M
      - PYTHIA_410M
      - PYTHIA_1B
      - PYTHIA_1.4B
      - PYTHIA_2.8B
      - PYTHIA_6.9B
      - PYTHIA_12B
      - MOSS_7B
      - MOSS_13B
      - RMKV_LM_100M
      - RMKV_LM_400M
      - RMKV_LM_1.5B
      - RMKV_LM_3B
      - RMKV_LM_7B
      - RMKV_LM_14B
      - STARCODER_15.5B
      - WIZARDCODER_15B
      - SANTACODER_1.1B
      - TEXT_BISON
      - TEXTEMBEDDING_GECKO
      - CHAT_BISON
      - CODE_BISON
      - CODECHAT_BISON
      - CODE_GECKO
      - DISTILROBERTA
      - MISTRAL_7B
      - GEMINI
      - GEMINI_1.5
      - GEMINI_2
      - FAST_TEXT
      - UNIXCODER
      - PHI_1.5
      - PHI_2
      - MIXTRAL_8_x_7B
      - MIXTRAL_8_x_22B
      - GEMMA_7B
      - GEMMA_2B
      - CODE_GEMMA_7B
      - CODE_GEMMA_2B
      - RECURRENT_GEMMA_2B
      - GROK_1
      - GROK_1.5
      - CLAUDE_2
      - CLAUDE_3
      - STARLING_7B
      - DBRX
      - COMMAND_R+
      - GEMMA_1.1_2B
      - GEMMA_1.1_7B
      - GEMMA_2_9B
      - PHI_3_MINI
      - PHI_3_SMALL
      - GRANITE_3B
      - GRANITE_8B
      - LLAMA_3_8B
      - CLAUDE_3.5
      - CLAUDE_LATEST
      - GRANITE_LATEST
      - LLAMA_LATEST
      - PHI_LATEST
      - GEMMA_LATEST
      - GEMINI_LATEST
      - GPT_LATEST
      - AZURE_LATEST
      - AZURE_FAST
      - AZURE_BEST
      - AZURE_DEFAULT
      - AZURE_CUSTOM
      - PERPLEXITY_LATEST
      - PERPLEXITY_FAST
      - PERPLEXITY_BEST
      - PERPLEXITY_DEFAULT
      - PERPLEXITY_CUSTOM
      - CODESTRAL_LATEST
      - DEEPSEEK_LATEST
      - LLAVA_LATEST
      - MIXTRAL_LATEST
      - MISTRAL_LATEST
      - ORCA_LATEST
      - QWEN_CODER_LATEST
      - QWEN_LATEST
      - QWQ_LATEST
      - STARCODER_LATEST
      - TINYLLAMA_LATEST
      - VICUNA_LATEST
      - WIZARD_LATEST
      - ZEPHYR_LATEST
      - UNKNOWN
      title: ModelFoundationEnum
      type: string
      x-stoplight:
        id: 51q7qb9yot5bc
    ExternalMLProviderEnum:
      description: "This is a Model used for the Model class. This will be used to\
        \ describe the provider in which this Mode lcam from IE meta, google, apple,\
        \ ...etc"
      enum:
      - APPLE
      - AMAZON
      - GOOGLE
      - META
      - OPENAI
      - LMSYS
      - SALESFORCE
      - HUGGING_FACE
      - UNIVERSITY_OF_WASHINGTON
      - OPEN_LM_RESEARCH
      - MICROSOFT
      - UC_BERKLEY
      - PEKING_UNIVERSITY
      - RENMIN_UNIVERSITY_OF_CHINA
      - TOGETHER_AI
      - DATABRICKS
      - ELEUTHER_AI
      - FUDAN_UNIVERSITY
      - BLICKDL
      - HONG_KONG_BAPTIST_UNIVERSITY
      - BIGCODE
      - JINA
      - PIECES
      - ANTHROPIC
      - IBM
      - SNOWFLAKE
      - PERPLEXITY
      - UNKNOWN
      title: ExternalMLProviderEnum
      type: string
    ModelMaxTokens:
      description: |-
        This will describe the MaxTokens for an MLModel

        total is required.

        iff there is a differentiator with inputs/outputs, then we can also provide those as well.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        total:
          nullable: true
          type: number
          x-stoplight:
            id: nual0ol3dah5t
        input:
          nullable: true
          type: number
          x-stoplight:
            id: t4qdo8kyzlm69
        output:
          nullable: true
          type: number
          x-stoplight:
            id: osszglwsd1say
      required:
      - total
      title: ModelMaxTokens
      type: object
      x-stoplight:
        id: xu4zqt6eq8i9x
    ModelCapabilities:
      description: This will let us know what capabilities the model is aloud to be
        used for.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        temporal:
          description: True if model is able to support live context and any other
            temporally powered RAG Capabilities i.e. "What did I do yesterday?"
          type: boolean
        images:
          description: True if the model can leverage images and graphical material
            files in it's context window
          type: boolean
        videos:
          description: True if the model can leverage videos files in it's context
            window
          type: boolean
        documents:
          description: True if the model can leverage code/text/other files in it's
            context window
          type: boolean
        codebases:
          description: True if the model can leverage entire code bases/snippetized
            code bases in its context window
          type: boolean
        assets:
          description: True if the model can leverage saved assets & their metadata
            in its context window.
          type: boolean
        websites:
          description: True if the model can leverage websites in its context window.
          type: boolean
      title: ModelCapabilities
      type: object
    Score:
      description: |-
        This is use as the score for an asset.

        Manual: will be the raw sum of the asset activity events ranks with mechanismEnum == manual
        Automatic: will be the raw sum of the asset activity events ranks with mechanismEnum == automatic
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        manual:
          description: These are points assigned via manual user driven events.
          type: integer
        automatic:
          description: These are point assigned via automatic activity events.
          type: integer
        priority:
          type: integer
        reuse:
          type: integer
        update:
          type: integer
        reference:
          type: integer
        searched:
          type: integer
      required:
      - automatic
      - manual
      title: Score
      type: object
      x-stoplight:
        id: 3xh75xwjtbvvn
    FlattenedImageAnalysis:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        ocr:
          $ref: '#/components/schemas/FlattenedOCRAnalysis'
        analysis:
          description: this is a reference to our (parent)analysis
          type: string
      required:
      - analysis
      - id
      title: FlattenedImageAnalysis
      type: object
    FlattenedOCRAnalysis:
      description: "[DAG Safe] Ocr Analysis that will reference FlattenedFormats."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        raw:
          $ref: '#/components/schemas/ReferencedFormat'
        hocr:
          $ref: '#/components/schemas/ReferencedFormat'
        model:
          $ref: '#/components/schemas/Model'
        image:
          description: this is a refernece to the image analysis.
          type: string
      required:
      - hocr
      - id
      - image
      - model
      - raw
      title: FlattenedOCRAnalysis
      type: object
    Relationship:
      description: "A relationship expresses a graph of like types, to build a relationship\
        \ graph. \n To get the type of relationship, this is for ie Asset, tag, website,\
        \ format ...etc, you will need to iterate through the edges and get the root\
        \ or you can just get the first edge's type as a relationship can only be\
        \ expressed through same type"
      properties:
        id:
          type: string
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        embeddings:
          $ref: '#/components/schemas/Embeddings'
        edges:
          $ref: '#/components/schemas/Edges'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - created
      - edges
      - embeddings
      - id
      - updated
      title: Relationship
      type: object
      x-stoplight:
        id: 4rrtvwczrna8a
    Embeddings:
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/Embedding'
          type: array
      required:
      - iterable
      title: Embeddings
      type: object
      x-stoplight:
        id: 30spxesy2yt3n
    Embedding:
      description: ""
      properties:
        raw:
          description: this is the raw value of the embedding
          items:
            type: number
          type: array
        model:
          $ref: '#/components/schemas/Model'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - created
      - model
      - raw
      - updated
      title: Embedding
      type: object
      x-stoplight:
        id: f3l28697sxs9f
    Edges:
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/Node'
          type: array
      required:
      - iterable
      title: Edges
      type: object
      x-stoplight:
        id: 704ijnbanupva
    Node:
      description: |-
        This describes a node within a relationship graph used to related like types. ie asset to asset, tag to tag, ...etc

        created: is here to let us know when the node was attached.

        id: this is the the id of the type ie, if the type is Asset the id here points to the asset that this node represents.
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/NodeTypeEnum'
        root:
          description: This is a boolean to let us know if this node is the root or
            origin of the relationship graph.
          type: boolean
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - created
      - id
      - root
      - type
      title: Node
      type: object
      x-stoplight:
        id: 62qufuid3hpoq
    NodeTypeEnum:
      description: "This describes the type of a node ie an asset, tag, website, format...\
        \ ETC"
      enum:
      - TAG
      - WEBSITE
      - FORMAT
      - ASSET
      title: NodeTypeEnum
      type: string
      x-stoplight:
        id: cdukkwwhd2yv0
    FlattenedActivities:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedActivity'
          type: array
      required:
      - iterable
      title: FlattenedActivities
      type: object
      x-stoplight:
        id: q92gb162zwy4b
    ReferencedActivity:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedActivity'
      required:
      - id
      title: ReferencedActivity
      type: object
      x-stoplight:
        id: xtqpgn1gv04j0
    FlattenedActivity:
      description: |-
        Note:
        - if mechanism == internal we will not display to the user.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        event:
          $ref: '#/components/schemas/SeededConnectorTracking'
        application:
          $ref: '#/components/schemas/Application'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        format:
          $ref: '#/components/schemas/ReferencedFormat'
        user:
          $ref: '#/components/schemas/FlattenedUserProfile'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        rank:
          type: integer
      required:
      - application
      - created
      - event
      - id
      - mechanism
      - updated
      title: FlattenedActivity
      type: object
      x-stoplight:
        id: dqv65k45a0c41
    ReferencedAsset:
      description: "A reference to a asset, which at minimum must have the asset's\
        \ id. But in the case of a hydrated client API it may have a populated reference\
        \ of type Asset."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedAsset'
      required:
      - id
      title: "ReferencedAsset [DAG Safety]"
      type: object
    FlattenedAsset:
      description: |-
        An Asset Model representing data extracted from an Application connecting a group of data containing one or more Formats. [DAG Compatible - Directed Acyclic Graph Data Structure]

        FlattenedAsset prevent Cycles in Reference because all outbound references are strings as opposed to crosspollinated objects.

        i.e. FlattenedFormat.preview is Type String, and
        FlattenedFormat.original is Type String
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: "The globally available UID representing the asset in the Database,\
            \ both locally and in the cloud."
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          type: string
        name:
          type: string
        creator:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        synced:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        formats:
          $ref: '#/components/schemas/FlattenedFormats'
        preview:
          $ref: '#/components/schemas/FlattenedPreview'
        original:
          description: An identifier of the format that is a reference to the original.
          example: 0872ccbf-1d8f-4f46-9028-469794d72761
          type: string
        shares:
          $ref: '#/components/schemas/FlattenedShares'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        interacted:
          $ref: '#/components/schemas/GroupedTimestamp'
        tags:
          $ref: '#/components/schemas/FlattenedTags'
        sensitives:
          $ref: '#/components/schemas/FlattenedSensitives'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        curated:
          description: This is an optional boolean that will flag that this asset
            came from a currated collection.
          type: boolean
        discovered:
          type: boolean
        activities:
          $ref: '#/components/schemas/FlattenedActivities'
        score:
          $ref: '#/components/schemas/Score'
        favorited:
          type: boolean
        pseudo:
          type: boolean
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        hints:
          $ref: '#/components/schemas/FlattenedHints'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        demo:
          description: This will let us know if this asset was generated as a 'demo'
            snippet
          type: boolean
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
      required:
      - created
      - creator
      - formats
      - id
      - mechanism
      - original
      - preview
      - updated
      title: "FlattenedAsset [DAG Safety]"
      type: object
    FlattenedFormats:
      description: |
        A collection of Formats specific to the authenticated user. [DAG Compatible - Directed Acyclic Graph Data Structure]

        FlattenedFormats prevent Cycles in Reference because all outbound references are strings as opposed to crosspollinated objects.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedFormat'
          type: array
      required:
      - iterable
      title: FlattenedFormats
      type: object
    FlattenedPreview:
      description: These are the references of the formats **Only UUIDS**
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        base:
          description: this is a reference(uuid) to the base format
          type: string
        overlay:
          description: this is a reference(uuid) to the overlay format
          type: string
      required:
      - base
      title: FlattenedPreview
      type: object
    FlattenedShares:
      description: This is just an iterable of our individual share models.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/FlattenedShare'
          type: array
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: "FlattenedShares [DAG Safe]"
      type: object
    FlattenedShare:
      description: |-
        This is a dag safe version of the Share.

        if user is undefined && access is public then we have an asset that is publicly available.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: This references the share it self.
          type: string
        asset:
          description: this is the asset id on the flattened share.
          type: string
        user:
          description: this is the uuid of the user that the share is created for.
          type: string
        link:
          description: this is the prebuilt link.
          type: string
        access:
          $ref: '#/components/schemas/AccessEnum'
        accessors:
          $ref: '#/components/schemas/Accessors'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        short:
          description: This is a shortened version of our uuid.
          type: string
        name:
          type: string
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        distributions:
          $ref: '#/components/schemas/FlattenedDistributions'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - access
      - accessors
      - created
      - id
      - link
      - short
      title: "FlattenedShare [DAG SAFE]"
      type: object
    AccessEnum:
      enum:
      - PUBLIC
      - PRIVATE
      title: AccessEnum
      type: string
    Accessors:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Accessor'
          type: array
      required:
      - iterable
      title: Accessors
      type: object
    Accessor:
      description: |-
        This is used to determine who has accessed a share. and how many times.

        The user here is the user that accessed this Piece.(optional) if undefined then this user was not logged in yet.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        os:
          description: this is an os id.
          type: string
        share:
          type: string
        count:
          description: how many times this user accessed this piece.
          type: integer
        user:
          $ref: '#/components/schemas/FlattenedUserProfile'
      required:
      - count
      - id
      - os
      - share
      title: Accessor
      type: object
    FlattenedUserProfile:
      description: This is a FlattenedUserProfile that includes information that is
        not sensative in relation to a user.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: this is the uuid that identifies a user.
          type: string
        email:
          type: string
        name:
          type: string
        username:
          type: string
        picture:
          type: string
        vanityname:
          type: string
      required:
      - id
      title: FlattenedUserProfile
      type: object
    FlattenedAssets:
      description: |-
        A collection of Assets specific to the authenticated user. [DAG Compatible - Directed Acyclic Graph Data Structure]

        FlattenedAssets prevent Cycles in Reference because all outbound references are strings as opposed to crosspollinated objects.

        i.e. Asset asset = FlattenedAssets.iterable[0] => Format format = asset.preview => String id = format.asset => String id
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedAsset'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an asset id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      title: "FlattenedAssets [DAG Safety]"
      type: object
    FlattenedDistributions:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedDistribution'
          type: array
      required:
      - iterable
      title: FlattenedDistributions
      type: object
      x-stoplight:
        id: v6milr4lyc2m5
    ReferencedDistribution:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedDistribution'
      required:
      - id
      title: ReferencedDistribution
      type: object
      x-stoplight:
        id: d63su254fbqhx
    FlattenedDistribution:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        share:
          description: This is the UUId of the share.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mailgun:
          $ref: '#/components/schemas/MailgunDistribution'
        github:
          $ref: '#/components/schemas/GitHubDistribution'
      required:
      - created
      - id
      - share
      - updated
      title: FlattenedDistribution
      type: object
      x-stoplight:
        id: 6y3ky3aquxues
    MailgunDistribution:
      description: This is a specific Distribution for mailgun specific information.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        recipients:
          $ref: '#/components/schemas/Recipients'
      required:
      - recipients
      title: MailgunDistribution
      type: object
      x-stoplight:
        id: trfkkeucgeodb
    Recipients:
      description: "This an iterable of People that are attached to a specific distribution\
        \ ie, slack, maigun, ...etc"
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/PersonBasicType'
          type: array
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      required:
      - iterable
      title: Recipients
      type: object
      x-stoplight:
        id: ehxm9c13zp3ph
    PersonBasicType:
      description: |-
        This is all optional properties around the most basic information around a non-pieces user.

        A Basic type will NOT have a scope as it is not an actual pieces user.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        username:
          description: username or twitter handle...etc
          type: string
        name:
          description: This is the name of the basic user.
          type: string
        picture:
          description: this is a url picture representation of a user.
          type: string
        email:
          description: an email that was extracted.
          type: string
        sourced:
          $ref: '#/components/schemas/ExternallySourcedEnum'
        url:
          description: This is a specific url that this basic user came from.
          type: string
        mailgun:
          $ref: '#/components/schemas/MailgunMetadata'
      title: PersonBasicType
      type: object
    ExternallySourcedEnum:
      description: This is an enum that will highlight something that is externally
        sourced.
      enum:
      - TWITTER
      - MEDIUM
      - LINKED_IN
      - INSTAGRAM
      - FACEBOOK
      - REDDIT
      - DISCORD
      - BIT_BUCKET
      - GIT_LAB
      - GIT_HUB
      - SLACK
      - MAILGUN
      title: ExternallySourcedEnum
      type: string
    MailgunMetadata:
      description: |-
        TODO add additional properties.
        TODO eventually modify this model to look like the response from Mailgun.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        messageId:
          description: This is the id given to us from mailgun when the email was
            sent successfully.
          type: string
      required:
      - messageId
      title: MailgunMetadata
      type: object
      x-stoplight:
        id: 4hf13p2cn4zsv
    GitHubDistribution:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        gist:
          $ref: '#/components/schemas/GitHubGistDistribution'
      title: GitHubDistribution
      type: object
      x-stoplight:
        id: z75okvxt8sfwq
    GitHubGistDistribution:
      description: This is a published Github Gist.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        recipients:
          $ref: '#/components/schemas/Recipients'
        public:
          description: This will let us know if the gist is public or private.
          type: boolean
        description:
          description: This is the description of the Gist Distribution
          type: string
        name:
          description: This is the name of the gist you will add.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        github_id:
          description: This is the id that github uses to represent the gist.
          type: string
        url:
          description: This is the url where the gist is.
          type: string
      required:
      - created
      - github_id
      - name
      - public
      - recipients
      - updated
      - url
      title: GitHubGistDistribution
      type: object
      x-stoplight:
        id: 472670b33d47b
    FlattenedWebsites:
      description: "This is a specific model for related websites to an asset.[DAG\
        \ SAFE]"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedWebsite'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an website\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedWebsites
      type: object
    ReferencedWebsite:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedWebsite'
      required:
      - id
      title: ReferencedWebsite
      type: object
    FlattenedWebsite:
      description: "This is a specific model for related websites to an asset.[DAG\
        \ SAFE]"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: this is aspecific uuid that represents
          type: string
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        name:
          description: A customizable name.
          type: string
        url:
          description: The true url or the website.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - name
      - updated
      - url
      title: FlattenedWebsite
      type: object
    FlattenedPersons:
      description: This is the plural of Person. will have top level meta about the
        person including an iterable of all the person.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedPerson'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an person\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedPersons
      type: object
    ReferencedPerson:
      description: "[DAG Safe] version of a Person Model. "
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedPerson'
      required:
      - id
      title: ReferencedPerson
      type: object
    FlattenedPerson:
      description: |-
        if expiration is add then, after the alloted expiration date the user will only have view && comment only permissions. Only present in the case there is a scope such as a defined collection/asset...

        if asset is passed then that means this person belongs to a scoped asset.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        type:
          $ref: '#/components/schemas/PersonType'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        access:
          additionalProperties:
            $ref: '#/components/schemas/PersonAccess'
          description: "This is a Map<String, PersonAccess> where the the key is an\
            \ asset id."
          type: object
        tags:
          $ref: '#/components/schemas/FlattenedTags'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        models:
          additionalProperties:
            $ref: '#/components/schemas/PersonModel'
          description: "This is a Map<String, PersonModel>, where the the key is an\
            \ asset id."
          type: object
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - type
      - updated
      title: FlattenedPerson
      type: object
    PersonType:
      description: |-
        basic or platform is absolutely required here.
        basic: if provided is just information that has been either extracted from the piece or other wise added here.
        platform: is a real Pieces User.(this user will also exist within the user's users collection. && if not then we will just use the data we have.)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        basic:
          $ref: '#/components/schemas/PersonBasicType'
        platform:
          $ref: '#/components/schemas/UserProfile'
      title: PersonType
      type: object
    UserProfile:
      description: This is the model for a user logged into Pieces.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        picture:
          default: https://picsum.photos/200
          description: 'mapped from picture.URL pointing to the user''s profile picture. '
          example: https://picsum.photos/200
          format: uri
          type: string
        email:
          default: user@pieces.app
          example: user@pieces.app
          format: email
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        username:
          description: "\t(unique) User's username.\n\t"
          type: string
        id:
          type: string
        name:
          description: This is the name of the User.
          type: string
        aesthetics:
          $ref: '#/components/schemas/Aesthetics'
        vanityname:
          type: string
        allocation:
          $ref: '#/components/schemas/AllocationCloud'
        providers:
          $ref: '#/components/schemas/ExternalProviders'
        auth0:
          $ref: '#/components/schemas/Auth0UserMetadata'
      required:
      - aesthetics
      - id
      title: UserProfile
      type: object
    Aesthetics:
      description: These are aesthetics properties that will ensure the darkmode +
        font size and other aesthetics properties persist:)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        theme:
          $ref: '#/components/schemas/Theme'
        font:
          $ref: '#/components/schemas/Font'
      required:
      - font
      - theme
      title: Aesthetics
      type: object
    Theme:
      description: This will describe the theme that belongs to a user.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        dark:
          type: boolean
      required:
      - dark
      title: Theme
      type: object
    Font:
      description: This will describe the font that the user sees.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        size:
          type: integer
      required:
      - size
      title: Font
      type: object
    AllocationCloud:
      description: |-
        update && version: will be present only if your cloud was successfully spun up && running.

        updated: is the last time this was updated.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: This is a uuid that represents this cloud.(this is the same
            as the userid)
          type: string
        user:
          description: this is your useruuid.
          type: string
        urls:
          $ref: '#/components/schemas/AllocationCloudUrls'
        status:
          $ref: '#/components/schemas/AllocationCloudStatus'
        project:
          description: This is the project that this is attached to.
          type: string
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        version:
          description: this is the current version of the server.
          type: string
        region:
          description: this is the region where the project is defined.
          type: string
      required:
      - id
      - project
      - status
      - urls
      - user
      title: AllocationCloud
      type: object
    AllocationCloudUrls:
      description: |-
        you will have at minimum 2 urls,

        base: is the default url of your cloud.

        id: is the branded url, uuid.pieces.cloud.

        (optional) vanity: is the custom branded url, mark.pieces.cloud
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        base:
          $ref: '#/components/schemas/AllocationCloudUrl'
        id:
          $ref: '#/components/schemas/AllocationCloudUrl'
        vanity:
          $ref: '#/components/schemas/AllocationCloudUrl'
      required:
      - base
      - id
      title: AllocationCloudUrls
      type: object
    AllocationCloudUrl:
      description: This is one of the 3 possible urls that will route to your cloud
        :).
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        status:
          $ref: '#/components/schemas/AllocationStatusEnum'
        url:
          description: this is the base url that is used to communicat with your vpc.
          type: string
      required:
      - status
      - url
      title: AllocationCloudUrl
      type: object
    AllocationStatusEnum:
      description: This is a Generic status enumeration that will be used for the
        status of dns and pod or cloud.
      enum:
      - PENDING
      - RUNNING
      - FAILED
      - SUCCEEDED
      - UNKNOWN
      title: AllocationStatusEnum
      type: string
    AllocationCloudStatus:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        cloud:
          $ref: '#/components/schemas/AllocationStatusEnum'
      required:
      - cloud
      title: AllocationCloudStatus
      type: object
    ExternalProviders:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ExternalProvider'
          type: array
      required:
      - iterable
      title: ExternalProviders
      type: object
      x-stoplight:
        id: p3i8qgeqjc725
    ExternalProvider:
      description: I know that profileData and user_id have differeing casing but
        they are done because they map to Auth0's projeecties.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        type:
          $ref: '#/components/schemas/ExternalProviderTypeEnum'
        user_id:
          description: This is the user_id within the provider.
          type: string
        access_token:
          description: "This is optional here, but will be present for BB, Github,\
            \ and google."
          type: string
        expires_in:
          description: "Some providers have an expiration on their access token. IE\
            \ BB, Google, NOT Github."
          type: integer
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        profileData:
          $ref: '#/components/schemas/ExternalProviderProfileData'
        connection:
          description: "This is an optional field that will be provided onentreprise\
            \ connections. ie is type == waad then connection might be PiecesApp.\
            \ However is other cases,you my find your provider and connection is the\
            \ exact same string. To decifer between the two, you can use the isSocial\
            \ bool."
          type: string
        isSocial:
          type: boolean
      required:
      - created
      - type
      - updated
      - user_id
      title: ExternalProvider
      type: object
      x-stoplight:
        id: nn8vtdsit4kpg
    ExternalProviderTypeEnum:
      description: |-
        This is an enum to describe the provider used to authenticate a user.

        IMPORTANT NOT to modify tha values here unless they are explicitly mapped with auth0's provider values(example within cloud server)

        'waad': (windows azure active directory)
      enum:
      - github
      - auth0
      - google-oauth2
      - bitbucket
      - linkedin
      - twitter
      - facebook
      - waad
      title: ExternalProviderTypeEnum
      type: string
      x-stoplight:
        id: 8f8qns992xodh
    ExternalProviderProfileData:
      description: |-
        All of these will be optional.

        Will support ProfileData from all our social providers.
      properties:
        name:
          type: string
        picture:
          type: string
        nickname:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        node_id:
          type: string
        gravatar_id:
          type: string
        url:
          type: string
        html_url:
          type: string
        followers_url:
          type: string
        following_url:
          type: string
        gists_url:
          type: string
        starred_url:
          type: string
        subscriptions_url:
          type: string
        organizations_url:
          type: string
        repos_url:
          type: string
        events_url:
          type: string
        received_events_url:
          type: string
        type:
          type: string
        site_admin:
          type: boolean
        company:
          type: string
        blog:
          type: string
        anchor:
          type: string
        hireable:
          type: boolean
        bio:
          type: string
        twitter_username:
          type: string
        public_repos:
          type: integer
        public_gists:
          type: integer
        followers:
          type: integer
        following:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        private_gists:
          type: integer
        total_private_repos:
          type: integer
        owned_private_repos:
          type: integer
        disk_usage:
          type: integer
        collaborators:
          type: integer
        two_factor_authentication:
          type: boolean
      title: ExternalProviderProfileData
      type: object
      x-stoplight:
        id: tcbvq2kcc81aw
    Auth0UserMetadata:
      description: User Metadata from Auth0
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        global_id:
          format: uuid
          type: string
        cloud_key:
          type: string
        stripe_customer_id:
          description: A customer ID that is added to the user in the case of payments
          type: string
        vanityname:
          description: this is the vanityname of the user.(set from their custom CNAME
            dns record.) ie mark.pieces.cloud where "mark" is the vanityname.
          type: string
        allocation:
          $ref: '#/components/schemas/Auth0UserAllocationMetadata'
        open_AI:
          $ref: '#/components/schemas/Auth0OpenAIUserMetadata'
        beta:
          $ref: '#/components/schemas/AnonymousTemporalRange'
      required:
      - global_id
      title: Auth0UserMetadata
      type: object
    Auth0UserAllocationMetadata:
      description: This is specifically for our allocation server metadata.
      properties:
        project:
          type: string
        region:
          type: string
      required:
      - project
      - region
      title: Auth0UserAllocationMetadata
      type: object
      x-stoplight:
        id: ewimmjf8x5tog
    Auth0OpenAIUserMetadata:
      description: Only supporting a single api key per user.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        api_key:
          type: string
          x-stoplight:
            id: ew99i9jxq2hb9
        api_key_name:
          type: string
          x-stoplight:
            id: fkso7ljifncw5
        organization_key:
          type: string
          x-stoplight:
            id: fq428udraruae
      title: Auth0OpenAIUserMetadata
      type: object
      x-stoplight:
        id: mbwdpqf5zq1sl
    AnonymousTemporalRange:
      description: |-
        if you want a range between you can use from && to.

        if you want anything before, use to and NO from.

        if you want anything after, use from and NO to.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        from:
          $ref: '#/components/schemas/GroupedTimestamp'
        to:
          $ref: '#/components/schemas/GroupedTimestamp'
        between:
          type: boolean
        continuous:
          type: boolean
      title: AnonymousTemporalRange
      type: object
    PersonAccess:
      description: |-
        if scoped is provided will let us know what level of permission(access) this specific person has in relation to what scope.(collection, asset,...etc)

        in the future will expand to global (with its own enumeration for a global entire project/cloud scope)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        scoped:
          $ref: '#/components/schemas/PersonAccessScopedEnum'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
      title: PersonAccess
      type: object
    PersonAccessScopedEnum:
      description: This is an enum that will help provide information around what
        permission this person has in relate to their scope.
      enum:
      - OWNER
      - EDITOR
      - COMMENTER
      - VIEWER
      title: PersonAccessScopedEnum
      type: string
    FlattenedTags:
      description: This is multiple ReferencedTags(which includes an optional FlattenedTag
        Model within the reference model).
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedTag'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an tag id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedTags
      type: object
    ReferencedTag:
      description: "[DAG Safe] version of a Tag Model. "
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedTag'
      required:
      - id
      title: ReferencedTag
      type: object
    FlattenedTag:
      description: This is a Flattened Version of a Tag.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        text:
          type: string
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        category:
          $ref: '#/components/schemas/TagCategoryEnum'
        relationship:
          $ref: '#/components/schemas/Relationship'
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - category
      - created
      - id
      - text
      - updated
      title: FlattenedTag
      type: object
    TagCategoryEnum:
      description: This is an enum that describes the category that that this tag
        is apart of.
      enum:
      - HANDLE
      - EMAIL
      - UNKNOWN
      title: TagCategoryEnum
      type: string
    PersonModel:
      description: |-
        This is a PersonSpecific Model. and will let us know for all the assets that get attached to the person if, this person was attached via a model or just attached automatically.

        explanation here are the reason why a Person was attached to an asset.
      properties:
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        model:
          $ref: '#/components/schemas/ReferencedModel'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        explanation:
          $ref: '#/components/schemas/ReferencedAnnotation'
      title: PersonModel
      type: object
      x-stoplight:
        id: u3434z4l9nkgz
    ReferencedModel:
      description: "*****NOTE:***** This is the basic referencedModel, for Now since\
        \ we dont have a FlattenedModel, im going to simply not include the reference,\
        \ because I do NOT want to attach a Model here (would cause breaking changes\
        \ if we switched from a Model -> a flattenedModel). and (2) we are under going\
        \ Model changes to the Model, so would cause issues."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      required:
      - id
      title: ReferencedModel
      type: object
      x-stoplight:
        id: 66fsk26is4mad
    ReferencedAnnotation:
      description: "This is the referenced version of a annotation, main used for\
        \ the uuid."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedAnnotation'
      required:
      - id
      title: ReferencedAnnotation
      type: object
    FlattenedAnnotation:
      description: "This is the flattened Version of the annotation, IMPORTANT: when\
        \ referencing these, ONLY Take the UUID, do NOT polinate(ie w/ asset/person/model)\
        \ the FlattenedAnnotation as it can create an infinite loop."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        person:
          $ref: '#/components/schemas/ReferencedPerson'
        type:
          $ref: '#/components/schemas/AnnotationTypeEnum'
        text:
          description: This is the text of the annotation.
          type: string
        model:
          $ref: '#/components/schemas/ReferencedModel'
        pseudo:
          type: boolean
        favorited:
          type: boolean
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        score:
          $ref: '#/components/schemas/Score'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        summary:
          $ref: '#/components/schemas/ReferencedWorkstreamSummary'
      required:
      - created
      - id
      - text
      - type
      - updated
      title: FlattenedAnnotation
      type: object
      x-stoplight:
        id: 32nrkjic26cqi
    AnnotationTypeEnum:
      description: "This is used to describe a specific type of annotation. NOTE**\
        \ This is linked to the annotation_type_filter in the parameters folder(if\
        \ you change an enum here, please adjust the enum there.)"
      enum:
      - DESCRIPTION
      - COMMENT
      - DOCUMENTATION
      - SUMMARY
      - EXPLANATION
      - GIT_COMMIT
      title: AnnotationTypeEnum
      type: string
      x-stoplight:
        id: nqbk5tmivuzju
    ReferencedAnchor:
      description: "This is the referenced version of a Anchor, main used for the\
        \ uuid."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedAnchor'
      required:
      - id
      title: ReferencedAnchor
      type: object
      x-stoplight:
        id: f744f32378d60
    FlattenedAnchor:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        type:
          $ref: '#/components/schemas/AnchorTypeEnum'
        watch:
          type: boolean
        points:
          $ref: '#/components/schemas/FlattenedAnchorPoints'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        name:
          type: string
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - points
      - text
      - type
      - updated
      title: FlattenedAnchor
      type: object
      x-stoplight:
        id: 4367412a54ecf
    AnchorTypeEnum:
      description: This is an enum used to differentiate the different between different
        anchors. Used in the Anchor data model.
      enum:
      - FILE
      - DIRECTORY
      title: AnchorTypeEnum
      type: string
      x-stoplight:
        id: 9b1a14e5046fe
    FlattenedAnchorPoints:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedAnchorPoint'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an AnchorPoint\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedAnchorPoints
      type: object
      x-stoplight:
        id: 5pm9cxk2bywwe
    ReferencedAnchorPoint:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedAnchorPoint'
      required:
      - id
      title: ReferencedAnchorPoint
      type: object
      x-stoplight:
        id: 6zw9d3345s8zn
    FlattenedAnchorPoint:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        verified:
          type: boolean
        fullpath:
          description: This is the text of the path.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - anchor
      - created
      - fullpath
      - id
      - updated
      title: FlattenedAnchorPoint
      type: object
      x-stoplight:
        id: pknq786r5d1xd
    FlattenedAnnotations:
      description: "This is a flattened plural of Annotation, typically this will\
        \ just be a list of uuids."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedAnnotation'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an annotation\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedAnnotations
      type: object
      x-stoplight:
        id: 5mqga30ecdyra
    FlattenedConversations:
      description: Flattened version of conversations.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedConversation'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an Conversation\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedConversations
      type: object
      x-stoplight:
        id: 5i042z6tvzgdt
    ReferencedConversation:
      description: This is a DAG-Safe Minimal version of a Conversation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedConversation'
      required:
      - id
      title: ReferencedConversation
      type: object
    FlattenedConversation:
      description: |-
        This is a flattened version of the Convsersation for DAG-Safety.

        This will hold together a conversation. Ie all the message within a conversation.

        All the additional properties on here used on here like(anchors/assets) are used for context that will seed the conversation.

        model is a calculated property, and will be the model of the last message sent if applicable.

        summaries: on the top level here will simply be used to associate a conversation and a summary(this is not used for grounding), grounding.summaries will be used for this.(TODO)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        name:
          description: This is a name that is customized.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        favorited:
          type: boolean
        application:
          $ref: '#/components/schemas/Application'
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        model:
          $ref: '#/components/schemas/ReferencedModel'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        type:
          $ref: '#/components/schemas/ConversationTypeEnum'
        grounding:
          $ref: '#/components/schemas/ConversationGrounding'
        score:
          $ref: '#/components/schemas/Score'
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
        demo:
          description: This will let us know if this conversation was generated as
            a 'demo' conversation
          type: boolean
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
      required:
      - created
      - id
      - messages
      - type
      - updated
      title: FlattenedConversation
      type: object
      x-stoplight:
        id: w3ufda6vw6bms
    FlattenedConversationMessages:
      description: This is a flattened plural version of ConversationMessages
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedConversationMessage'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an ConversationMessage\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedConversationMessages
      type: object
      x-stoplight:
        id: 977f9dafbb69d
    ReferencedConversationMessage:
      description: This is a DAG-Safe Minimal version of a ConversationMessage.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedConversationMessage'
      required:
      - id
      title: ReferencedConversationMessage
      type: object
      x-stoplight:
        id: 3624d731cd6b4
    FlattenedConversationMessage:
      description: This is a flattened DAG safe version of a ConversationMessage.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        model:
          $ref: '#/components/schemas/Model'
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        sentiment:
          $ref: '#/components/schemas/ConversationMessageSentimentEnum'
        role:
          $ref: '#/components/schemas/QGPTConversationMessageRoleEnum'
        score:
          $ref: '#/components/schemas/Score'
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
      required:
      - conversation
      - created
      - id
      - role
      - updated
      title: FlattenedConversationMessage
      type: object
    ConversationMessageSentimentEnum:
      description: This will describe the sentiment of a specific message ie if the
        message was liked/disliked/reported
      enum:
      - LIKE
      - DISLIKE
      - REPORT
      title: ConversationMessageSentimentEnum
      type: string
      x-stoplight:
        id: 27cc27c23cb89
    QGPTConversationMessageRoleEnum:
      description: This is the role enum used for a QGPT conversation
      enum:
      - USER
      - SYSTEM
      - ASSISTANT
      title: QGPTConversationMessageRoleEnum
      type: string
    FlattenedAnchors:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedAnchor'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an Anchor\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedAnchors
      type: object
    ConversationTypeEnum:
      description: "This is a type of conversation, for now just COPILOT."
      enum:
      - COPILOT
      title: ConversationTypeEnum
      type: string
      x-stoplight:
        id: w4bv8os834nte
    ConversationGrounding:
      description: This is the context used for grounding the ml models with reguard
        to a conversation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        temporal:
          $ref: '#/components/schemas/TemporalRangeGrounding'
      title: ConversationGrounding
      type: object
      x-stoplight:
        id: tenq29tfv8ijo
    TemporalRangeGrounding:
      description: |-
        This is used in the QGPT flow as well as within the conversation.

        This will let us know grounding's that you want us to use within a given time range(s).

        workstreams: is used to describe workstreams context. (specific to the "workstream mapper" - name subject to change)
      properties:
        workstreams:
          $ref: '#/components/schemas/FlattenedRanges'
      title: TemporalRangeGrounding
      type: object
    FlattenedRanges:
      description: This is a DAG-Safe minimal representation of many Ranges.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedRange'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an range id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
        continuous:
          type: boolean
      required:
      - iterable
      title: FlattenedRanges
      type: object
    ReferencedRange:
      description: "This is a minimal version of a Range, with mainly an Id."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedRange'
      required:
      - id
      title: ReferencedRange
      type: object
    FlattenedRange:
      description: This is a DAG-Safe minimal representation of a Range.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        to:
          $ref: '#/components/schemas/GroupedTimestamp'
        from:
          $ref: '#/components/schemas/GroupedTimestamp'
        between:
          type: boolean
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
      required:
      - created
      - id
      - updated
      title: FlattenedRange
      type: object
    FlattenedWorkstreamSummaries:
      description: This is a DAG-Safe plural model of workstreamsummaries
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedWorkstreamSummary'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an summary\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedWorkstreamSummaries
      type: object
      x-stoplight:
        id: xxx1hpsbv6w3y
    ReferencedWorkstreamSummary:
      description: this is a referenced minimal version of a WorkstreamSummary typically
        just our uuid.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedWorkstreamSummary'
      required:
      - id
      title: ReferencedWorkstreamSummary
      type: object
      x-stoplight:
        id: im0uagzfo6ruy
    FlattenedWorkstreamSummary:
      description: This is a DAG-Safe minimal representation of a workstream summary
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        events:
          $ref: '#/components/schemas/FlattenedWorkstreamEvents'
        name:
          type: string
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        ranges:
          $ref: '#/components/schemas/FlattenedRanges'
        model:
          $ref: '#/components/schemas/Model'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        applications:
          $ref: '#/components/schemas/Applications'
      required:
      - created
      - id
      - model
      - name
      - range
      - updated
      title: FlattenedWorkstreamSummary
      type: object
      x-stoplight:
        id: y01qg0gqojy6q
    FlattenedWorkstreamEvents:
      description: This is a plural (DAG Safe) version of a WorkstreamEvents.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedWorkstreamEvent'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an activity\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedWorkstreamEvents
      type: object
      x-stoplight:
        id: buujg5xpzxgcs
    ReferencedWorkstreamEvent:
      description: This is a minimal representation of a WorkstreamEvent event.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedWorkstreamEvent'
      required:
      - id
      title: ReferencedWorkstreamEvent
      type: object
      x-stoplight:
        id: vhok5mq8teb07
    FlattenedWorkstreamEvent:
      description: This is a singular (DAG Safe) version of a WorkstreamEvent.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        application:
          $ref: '#/components/schemas/Application'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        trigger:
          $ref: '#/components/schemas/WorkstreamEventTrigger'
        context:
          $ref: '#/components/schemas/WorkstreamEventContext'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
      required:
      - application
      - created
      - id
      - trigger
      - updated
      title: FlattenedWorkstreamEvent
      type: object
      x-stoplight:
        id: g8wpws7lz5lv2
    WorkstreamEventTrigger:
      description: This is the specific event that represent the Shadow Activity ie
        the copy/paste ...xyz
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        check_in:
          description: this is a sort of check-in event(ie when ever your application
            is in the forground on there is an interaction)
          type: boolean
        copy:
          type: boolean
        paste:
          type: boolean
        file_open:
          type: boolean
        file_close:
          type: boolean
        tab_switch:
          type: boolean
        tab_close:
          type: boolean
        tab_open:
          type: boolean
        tab_enter:
          type: boolean
        tab_leave:
          type: boolean
        url_changed:
          type: boolean
        application_enter:
          type: boolean
        application_leave:
          type: boolean
        application_switch:
          type: boolean
      title: WorkstreamEventTrigger
      type: object
      x-stoplight:
        id: e1b2aa543b0eb
    WorkstreamEventContext:
      description: |-
        This is a free form data object that will enable additional data to be passed into SeededWorkstreamEvent, that corresponds to the event on the WorkstreamEvent.

        This is a WIP object.

        Need to think if we want to do something like raw:string (that is just a jsonObject) that is stringified, or if we add specific bits of data that we want. and specific fields for each event.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ide:
          $ref: '#/components/schemas/WorkstreamEventTriggerContextIDE'
        browser:
          $ref: '#/components/schemas/WorkstreamEventTriggerContextBrowser'
      title: WorkstreamEventContext
      type: object
    WorkstreamEventTriggerContextIDE:
      description: |-
        This is the given context for an IDE.

        tabs: this here refers to the tabs w/in the IDE.

        Modules here are the given repositories

        Name: this is the name of a workspace, but not required.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tabs:
          $ref: '#/components/schemas/IDETabs'
        modules:
          $ref: '#/components/schemas/ProjectModules'
        name:
          type: string
      title: WorkstreamEventTriggerContextIDE
      type: object
    IDETabs:
      description: This is a plural representation of a IDETab
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/IDETab'
          type: array
      required:
      - iterable
      title: IDETabs
      type: object
    IDETab:
      description: |-
        This is a representation of an IDE Tab

        value: is the value of the entire file(that being said we do not recomment passing this over as we can read this file on PieceOS side of things)
        classification: this is the classifcation of this file

        selection: this is a represention of a copy/paste/selection of a bit of code

        anchor: this is the file path

        range: this is the duration that this user has been on this Tab

        current: is a boolean that will let us know if this is the current active tab

        contributors: is the people that are extracted via git

        lsp: this is the languageserverprotocol this is used for may things such as error,stackstrces, mainly information extracted from the lang server
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          $ref: '#/components/schemas/TransferableString'
        classification:
          $ref: '#/components/schemas/Classification'
        selections:
          $ref: '#/components/schemas/IDESelections'
        anchor:
          $ref: '#/components/schemas/SeededAnchor'
        range:
          $ref: '#/components/schemas/AnonymousTemporalRange'
        current:
          type: boolean
        contributors:
          $ref: '#/components/schemas/DocumentContributors'
        lsp:
          $ref: '#/components/schemas/LanguageServerProtocol'
      required:
      - anchor
      title: IDETab
      type: object
    IDESelections:
      description: Plural model that represent many selections in the browser
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/IDESelection'
          type: array
      required:
      - iterable
      title: IDESelections
      type: object
    IDESelection:
      description: |-
        This is a given bit of text/code that is selected in the IDE, this can be a copy/paste/selection

        location: this is the given location provided by the LSP(might need to be a different object we will see)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        location:
          $ref: '#/components/schemas/LanguageServerProtocolLocation'
        classification:
          $ref: '#/components/schemas/Classification'
        value:
          $ref: '#/components/schemas/TransferableString'
      title: IDESelection
      type: object
    LanguageServerProtocolLocation:
      description: |-
        modeled after this (https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#location)

        uri: is jsut a file path

        range: here is the location of where this item is within the file.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        uri:
          type: string
        range:
          $ref: '#/components/schemas/LanguageServerProtocolLocationRange'
      required:
      - range
      - uri
      title: LanguageServerProtocolLocation
      type: object
    LanguageServerProtocolLocationRange:
      description: modeled after this (https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#range)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        start:
          $ref: '#/components/schemas/LanguageServerProtocolLocationRangePosition'
        end:
          $ref: '#/components/schemas/LanguageServerProtocolLocationRangePosition'
      required:
      - end
      - start
      title: LanguageServerProtocolLocationRange
      type: object
    LanguageServerProtocolLocationRangePosition:
      description: modeled after this (https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#position)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        line:
          type: integer
        character:
          type: integer
      required:
      - character
      - line
      title: LanguageServerProtocolLocationRangePosition
      type: object
    SeededAnchor:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        type:
          $ref: '#/components/schemas/AnchorTypeEnum'
        watch:
          type: boolean
        fullpath:
          type: string
        asset:
          description: You may associate a SeededAnchor with an asset
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        name:
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/SeededAnnotation'
          type: array
        conversation:
          type: string
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
      required:
      - fullpath
      - type
      title: SeededAnchor
      type: object
      x-stoplight:
        id: 7e25777edb77e
    SeededAnnotation:
      description: This is the percursor to a fully referenced Annotation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        asset:
          type: string
        person:
          type: string
        type:
          $ref: '#/components/schemas/AnnotationTypeEnum'
        text:
          description: This is the text of the annotation.
          type: string
        model:
          type: string
        pseudo:
          type: boolean
        favorited:
          type: boolean
        anchor:
          type: string
        conversation:
          type: string
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - text
      - type
      title: SeededAnnotation
      type: object
      x-stoplight:
        id: oha5ihx7zfx7b
    DocumentContributors:
      description: This is a plural representation of the DocumentContributor
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/DocumentContributor'
          type: array
      required:
      - iterable
      title: DocumentContributors
      type: object
    DocumentContributor:
      description: |-
        A DocumentContributor is a preseeded representation of a Person

        This can be used in the case of the browser, or in the IDE

        If they are apart of an IDE, we can in the future provide git information (IE add a Git object for their commits)

        person: this is most important part which is the email/name xyz
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        classification:
          $ref: '#/components/schemas/Classification'
        value:
          $ref: '#/components/schemas/TransferableString'
        person:
          $ref: '#/components/schemas/PersonBasicType'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - person
      title: DocumentContributor
      type: object
    LanguageServerProtocol:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        diagnostics:
          $ref: '#/components/schemas/LanguageServerProtocolDiagnostics'
      title: LanguageServerProtocol
      type: object
    LanguageServerProtocolDiagnostics:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/LanguageServerProtocolDiagnostic'
          type: array
      required:
      - iterable
      title: LanguageServerProtocolDiagnostics
      type: object
    LanguageServerProtocolDiagnostic:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        range:
          $ref: '#/components/schemas/LanguageServerProtocolLocationRange'
        severity:
          $ref: '#/components/schemas/LanguageServerProtocolSeverityEnum'
        code:
          $ref: '#/components/schemas/LanguageServerProtocolCode'
        codeDescription:
          $ref: '#/components/schemas/LanguageServerProtocolCodeDescription'
        source:
          type: string
        message:
          type: string
      required:
      - message
      - range
      title: LanguageServerProtocolDiagnostic
      type: object
    LanguageServerProtocolSeverityEnum:
      description: modeled of of https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticSeverity
      enum:
      - ERROR
      - WARNING
      - INFORMATION
      - HINT
      title: LanguageServerProtocolSeverityEnum
      type: string
    LanguageServerProtocolCode:
      description: "NOTE: this can me a union type here.. (integer | string;) so we\
        \ need to get a bit creative"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code_integer:
          type: integer
        code_string:
          type: string
        raw_json:
          additionalProperties:
            type: string
          description: "This is a Map<String, String>, basically just a json object\
            \ for additional data if int/string will not work"
          type: object
      title: LanguageServerProtocolCode
      type: object
    LanguageServerProtocolCodeDescription:
      description: modeled off of (https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeDescription)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        href:
          type: string
      required:
      - href
      title: LanguageServerProtocolCodeDescription
      type: object
    ProjectModules:
      description: This is a plural representation of the ProjectModule
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ProjectModule'
          type: array
      required:
      - iterable
      title: ProjectModules
      type: object
    ProjectModule:
      description: |-
        This is a representation of a Module or a Project

        anchor: is the folder path of this repo/module

        contributors: is a nice to have is all the contributors of this repo/module

        range: is the amount of time this user has been working on this repo

        classifications: if all the languages that are used within this repo/module
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        anchor:
          $ref: '#/components/schemas/SeededAnchor'
        range:
          $ref: '#/components/schemas/AnonymousTemporalRange'
        contributors:
          $ref: '#/components/schemas/DocumentContributors'
        classifications:
          $ref: '#/components/schemas/Classifications'
      required:
      - anchor
      title: ProjectModule
      type: object
    Classifications:
      description: This is a plural representation of a Classification
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Classification'
          type: array
      required:
      - iterable
      title: Classifications
      type: object
    WorkstreamEventTriggerContextBrowser:
      description: |-
        This is the given context for the browser,

        a client can pass through many of the same tab if they would like,

        note: however please try to only side 3 unique website/anchors
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tabs:
          $ref: '#/components/schemas/BrowserTabs'
      title: WorkstreamEventTriggerContextBrowser
      type: object
    BrowserTabs:
      description: This is a plural representation of the BrowserTab
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/BrowserTab'
          type: array
      required:
      - iterable
      title: BrowserTabs
      type: object
    BrowserTab:
      description: |-
        a tab can have many values because you might want to pass in a value that represents the code_blocks(snippets) or a md represenet
        note: please only pass 1 representation, I will clean on POS side tho (txt || md || html)

        anchor: can be defined in the browser if view a local file

        website: this is the given url of the tab

        range: this is the amount of time this user is current on this given tab

        current: means that this is the current tab that is open

        contributors: these are all the extracted people from this given tab
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        values:
          $ref: '#/components/schemas/BrowserTabValues'
        anchor:
          $ref: '#/components/schemas/SeededAnchor'
        website:
          $ref: '#/components/schemas/SeededWebsite'
        range:
          $ref: '#/components/schemas/AnonymousTemporalRange'
        current:
          type: boolean
        contributors:
          $ref: '#/components/schemas/DocumentContributors'
      title: BrowserTab
      type: object
    BrowserTabValues:
      description: Plural model that represent many tabs
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/BrowserTabValue'
          type: array
      required:
      - iterable
      title: BrowserTabValues
      type: object
    BrowserTabValue:
      description: |-
        snippet: these are extracted code blocks
        selection: here is a copy/paste/selection

        note: recommended that you pass in the md version of the webpage

        note: please dont pass in all three html,md,text, just pass in 1.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        html:
          $ref: '#/components/schemas/TransferableString'
        md:
          $ref: '#/components/schemas/TransferableString'
        text:
          $ref: '#/components/schemas/TransferableString'
        snippet:
          $ref: '#/components/schemas/BrowserSelection'
        selection:
          $ref: '#/components/schemas/BrowserSelection'
      title: BrowserTabValue
      type: object
    BrowserSelection:
      description: "This is a given bit of text/code that is selected in the browser,\
        \ this can be a copy/paste/selection"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        classification:
          $ref: '#/components/schemas/Classification'
        value:
          $ref: '#/components/schemas/TransferableString'
      required:
      - classification
      - value
      title: BrowserSelection
      type: object
    SeededWebsite:
      description: |-
        This is the minimum information required to create a website for a specific asset.

        you can optionally add an asset, or person id to attach this website directly to it

        TODO consider updating these asset,format to referenced Models
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          description: This is the specific asset that this website is going to get
            attached to!!
          type: string
        conversation:
          description: This is the specific conversation that this website is going
            to get attached to!!
          type: string
        url:
          description: this is the url of the website.
          type: string
        name:
          description: name of the website.(customizable and updateable as well.)
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        person:
          description: this is a uuid of a person that we are going to add the website
            too.
          type: string
      required:
      - name
      - url
      title: SeededWebsite
      type: object
    Applications:
      description: A list of all the applications
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Application'
          type: array
      required:
      - iterable
      title: Applications
      type: object
    QGPTPromptPipeline:
      description: "This is a model related to switching between different prompts\
        \ based on if we are dealing with \nvarious tasks or if we are attempting\
        \ to converse with LLMs via conversation.\n\nYou will have 2 options-\n\n\
        1) task- This is specifically for 1 off task operations for instance explaning\
        \ a bit of code\n2) conversation- This is specifically for conversing with\
        \ our LLMs, will provide better results && high fedility \n              responses\
        \ for instance contextualize code conversations."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        task:
          $ref: '#/components/schemas/QGPTTaskPipeline'
        conversation:
          $ref: '#/components/schemas/QGPTConversationPipeline'
      title: QGPTPromptPipeline
      type: object
    QGPTTaskPipeline:
      description: |-
        This model is specifically for QGPT Task pipelines, the model is used to group one off tasks for instance fix/explaining/commenting
        that dont necessarily require a conversation form factor.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code_explanation:
          $ref: '#/components/schemas/QGPTTaskPipelineForCodeExplanation'
        code_commentation:
          $ref: '#/components/schemas/QGPTTaskPipelineForCodeCommentation'
        code_fix:
          $ref: '#/components/schemas/QGPTTaskPipelineForCodeFix'
        code_modification:
          $ref: '#/components/schemas/QGPTTaskPipelineForCodeModification'
        code_completion:
          $ref: '#/components/schemas/QGPTTaskPipelineForCodeCompletion'
      title: QGPTTaskPipeline
      type: object
    QGPTTaskPipelineForCodeExplanation:
      description: |-
        This task is for explaining a bit of code.

        This is a class so that we can add optional properties in the future.

        Note: the snippet && language that needs to be explaned should be within the QGPTQuestionInput.relevant
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTTaskPipelineForCodeExplanation
      type: object
    QGPTTaskPipelineForCodeCommentation:
      description: |-
        This task is for commenting a bit of code.

        This is a class so that we can add optional properties in the future.

        Note: the snippet && language that needs to be commented should be within the QGPTQuestionInput.relevant
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTTaskPipelineForCodeCommentation
      type: object
    QGPTTaskPipelineForCodeFix:
      description: |-
        This task is for fixing a bit of code.

        This is a class so that we can add optional properties in the future.

        Note: the snippet && language that needs to be fixed should be within the QGPTQuestionInput.relevant.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        error:
          description: "This is the error message provided from the IDE, that we can\
            \ use to provide the solution."
          type: string
      title: QGPTTaskPipelineForCodeFix
      type: object
    QGPTTaskPipelineForCodeModification:
      description: |-
        This task is for modifying a bit of code, IE modify this code to do xyz.

        This is a class so that we can add optional properties in the future.

        Note: the snippet && language that needs to be modified should be within the QGPTQuestionInput.relevant
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        instruction:
          description: This is the instruction that we will use to modify this snippet.
          type: string
      title: QGPTTaskPipelineForCodeModification
      type: object
    QGPTTaskPipelineForCodeCompletion:
      description: |-
        This task is for code_completion ie auto-complete.

        This is a class so that we can add optional properties in the future.

        context: This is additional snippet context within the file that will be useful for the autocompletion.(PLEASE ONLY pass in Seed.asset.format.fragment.string.raw for the context snippet values, and for the classificaiton pass in Seed.asset.format.classification)

        Note: the snippet && language that needs to be Actually AutoCompleted should be within the QGPTQuestionInput.relevant.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        context:
          items:
            type: string
          type: array
      title: QGPTTaskPipelineForCodeCompletion
      type: object
      x-stoplight:
        id: f5f9cac4ae0e7
    QGPTConversationPipeline:
      description: |-
        This model is specifically for QGPT Conversation pipelines, the model is used to group conversational prompts for instance a conversation around generating code.

        here are some use cases-
        1. contextualized_code_generation- This is for users that want to have conversations around generating code, when there is provided context.
        2. generalized_code- This is for users that want to have conversations without context around code.
        3. contextualized_code- This is for users that want to have conversation around code with Context.
        4. contextualized_code_workstream: this is for the users that want to use context as well as WPE information in their chat (we wiil prioritize WPE infomration, but also support other info as well)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        contextualized_code_generation:
          $ref: '#/components/schemas/QGPTConversationPipelineForContextualizedCodeGeneration'
        generalized_code_dialog:
          $ref: '#/components/schemas/QGPTConversationPipelineForGeneralizedCodeDialog'
        contextualized_code_dialog:
          $ref: '#/components/schemas/QGPTConversationPipelineForContextualizedCodeDialog'
        contextualized_code_workstream_dialog:
          $ref: '#/components/schemas/QGPTConversationPipelineForContextualizedCodeWorkstreamDialog'
      title: QGPTConversationPipeline
      type: object
    QGPTConversationPipelineForContextualizedCodeGeneration:
      description: |-
        This type of conversation is reccomended to be provided when a user want generate code w/ context provided.

        This is a class so that we can add optional properties in the future.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTConversationPipelineForContextualizedCodeGeneration
      type: object
    QGPTConversationPipelineForGeneralizedCodeDialog:
      description: |-
        This is for the users that wants to have generalized code conversations without any context.

        This is a class so that we can add optional properties in the future.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTConversationPipelineForGeneralizedCodeDialog
      type: object
    QGPTConversationPipelineForContextualizedCodeDialog:
      description: |-
        This is for the users that wants to have contextualized code conversations, meaning conversations around code with Context provided.

        This is a class so that we can add optional properties in the future.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTConversationPipelineForContextualizedCodeDialog
      type: object
    QGPTConversationPipelineForContextualizedCodeWorkstreamDialog:
      description: |-
        This is for the users that wants to have contextualized code conversations around their workstream materials, meaning conversations around code with Context provided,
        as well as workstream information ie information gathered from the WPE.

        This is a class so that we can add optional properties in the future.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: QGPTConversationPipelineForContextualizedCodeWorkstreamDialog
      type: object
    FlattenedSensitives:
      description: This is a flattened representation of multiple sensitive pieces
        of data.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedSensitive'
          type: array
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedSensitives
      type: object
    ReferencedSensitive:
      description: A reference to a sensitive which at minimum must have the Sensitive
        id. But in the case of a hydrated client API it may have a populated reference
        of type Sensitive.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedSensitive'
      required:
      - id
      title: ReferencedSensitive
      type: object
    FlattenedSensitive:
      description: This is a dereferenced representation of a sensitive pieces of
        data.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        text:
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/SensitiveCategoryEnum'
        severity:
          $ref: '#/components/schemas/SensitiveSeverityEnum'
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/SensitiveMetadata'
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        score:
          $ref: '#/components/schemas/Score'
      required:
      - asset
      - category
      - created
      - description
      - id
      - mechanism
      - name
      - severity
      - text
      - updated
      title: FlattenedSensitive
      type: object
    SensitiveCategoryEnum:
      description: This is the enum that is use to describe the category of our Sensitive
        Model.
      enum:
      - SECRET
      - API_KEY
      - CLIENT_ID
      - CLIENT_SECRET
      - SECRET_KEY
      - API_TOKEN
      - ACCESS_KEY
      - ACCESS_TOKEN
      - URL
      - PUBLIC_KEY
      - PRIVATE_KEY
      - API_ID
      - WEB_HOOK_URL
      title: SensitiveCategoryEnum
      type: string
    SensitiveSeverityEnum:
      description: "This is the enum used to describe the severity of our sensitive\
        \ model. ie low, moderate, high"
      enum:
      - LOW
      - MODERATE
      - HIGH
      title: SensitiveSeverityEnum
      type: string
    SensitiveMetadata:
      description: This is optional metatdata attached to a sensitive piece of data.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        match:
          $ref: '#/components/schemas/TextMatch'
        entropy:
          description: entropy of the sensitive
          type: number
      title: SensitiveMetadata
      type: object
    TextMatch:
      description: |-
        Thext Match currently used for sensitive for scales for people, and anything related to text matching.

        group: is the entire match
        subgroup is the inner match within the group.(optional)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        group:
          $ref: '#/components/schemas/TextLocation'
        subgroup:
          $ref: '#/components/schemas/TextLocation'
      required:
      - group
      title: TextMatch
      type: object
    TextLocation:
      description: This is a generic model that is used for text location.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          description: this is the value that was found.
          type: string
        start:
          description: this is the start index within the original string.
          type: integer
        end:
          description: this is the end index within the original string.
          type: integer
      required:
      - end
      - start
      - text
      title: TextLocation
      type: object
    FlattenedHints:
      description: This is the flattened Version of plural hints.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedHint'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an hint id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: FlattenedHints
      type: object
      x-stoplight:
        id: dyq0bxmzbqrt0
    ReferencedHint:
      description: "This is the referenced version of a hint, main used for the uuid."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedHint'
      required:
      - id
      title: ReferencedHint
      type: object
      x-stoplight:
        id: 7cuuylmqgdczr
    FlattenedHint:
      description: This is the flattened version of a hint. Ensure that you DO NOT
        reference the Asset here as you can create an infinite loop within the packaging.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        type:
          $ref: '#/components/schemas/HintTypeEnum'
        text:
          description: This is the text of the hint.
          type: string
        model:
          $ref: '#/components/schemas/ReferencedModel'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - created
      - id
      - text
      - type
      - updated
      title: FlattenedHint
      type: object
    HintTypeEnum:
      description: This is the hint enum used to describe a type of hint.
      enum:
      - SUGGESTED_QUERY
      - QGPT_HINT
      - UNKNOWN
      title: HintTypeEnum
      type: string
      x-stoplight:
        id: w0w3hcnkp097y
    TrackedFormatEventMetadata:
      properties:
        reclassification:
          $ref: '#/components/schemas/TrackedAssetEventFormatReclassificationMetadata'
      title: TrackedFormatEventMetadata
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: peob5yrnp80t5
    TrackedAssetEventFormatReclassificationMetadata:
      description: Metadata of a format reclassification event
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        previous:
          $ref: '#/components/schemas/Classification'
        current:
          $ref: '#/components/schemas/Classification'
      title: TrackedAssetEventFormatReclassificationMetadata
      type: object
      x-pieces-internal: true
    SeededTrackedAssetEvent:
      description: "This seeded tracked asset event will be recieved by a context\
        \ on the OS Server side, which will then be able to look up the asset id and\
        \ structure the asset for shipment to Segment aka a fully built TrackedAssetEvent"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        identifier_description_pair:
          $ref: '#/components/schemas/TrackedAssetEventIdentifierDescriptionPairs'
        metadata:
          $ref: '#/components/schemas/TrackedAssetEventMetadata'
      required:
      - asset
      - identifier_description_pair
      title: SeededTrackedAssetEvent
      type: object
      x-pieces-internal: true
    TrackedAssetEventIdentifierDescriptionPairs:
      description: These are all of the available event types that are permitted in
        an object pair notation.
      maxProperties: 1
      minProperties: 1
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset_created:
          description: The key value pair for an asset being created.
          enum:
          - an_asset_was_created
          type: string
        asset_viewed:
          description: An asset was viewed
          enum:
          - an_asset_was_viewed
          type: string
        asset_format_copied:
          description: An asset's format was copied
          enum:
          - an_asset_preview_format_was_copied
          type: string
        asset_format_downloaded:
          description: An asset's format was downloaded
          enum:
          - an_asset_format_was_downloaded
          type: string
        asset_deleted:
          description: An asset was deleted or not
          enum:
          - an_asset_was_deleted
          type: string
        asset_description_updated:
          description: An asset was redescribed by the user
          enum:
          - an_asset_was_redescribed_by_the_user
          type: string
        asset_name_updated:
          description: An asset was renamed by the user
          enum:
          - an_asset_was_renamed_by_the_user
          type: string
        asset_format_generic_classification_updated:
          description: A generic classification was changed on a format within an
            asset
          enum:
          - a_generic_classification_was_changed_on_a_format_within_an_asset
          type: string
        asset_format_specific_classification_updated:
          description: A specific classification was changed on a format within an
            asset
          enum:
          - a_specific_classification_was_changed_on_a_format_within_an_asset
          type: string
        asset_creation_failed:
          enum:
          - an_asset_failed_to_be_created
          type: string
        asset_tag_added:
          enum:
          - a_tag_was_added_by_the_user
          type: string
        asset_link_added:
          enum:
          - a_link_was_added_by_the_user
          type: string
        asset_link_generated:
          description: user generated a link for the asset
          enum:
          - an_asset_link_was_generated
          type: string
        asset_link_deleted:
          enum:
          - a_link_was_deleted_by_the_user
          type: string
        asset_tag_deleted:
          enum:
          - a_tag_was_deleted_by_the_user
          type: string
        asset_updated:
          description: This is just a generic string for an asset was updated.
          enum:
          - an_asset_was_updated
          type: string
        asset_format_value_edited:
          description: This is a side effect event for a format value getting edited
            that exists on an asset.
          enum:
          - a_specific_format_value_was_edited_on_an_asset
          type: string
        asset_format_updated:
          description: This is a generic activity event for an asset getting updated
            because our format was updated for some reason.
          enum:
          - a_specific_format_was_updated_on_an_asset
          type: string
        asset_link_revoked:
          description: This means that a shareable link was revoked.
          enum:
          - an_asset_link_was_revoked
          type: string
        asset_person_added:
          description: This just means that a person was added via the user.
          enum:
          - a_person_was_added_by_the_user
          type: string
        asset_person_deleted:
          description: This just means that a person was deleted via the user.
          enum:
          - a_person_was_deleted_by_the_user
          type: string
        asset_sensitive_added:
          description: This just means that a sensitive was added via the user.
          enum:
          - a_sensitive_was_added_by_the_user
          type: string
        asset_sensitive_deleted:
          description: This just means that a sensitive was deleted via the user.
          enum:
          - a_sensitive_was_deleted_by_the_user
          type: string
        suggested_asset_referenced:
          description: This means that an asset was view/used while the user was looking
            at the suggestion view.
          enum:
          - a_suggested_asset_was_referenced_by_the_user
          type: string
        searched_asset_referenced:
          description: This means that an asset was view/used while the user was looking
            at the searching view.
          enum:
          - a_searched_asset_was_referenced_by_the_user
          type: string
        asset_referenced:
          description: This means that an asset was view/used while the user was looking
            at the default view.
          enum:
          - an_asset_was_referenced_by_the_user
          type: string
        activity_asset_referenced:
          description: This means that a user referenced an asset by first clicking
            on an asset within an activity event.(ie from the activity view)
          enum:
          - an_activity_asset_was_referenced_by_the_user
          type: string
        asset_annotation_added:
          enum:
          - an_annotation_was_added_by_the_user
          type: string
        asset_annotation_deleted:
          enum:
          - an_annotation_was_deleted_by_the_user
          type: string
        asset_annotation_updated:
          enum:
          - an_annotation_was_updated_by_the_user
          type: string
        asset_hint_added:
          enum:
          - a_hint_was_added_by_the_user
          type: string
        asset_hint_deleted:
          enum:
          - a_hint_was_deleted_by_the_user
          type: string
        asset_hint_updated:
          enum:
          - a_hint_was_updated_by_the_user
          type: string
        asset_anchor_added:
          enum:
          - a_anchor_was_added_by_the_user
          type: string
        asset_anchor_deleted:
          enum:
          - a_anchor_was_deleted_by_the_user
          type: string
        asset_anchor_updated:
          enum:
          - a_anchor_was_updated_by_the_user
          type: string
      title: TrackedAssetEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    TrackedAssetEventMetadata:
      properties:
        reclassification:
          $ref: '#/components/schemas/TrackedAssetEventFormatReclassificationMetadata'
        creation:
          $ref: '#/components/schemas/TrackedAssetEventCreationMetadata'
        rename:
          $ref: '#/components/schemas/TrackedAssetEventRenameMetadata'
        tag:
          $ref: '#/components/schemas/ReferencedTag'
        website:
          $ref: '#/components/schemas/ReferencedWebsite'
        person:
          $ref: '#/components/schemas/ReferencedPerson'
        sensitive:
          $ref: '#/components/schemas/ReferencedSensitive'
        share:
          $ref: '#/components/schemas/ReferencedShare'
        search:
          $ref: '#/components/schemas/TrackedAssetsEventSearchMetadata'
        annotation:
          $ref: '#/components/schemas/ReferencedAnnotation'
        hint:
          $ref: '#/components/schemas/ReferencedHint'
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
      title: TrackedAssetEventMetadata
      type: object
      x-pieces-internal: true
    TrackedAssetEventCreationMetadata:
      description: Metadata attached to a creation event on an Asset
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        clipboard:
          $ref: '#/components/schemas/TrackedAssetEventCreationMetadataClipboard'
        file:
          $ref: '#/components/schemas/TrackedAssetEventCreationMetadataFile'
      title: TrackedAssetEventCreationMetadata
      type: object
      x-pieces-internal: true
    TrackedAssetEventCreationMetadataClipboard:
      description: If an asset was created from a clipboard event
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        keyboard:
          description: Whether the clipboard was utilized via the keyboard
          type: boolean
        interaction:
          description: Whether the clipboard was extracted through a button click
          type: boolean
      title: TrackedAssetEventCreationMetadataClipboard
      type: object
      x-pieces-internal: true
    TrackedAssetEventCreationMetadataFile:
      description: If an asset was created from a file attachment
      properties:
        keyboard:
          description: Whether the file was pasted via the keyboard
          type: boolean
        drag_and_drop:
          description: Whether the file was dropped onto pieces
          type: boolean
        interaction:
          description: Whether the file was attached via a button click
          type: boolean
      title: TrackedAssetEventCreationMetadataFile
      type: object
      x-pieces-internal: true
    TrackedAssetEventRenameMetadata:
      description: This will give specific metadata need to determine what the rename
        was to/from.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        previous:
          type: string
        current:
          type: string
      required:
      - current
      - previous
      title: TrackedAssetEventRenameMetadata
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: v3z5jl0d9ldv8
    ReferencedShare:
      description: "This is a [DAG SAFE] version of a share. with just a required\
        \ share ID."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedShare'
      required:
      - id
      title: ReferencedShare
      type: object
      x-stoplight:
        id: 51p1im2gucgvm
    TrackedAssetsEventSearchMetadata:
      description: Metadata attached to a search event on an Asset
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          description: The search query itself
          type: string
        results:
          $ref: '#/components/schemas/TrackedAssetsEventSearchMetadataResults'
      title: TrackedAssetsEventSearchMetadata
      type: object
      x-pieces-internal: true
    TrackedAssetsEventSearchMetadataResults:
      description: Numbers related to search results
      properties:
        fuzzy:
          description: Total number of fuzzy results
          type: number
        exact:
          description: Total number of exact results
          type: number
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        space:
          $ref: '#/components/schemas/Space'
      title: TrackedAssetsEventSearchMetadataResults
      type: object
      x-pieces-internal: true
    Space:
      description: This is used in the TrackedAssetsEventSearchMetadata
      properties:
        size:
          description: This is the size of your current catalog.(number of assets)
          type: integer
        duration:
          description: this is the number in ms it took to run search.
          type: integer
      title: Space
      type: object
    SeededTrackedInteractionEvent:
      description: |
        This is a model that will hold relavent information in relation to an interaction(ONLY CLICK/TAP) analytics event(usage). If you want to register an event that relates to an interaction with the key then register a Keyboard Event.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        description:
          description: These need structure
          type: string
        element:
          type: string
        identifier_description_pair:
          $ref: '#/components/schemas/SeededTrackedInteractionEventIdentifierDescriptionPairs'
      required:
      - description
      title: SeededTrackedInteractionEvent
      type: object
      x-pieces-internal: true
    SeededTrackedInteractionEventIdentifierDescriptionPairs:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets_list_refreshed:
          enum:
          - the_assets_list_was_refreshed_through_ui_element
          type: string
      title: SeededTrackedInteractionEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    SeededTrackedKeyboardEvent:
      description: This is a model that will hold relavent information in relation
        to a keyboard(including shortcuts) analytics event (usage).
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        description:
          description: This also needs structure such as key vals or enums
          type: string
        shortcut:
          items:
            type: integer
          type: array
        identifier_description_pair:
          $ref: '#/components/schemas/SeededTrackedKeyboardEventIdentifierDescriptionPairs'
      required:
      - description
      - shortcut
      title: SeededTrackedKeyboardEvent
      type: object
      x-pieces-internal: true
    SeededTrackedKeyboardEventIdentifierDescriptionPairs:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets_list_refreshed:
          enum:
          - the_assets_list_was_refreshed_through_a_keyboard_shortcut
          type: string
      title: SeededTrackedKeyboardEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    SeededTrackedSessionEvent:
      description: A simple model to capture a Tracked Session to be send to the Connection
        API
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifier_description_pair:
          $ref: '#/components/schemas/TrackedSessionEventIdentifierDescriptionPairs'
      required:
      - identifier_description_pair
      title: SeededTrackedSessionEvent
      type: object
      x-pieces-internal: true
    TrackedSessionEventIdentifierDescriptionPairs:
      description: These are all of the available event types that are permitted in
        an object pair notation.
      maxProperties: 1
      minProperties: 1
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        session_initialized:
          description: The key value pair for an application being opened.
          enum:
          - a_session_has_been_initialized_and_the_application_has_been_opened
          type: string
        session_local_connection_succeeded:
          description: There was a successful connection locally
          enum:
          - one_or_more_applications_has_successfully_connected
          type: string
        session_local_connection_failed:
          description: There was a failed connection locally
          enum:
          - one_or_more_applications_has_failed_to_connect_locally
          type: string
        session_inactive:
          description: "If the current application is in the background or not, could\
            \ also be minimized."
          enum:
          - a_session_is_inactive_because_the_application_is_not_in_the_foreground
          type: string
        session_active:
          description: If the application has been brought to the forground.
          enum:
          - a_session_is_active_because_the_application_is_in_the_foreground
          type: string
        session_terminated:
          description: "If the user has closed the application, thus ending the session."
          enum:
          - a_session_has_been_ended_and_the_application_has_been_closed
          type: string
        session_authenticated_with_sign_in:
          description: A user has signed into this session with a an external account
          enum:
          - a_user_has_signed_into_this_session_with_a_an_external_account
          type: string
        session_unauthenticated_with_sign_out:
          description: A user has signed out of this session
          enum:
          - a_user_has_signed_out_of_this_session
          type: string
        session_unauthenticated_with_dismiss:
          description: A user did not sign into the session with a dismissal
          enum:
          - a_user_did_not_sign_into_the_session_with_a_dismissal
          type: string
        session_unauthenticated_with_remind:
          description: A user did not sign into the session with a reminder
          enum:
          - a_user_did_not_sign_into_the_session_with_a_reminder
          type: string
        session_onboarding_initialized:
          description: Onboarding has been initialized for this session
          enum:
          - onboarding_has_been_initialized_for_this_session
          type: string
        session_onboarding_completed:
          description: Onboarding has been completed for this session
          enum:
          - onboarding_has_been_completed_for_this_session
          type: string
      title: TrackedSessionEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    SeededTrackedAssetsEvent:
      description: 'An seeded event model that can occur at the assets level i.e.
        search '
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifier_description_pair:
          $ref: '#/components/schemas/TrackedAssetsEventIdentifierDescriptionPairs'
        metadata:
          $ref: '#/components/schemas/SeededTrackedAssetsEvent_metadata'
      title: SeededTrackedAssetsEvent
      type: object
      x-pieces-internal: true
    TrackedAssetsEventIdentifierDescriptionPairs:
      description: These are all of the available event types that are permitted in
        an object pair notation.
      maxProperties: 1
      minProperties: 1
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets_searched:
          description: A If the assets were searched
          enum:
          - assets_were_searched
          type: string
      title: TrackedAssetsEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    SeededTrackedMachineLearningEvent:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tlp:
          $ref: '#/components/schemas/TLPMachineLearningProcessingEvent'
        graphical:
          $ref: '#/components/schemas/GraphicalMachineLearningProcessingEvent'
      title: SeededTrackedMachineLearningEvent
      type: object
      x-pieces-internal: true
    TLPMachineLearningProcessingEvent:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code:
          $ref: '#/components/schemas/TLPCodeProcessing'
      title: TLPMachineLearningProcessingEvent
      type: object
      x-pieces-internal: true
    TLPCodeProcessing:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        fragment:
          $ref: '#/components/schemas/TLPCodeSnippetAnalytics'
        file:
          $ref: '#/components/schemas/TLPCodeFileAnalytics'
        directory:
          $ref: '#/components/schemas/TLPCodeDirectoryAnalytics'
        repository:
          $ref: '#/components/schemas/TLPCodeRepositoryAnalytics'
      title: TLPCodeProcessing
      type: object
      x-pieces-internal: true
    TLPCodeSnippetAnalytics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        statistics:
          $ref: '#/components/schemas/TLPCodeFragmentStatistics'
        classification:
          $ref: '#/components/schemas/TLPCodeFragmentClassification'
        reclassification:
          $ref: '#/components/schemas/TLPCodeFragmentReclassification'
        suggested:
          $ref: '#/components/schemas/TLPCodeSnippetSuggestedInteractions'
        tagify:
          $ref: '#/components/schemas/TLPCodeFragmentTagify'
        description:
          $ref: '#/components/schemas/TLPCodeFragmentDescription'
      title: TLPCodeSnippetAnalytics
      type: object
      x-pieces-internal: true
    TLPCodeFragmentStatistics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        descriptive:
          $ref: '#/components/schemas/TLPCodeFragmentDescriptiveStatistics'
      title: TLPCodeFragmentStatistics
      type: object
    TLPCodeFragmentDescriptiveStatistics:
      description: Model for ML big query Data collection.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          type: string
        os:
          type: string
        language:
          type: string
        length:
          type: number
        ast:
          type: string
        timestamp:
          type: string
        asset:
          type: string
        context:
          description: this is the application in which this was created from.
          type: string
        snippet:
          description: this is the value of the snippet
          type: string
        probability:
          type: string
      required:
      - asset
      - ast
      - context
      - language
      - length
      - os
      - probability
      - snippet
      - timestamp
      - user
      title: TLPCodeFragmentDescriptiveStatistics
      type: object
    TLPCodeFragmentClassification:
      description: Model for ML big query classification.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        model:
          type: string
        created:
          type: string
        classification:
          type: string
        probability:
          type: number
        context:
          type: string
        distribution:
          type: string
        metadata:
          $ref: '#/components/schemas/TLPCodeFragmentClassificationMetadata'
        user:
          description: identifier for the user
          type: string
        latency:
          description: this is the time it takes to run this model.
          type: number
        system:
          $ref: '#/components/schemas/SystemExecutionInformation'
        os:
          type: string
      required:
      - asset
      - classification
      - context
      - created
      - model
      - os
      - probability
      - user
      title: TLPCodeFragmentClassification
      type: object
    TLPCodeFragmentClassificationMetadata:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        context:
          $ref: '#/components/schemas/Classification'
        prior:
          $ref: '#/components/schemas/Classification'
      title: TLPCodeFragmentClassificationMetadata
      type: object
    SystemExecutionInformation:
      description: This is system information that we are able to get from the users
        machine(rust package TBD). TODO potentially pull this out of TLP.
      properties:
        memory:
          type: integer
        os:
          type: string
        kernel:
          type: string
        cpu:
          $ref: '#/components/schemas/SystemExecutionCpuInformation'
      required:
      - cpu
      - kernel
      - memory
      - os
      title: SystemExecutionInformation
      type: object
    SystemExecutionCpuInformation:
      properties:
        count:
          description: this is the number of cpus
          type: integer
        brand:
          description: this is the brand of cpu
          type: string
        frequency:
          type: integer
      required:
      - brand
      - count
      - frequency
      title: SystemExecutionCpuInformation
      type: object
    TLPCodeFragmentReclassification:
      description: Model for ML big query Reclassification.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        model:
          type: string
        created:
          type: string
        updates:
          $ref: '#/components/schemas/TLPCodeFragmentReclassificationUpdates'
        user:
          description: this is the user that is reclassifying
          type: string
        context:
          description: this is the application is which this is from.
          type: string
        os:
          type: string
      required:
      - asset
      - context
      - created
      - model
      - os
      - updates
      - user
      title: TLPCodeFragmentReclassification
      type: object
    TLPCodeFragmentReclassificationUpdates:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        previous:
          $ref: '#/components/schemas/Classification'
        current:
          $ref: '#/components/schemas/Classification'
      required:
      - current
      - previous
      title: TLPCodeFragmentReclassificationUpdates
      type: object
    TLPCodeSnippetSuggestedInteractions:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        save:
          $ref: '#/components/schemas/TLPCodeFragmentSuggestedSave'
        reuse:
          $ref: '#/components/schemas/TLPCodeFragmentSuggestedReuse'
      title: TLPCodeSnippetSuggestedInteractions
      type: object
    TLPCodeFragmentSuggestedSave:
      description: Model for monitoring and evaluating the suggested save feature
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        user:
          type: string
        model:
          type: string
        created:
          type: string
        os:
          type: string
        context:
          description: context from where suggestion came from
          type: string
        score:
          description: maximum similarity score
          type: number
        candidates:
          description: number of candidates
          type: integer
      required:
      - asset
      - created
      - model
      - os
      - user
      title: TLPCodeFragmentSuggestedSave
      type: object
    TLPCodeFragmentSuggestedReuse:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      title: TLPCodeFragmentSuggestedReuse
      type: object
    TLPCodeFragmentTagify:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code:
          $ref: '#/components/schemas/TLPCodeSnippetTagifyCode'
      title: TLPCodeFragmentTagify
      type: object
    TLPCodeSnippetTagifyCode:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        distribution:
          description: stringified array of numbers
          type: string
        inferred_distribution:
          description: stringified array of numbers
          type: string
        tags:
          description: stringified array of strings
          type: string
        inferred_tags:
          description: stringified array of strings
          type: string
        model:
          description: |
            this is the model version
          type: string
        label_version:
          description: This is the version of the file that we are using that contains
            all the possible tags
          type: string
        threshold:
          description: this is the minimum score from the model that a tag needs to
            have to be included in the tags array.
          type: number
        inferred_threshold:
          description: this is the minimum score from the postprocessing that a tag
            needs to have to be included in the inferred_tags array.
          type: number
        context:
          description: "this is the origin in which this asset was created, application(string\
            \ representation)"
          type: string
        asset:
          description: This is the asset id.
          type: string
        os:
          type: string
      required:
      - asset
      - context
      - distribution
      - inferred_distribution
      - inferred_tags
      - inferred_threshold
      - label_version
      - model
      - os
      - tags
      - threshold
      title: TLPCodeSnippetTagifyCode
      type: object
    TLPCodeFragmentDescription:
      description: Model for ML big query Code Description.
      properties:
        description:
          description: This is the stringified json of a TLPDescription object
          type: string
        asset:
          description: This is the asset id.
          type: string
        created:
          description: timestamp of creation
          type: string
        model:
          description: this is the model version
          type: string
        latency:
          description: the time it takes to run this model.
          type: number
        user:
          description: the uuid of the user the description was created for.
          type: string
        context:
          description: the application this description was created from.
          type: string
        os:
          description: This is the UUID of the OS that this context is currently connected
            to.
          type: string
      required:
      - asset
      - created
      - model
      - user
      title: TLPCodeFragmentDescription
      type: object
      x-stoplight:
        id: 2vtypyagv37f0
    TLPCodeFileAnalytics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      title: TLPCodeFileAnalytics
      type: object
      x-pieces-internal: true
    TLPCodeDirectoryAnalytics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      title: TLPCodeDirectoryAnalytics
      type: object
      x-pieces-internal: true
    TLPCodeRepositoryAnalytics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      title: TLPCodeRepositoryAnalytics
      type: object
      x-pieces-internal: true
    GraphicalMachineLearningProcessingEvent:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ocr:
          $ref: '#/components/schemas/GraphicalOCRProcessing'
        image:
          $ref: '#/components/schemas/GraphicalImageProcessing'
        svg:
          $ref: '#/components/schemas/GraphicalSVGStatistics'
      title: GraphicalMachineLearningProcessingEvent
      type: object
    GraphicalOCRProcessing:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        statistics:
          $ref: '#/components/schemas/GraphicalOCRStatistics'
      title: GraphicalOCRProcessing
      type: object
    GraphicalOCRStatistics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        descriptive:
          $ref: '#/components/schemas/GraphicalOCRDescriptiveStatistics'
      title: GraphicalOCRStatistics
      type: object
    GraphicalOCRDescriptiveStatistics:
      description: Model for monitoring and evaluating the OCR feature
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        user:
          type: string
        model:
          type: string
        created:
          type: string
        os:
          type: string
        confidence:
          $ref: '#/components/schemas/GraphicalOCRDescriptiveStatistics_confidence'
        duration:
          type: string
      required:
      - asset
      - confidence
      - created
      - duration
      - model
      - os
      - user
      title: GraphicalOCRDescriptiveStatistics
      type: object
    GraphicalImageProcessing:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        statistics:
          $ref: '#/components/schemas/GraphicalImageStatistics'
      title: GraphicalImageProcessing
      type: object
    GraphicalImageStatistics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        descriptive:
          $ref: '#/components/schemas/GraphicalImageDescriptiveStatistics'
      title: GraphicalImageStatistics
      type: object
    GraphicalImageDescriptiveStatistics:
      description: Model for collecting descriptive statistics of images uploaded
        to Pieces
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        width:
          type: string
        height:
          type: string
        channels:
          type: string
        asset:
          type: string
        user:
          type: string
        created:
          type: string
        os:
          type: string
      required:
      - asset
      - channels
      - created
      - height
      - os
      - width
      title: GraphicalImageDescriptiveStatistics
      type: object
    GraphicalSVGStatistics:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
      title: GraphicalSVGStatistics
      type: object
    SeededTrackedAdoptionEvent:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifier_description_pair:
          $ref: '#/components/schemas/AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs'
      title: SeededTrackedAdoptionEvent
      type: object
      x-pieces-internal: true
    AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        adoption_install:
          enum:
          - the_user_has_installed_a_pieces_application
          type: string
        adoption_uninstall:
          enum:
          - the_user_has_uninstalled_a_pieces_application
          type: string
      title: AnalyticsTrackedAdoptionEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
    SeededTrackedConversationEvent:
      description: This is a pre-created(seed) TrackedConversationEvent
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifier_description_pair:
          $ref: '#/components/schemas/TrackedConversationEventIdentifierDescriptionPairs'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        metadata:
          $ref: '#/components/schemas/TrackedConversationEventMetadata'
      required:
      - conversation
      - identifier_description_pair
      title: SeededTrackedConversationEvent
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: 4xic55t9s90yq
    TrackedConversationEventIdentifierDescriptionPairs:
      description: These are all of the available event types that are permitted in
        an object pair notation.
      maxProperties: 1
      minProperties: 1
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        conversation_created:
          description: The key value pair for an conversation being created.
          enum:
          - a_conversation_was_created
          type: string
        conversation_referenced:
          description: This means that an conversation was view/used while the user
            was looking at the default view.
          enum:
          - a_conversation_was_referenced_by_the_user
          type: string
        conversation_deleted:
          description: A conversation was deleted
          enum:
          - a_conversation_was_deleted
          type: string
        conversation_summary_annotation_generated_by_the_user:
          description: A conversation summary was generated by the user
          enum:
          - a_conversation_summary_annotation_was_generated_by_the_user
          type: string
        conversation_name_updated_by_the_system:
          description: A conversation was renamed by the system
          enum:
          - a_conversation_was_renamed_by_the_system
          type: string
        conversation_name_updated_by_the_user:
          description: A conversation was renamed by the user
          enum:
          - a_conversation_was_renamed_by_the_user
          type: string
        conversation_summary_annotation_generated_by_the_system:
          description: A conversation summary was generated
          enum:
          - a_conversation_summary_annotation_was_generated_by_the_system
          type: string
      title: TrackedConversationEventIdentifierDescriptionPairs
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: lokkkz3sebl63
    TrackedConversationEventMetadata:
      description: This is the metadata for the the ConversationEvent
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        rename:
          $ref: '#/components/schemas/TrackedConversationEventRenameMetadata'
      title: TrackedConversationEventMetadata
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: okowuox1pwiec
    TrackedConversationEventRenameMetadata:
      description: This will give specific metadata need to determine what the rename
        was to/from.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        previous:
          type: string
        current:
          type: string
      required:
      - current
      - previous
      title: TrackedConversationEventRenameMetadata
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: 27dztgbad313x
    ReferencedUser:
      description: 'A object to reference a user''s ID and optionally a FlattenedUserProfile
        Instance '
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedUserProfile'
      required:
      - id
      title: ReferencedUser
      type: object
    Activity:
      description: |
        consider a rename to Event? That being said if we go with event we need to think about a word to pre/post fix event because it is likely to be a reserved word.

        additional documentation: https://www.notion.so/getpieces/Activity-4da8de193733441f85f87b510235fb74


        Notes:
        - user/asset/format are all optional, NOT required that one of these are present.
        - if mechanism == internal we will not display to the user.

        Thoughts around additional properties.
        - hmm dismissed array here, that is an array of strings, where the string is the userId that dismissed this notification? or we could potentially do it based on the os_ID.
        -
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        event:
          $ref: '#/components/schemas/SeededConnectorTracking'
        application:
          $ref: '#/components/schemas/Application'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        asset:
          $ref: '#/components/schemas/FlattenedAsset'
        user:
          $ref: '#/components/schemas/FlattenedUserProfile'
        format:
          $ref: '#/components/schemas/FlattenedFormat'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        rank:
          description: "This is the numeric value assigned for this activity event.\
            \ This number is based off the the type of activity event calcaulated\
            \ on the server side.DO NOT MODIFY. To see what the value qualilates to,\
            \ please refer to the function within the common sdk. The number here\
            \ is based on the fib series. from 0 -> infinity but rn there arnt any\
            \ value over 8."
          type: integer
      required:
      - application
      - created
      - event
      - id
      - mechanism
      - updated
      title: Activity
      type: object
      x-stoplight:
        id: q4bbj6s5siojj
    Activities:
      description: This is the plural of activity
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Activity'
          type: array
      required:
      - iterable
      title: Activities
      type: object
      x-stoplight:
        id: eekinsh4u4p4o
    Allocations:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/AllocationCloud'
          type: array
      required:
      - iterable
      title: Allocations
      type: object
    Analyses:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Analysis'
          type: array
      required:
      - iterable
      title: Analyses
      type: object
    Analysis:
      description: |-
        This the the MlAnalysis Object, that will go on a format.

        this will hold all the different analysis models!

        ** keep format just a uuid for now **
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code:
          $ref: '#/components/schemas/CodeAnalysis'
        id:
          type: string
        format:
          description: this is a reference to the format that it belongs too.
          type: string
        image:
          $ref: '#/components/schemas/ImageAnalysis'
      required:
      - format
      - id
      title: Analysis
      type: object
    ImageAnalysis:
      description: This is a model that represents all the information collected during
        the processing of an image.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: this is a uuid that represents a imageAnalysis.
          type: string
        analysis:
          description: this is a reference to the analysis.
          type: string
        ocr:
          $ref: '#/components/schemas/OCRAnalysis'
      required:
      - analysis
      - id
      title: ImageAnalysis
      type: object
    OCRAnalysis:
      description: This is the data collected during the ocr analysis of an image.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        raw:
          $ref: '#/components/schemas/Format'
        hocr:
          $ref: '#/components/schemas/Format'
        image:
          description: this is a reference the the imageAnalysis.
          type: string
        model:
          $ref: '#/components/schemas/Model'
      required:
      - hocr
      - id
      - image
      - model
      - raw
      title: OCRAnalysis
      type: object
    Format:
      description: |-
        A representation of Data for a particular Form Factor of an Asset.

        Below asset HAS to be Flattened because it is a leaf node and must prevent cycles agressively.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          example: 102ff265-fdfb-4142-8d94-4932d400199c
          type: string
        creator:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: string
        classification:
          $ref: '#/components/schemas/Classification'
        icon:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        application:
          $ref: '#/components/schemas/Application'
        asset:
          $ref: '#/components/schemas/FlattenedAsset'
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        synced:
          $ref: '#/components/schemas/GroupedTimestamp'
        cloud:
          description: This is a path used to determine what path this format lives
            at within the cloud.
          type: string
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
        file:
          $ref: '#/components/schemas/FileFormat'
        analysis:
          $ref: '#/components/schemas/Analysis'
        relationship:
          $ref: '#/components/schemas/Relationship'
        activities:
          $ref: '#/components/schemas/Activities'
      required:
      - application
      - asset
      - bytes
      - classification
      - created
      - creator
      - id
      - role
      - updated
      title: Format
      type: object
    Anchor:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/AnchorTypeEnum'
        watch:
          type: boolean
        points:
          $ref: '#/components/schemas/FlattenedAnchorPoints'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - points
      - text
      - type
      - updated
      title: Anchor
      type: object
      x-stoplight:
        id: 7041aeacf0dbc
    SeededScoreIncrement:
      description: |-
        This is the body for a respective scores increment,

        This will enable us to know what material we want to increment, all of which are optional, if it is defined we will attempt to increment the material.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/SeededScore'
        assets:
          $ref: '#/components/schemas/SeededScore'
        website:
          $ref: '#/components/schemas/SeededScore'
        websites:
          $ref: '#/components/schemas/SeededScore'
        anchor:
          $ref: '#/components/schemas/SeededScore'
        anchors:
          $ref: '#/components/schemas/SeededScore'
        anchorPoint:
          $ref: '#/components/schemas/SeededScore'
        anchorPoints:
          $ref: '#/components/schemas/SeededScore'
        annotation:
          $ref: '#/components/schemas/SeededScore'
        annotations:
          $ref: '#/components/schemas/SeededScore'
        conversation:
          $ref: '#/components/schemas/SeededScore'
        conversations:
          $ref: '#/components/schemas/SeededScore'
        conversationMessage:
          $ref: '#/components/schemas/SeededScore'
        conversationMessages:
          $ref: '#/components/schemas/SeededScore'
        share:
          $ref: '#/components/schemas/SeededScore'
        shares:
          $ref: '#/components/schemas/SeededScore'
        sensitive:
          $ref: '#/components/schemas/SeededScore'
        sensitives:
          $ref: '#/components/schemas/SeededScore'
        hint:
          $ref: '#/components/schemas/SeededScore'
        hints:
          $ref: '#/components/schemas/SeededScore'
        person:
          $ref: '#/components/schemas/SeededScore'
        persons:
          $ref: '#/components/schemas/SeededScore'
        tag:
          $ref: '#/components/schemas/SeededScore'
        tags:
          $ref: '#/components/schemas/SeededScore'
        workstream_summary:
          $ref: '#/components/schemas/SeededScore'
        workstream_summaries:
          $ref: '#/components/schemas/SeededScore'
        workstream_events:
          $ref: '#/components/schemas/SeededScore'
        workstream_event:
          $ref: '#/components/schemas/SeededScore'
        ranges:
          $ref: '#/components/schemas/SeededScore'
        range:
          $ref: '#/components/schemas/SeededScore'
        workstream_pattern_engine_sources:
          $ref: '#/components/schemas/SeededScore'
        workstream_pattern_engine_source:
          $ref: '#/components/schemas/SeededScore'
        models:
          $ref: '#/components/schemas/SeededScore'
        model:
          $ref: '#/components/schemas/SeededScore'
      title: SeededScoreIncrement
      type: object
      x-stoplight:
        id: 1bf9e6d13bbcb
    SeededScore:
      description: |-
        This is the low level seeded score and will let us know what exactly we want to increment on our material.

        Note: ONLY include one of these, as we will only increment one of the following.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        reuse:
          type: boolean
        update:
          type: boolean
        reference:
          type: boolean
        priority:
          type: boolean
        searched:
          type: boolean
      title: SeededScore
      type: object
      x-stoplight:
        id: 7tiju5l9hvtcw
    AnchorPoint:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        verified:
          type: boolean
        fullpath:
          description: This is the text of the path.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - anchor
      - created
      - fullpath
      - id
      - updated
      title: AnchorPoint
      type: object
      x-stoplight:
        id: vimzic8ey5idb
    AnchorPoints:
      description: This is the plural of AnchorPoint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/AnchorPoint'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an AnchorPoint\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: AnchorPoints
      type: object
      x-stoplight:
        id: jwtd6gizlkn4w
    SeededAnchorPoint:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        type:
          $ref: '#/components/schemas/AnchorTypeEnum'
        watch:
          type: boolean
        fullpath:
          type: string
        anchor:
          description: Cannot create an AnchorPoint w/o a Anchor.
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
      required:
      - anchor
      - fullpath
      - type
      title: SeededAnchorPoint
      type: object
      x-stoplight:
        id: sxhjxe0tj1u63
    Anchors:
      description: This is the plural of Anchor.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Anchor'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an Anchor\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Anchors
      type: object
    Annotation:
      description: |-
        An Annotation is the replacement for descriptions, this will enable comments, description, summaries and many more.

        person on here is a reference to the description/comment/annotation about a person

        NOTE: person here is NOT the creator of the annotaion. but rather the descriptions of the person.
        NOTE****: if we want to add "who" wrote the annotation, we will want to add a new field on here called author && will need to also layer in behavior the enable an author(person) and an asset both being referenced(ensure you check the side effect in the AssetsFacade.delete)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        person:
          $ref: '#/components/schemas/ReferencedPerson'
        type:
          $ref: '#/components/schemas/AnnotationTypeEnum'
        text:
          description: This is the text of the annotation.
          type: string
        model:
          $ref: '#/components/schemas/ReferencedModel'
        pseudo:
          type: boolean
        favorited:
          type: boolean
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        score:
          $ref: '#/components/schemas/Score'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        summary:
          $ref: '#/components/schemas/ReferencedWorkstreamSummary'
      required:
      - created
      - id
      - text
      - type
      - updated
      title: Annotation
      type: object
      x-stoplight:
        id: 22bulerl8wanu
    Annotations:
      description: This is the plural of Annotation
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Annotation'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an annotation\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Annotations
      type: object
      x-stoplight:
        id: rwmnz5n55qa6l
    SeededConnectorCreation:
      description: A encompasing creation object that can be utilized to create either
        an asset or a format.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/SeededConnectorAsset'
      title: SeededConnectorCreation
      type: object
    SeededConnectorAsset:
      description: A generic model to use with the Connector API that requires little
        to no additional information about the current application.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        metadata:
          $ref: '#/components/schemas/SeededAssetMetadata'
        format:
          $ref: '#/components/schemas/SeededFormat'
      required:
      - format
      title: SeededConnectorAsset
      type: object
    SeededAssetMetadata:
      description: |-
        This is optional metadata sent with the SeededAsset and other SeededAssets ie (UE, Jetbrains...)

        Note: if a user/develop didnt explicitly state a mechanism we will default to manual(user Driven only)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          description: This is the name of the asset.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        tags:
          description: (optional) can add some tags to associate to this asset.
          items:
            $ref: '#/components/schemas/SeededAssetTag'
          type: array
        websites:
          items:
            $ref: '#/components/schemas/SeededAssetWebsite'
          type: array
        sensitives:
          items:
            $ref: '#/components/schemas/SeededAssetSensitive'
          type: array
        persons:
          items:
            $ref: '#/components/schemas/SeededPerson'
          type: array
        annotations:
          items:
            $ref: '#/components/schemas/SeededAnnotation'
          type: array
        hints:
          items:
            $ref: '#/components/schemas/SeededHint'
          type: array
        anchors:
          items:
            $ref: '#/components/schemas/SeededAnchor'
          type: array
      title: SeededAssetMetadata
      type: object
    SeededAssetTag:
      description: "This is similar to an SeededTag, where this is the minimum information\
        \ of a tag, but this can get added to a seededAsset,  where you may not yet\
        \ have an asset id."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          description: this is the text that represents the tag.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/TagCategoryEnum'
      required:
      - text
      title: SeededAssetTag
      type: object
    SeededAssetWebsite:
      description: "This is similar to an SeededWebsite, where this is the minimum\
        \ information of a website, but this can get added to a seededAsset,  where\
        \ you may not yet have an asset id."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        url:
          type: string
        name:
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
      required:
      - name
      - url
      title: SeededAssetWebsite
      type: object
    SeededAssetSensitive:
      description: |-
        This is the seededAssetSensitive, this does not have an id yet as we will add it on the server side.

        can optionally pass in our mechanism here, as the default will be manual unless specified.

        This is different that hte SeededSensitive as this is pre-before the asset has been created.(but added when the asset is created.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          description: this is the string representative of the sensative piece of
            data.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/SensitiveCategoryEnum'
        severity:
          $ref: '#/components/schemas/SensitiveSeverityEnum'
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/SensitiveMetadata'
      required:
      - category
      - description
      - name
      - severity
      - text
      title: SeededAssetSensitive
      type: object
    SeededPerson:
      description: |-
        This is a per-cursor to a full person.

        Will throw an error, if asset is passed in but acces.scope is undefined.

        can optionally pass in our mechanism here, as the default will be manual unless specified.

        TODO consider updating these asset, format to referenced Models

        Note: model, access, mechanism will only be added if the asset is passed in.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        access:
          $ref: '#/components/schemas/PersonAccess'
        type:
          $ref: '#/components/schemas/PersonType'
        model:
          $ref: '#/components/schemas/PersonModel'
        annotations:
          items:
            $ref: '#/components/schemas/SeededAnnotation'
          type: array
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
      required:
      - type
      title: SeededPerson
      type: object
    SeededHint:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        asset:
          description: This is an asset id that we are using to link this to an asset.
          type: string
        type:
          $ref: '#/components/schemas/HintTypeEnum'
        text:
          description: This is the text of the hint.
          type: string
        model:
          description: this is a model id. that we are using to link this to a model.
          type: string
      required:
      - text
      - type
      title: SeededHint
      type: object
    SeededFormat:
      description: |-
        This is seeded data that will be come a format.

        We will throw an Error if, 1) file and fragment are both defined, 2) file and fragment are both null.

        if this is being used within the /assets/create endpoint or the /{application}/create endpoint, we will not take the classificaiton into account, as it is only used in the syntax highlighting related endpoints.That being said if you do want to override your classification, please look at the metadata within the file or the fragment.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        file:
          $ref: '#/components/schemas/SeededFile'
        fragment:
          $ref: '#/components/schemas/SeededFragment'
        classification:
          $ref: '#/components/schemas/SeededClassification'
      title: SeededFormat
      type: object
    SeededFile:
      description: |-
        This is a base model for a File(Seeded).

        We will Throw an Error, if the text and the bytes properties are both null && if both the text and bytes properties are both defined. Ensure that you pass either a text or bytes property.

        bytes and string are both optionl but, if both are null or both are defined we will throw an error. So You will be required to pass one or the other, NOT both.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        bytes:
          $ref: '#/components/schemas/TransferableBytes'
        string:
          $ref: '#/components/schemas/TransferableString'
        metadata:
          $ref: '#/components/schemas/FileMetadata'
      title: SeededFile
      type: object
    FileMetadata:
      description: This is a model for metadata of a file!
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          description: This is the name of your file.
          type: string
        ext:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        size:
          description: This is the size(in bytes)
          type: integer
      title: FileMetadata
      type: object
    SeededFragment:
      description: This will be either a TransferableString or TransferableBytes that
        represent your fragment. ONLY Pass one or the other DONT pass both or neither.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        string:
          $ref: '#/components/schemas/TransferableString'
        bytes:
          $ref: '#/components/schemas/TransferableBytes'
        metadata:
          $ref: '#/components/schemas/FragmentMetadata'
      title: SeededFragment
      type: object
    SeededClassification:
      description: This is the specific classification of an Asset's Format.(This
        is on a per format basis b/c an asset could have different formats that are
        different format representations of the Asset.)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        generic:
          $ref: '#/components/schemas/ClassificationGenericEnum'
        specific:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        rendering:
          $ref: '#/components/schemas/ClassificationRenderingEnum'
      title: SeededClassification
      type: object
    Suggestion:
      description: |-
        This is the model return by the connector's suggest endpoint.

        Note:
        assets are the assets that this target was ran against.

        distribution is the distribution that we generated from comparing the target to the asset's vectors.(currently uuid(assetid) : value that is the difference between the asset and the target) **could potentially make an additional model here that is an array from most to least relevent.

        *** distribution is required but we are currently unable to reflect that with our current dart generation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        reuse:
          $ref: '#/components/schemas/ReuseSuggestion'
        save:
          $ref: '#/components/schemas/SaveSuggestion'
        target:
          $ref: '#/components/schemas/SuggestionTarget'
        assets:
          $ref: '#/components/schemas/Assets'
        distribution:
          additionalProperties:
            type: number
          type: object
      required:
      - assets
      - reuse
      - save
      - target
      title: Suggestion
      type: object
    ReuseSuggestion:
      description: |-
        This is the ReuseSuggestion. Mainly creating an additional model here because I imagine that we will want to add some additional data to this in the future (potentially with more numerical data that is emitted from the ML Models)

        **Note: suggested is required here because we will want to say if we suggested to take this action of reuse or not.

        ** Thoughts here. We could potentially return Assets: which would be an iterable of assets in most relavent order for the user to reuse if they want.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        suggested:
          description: "This is a boolean, that will say if you should or should not\
            \ take action."
          type: boolean
        assets:
          $ref: '#/components/schemas/Assets'
      required:
      - assets
      - suggested
      title: ReuseSuggestion
      type: object
    Assets:
      description: A base class for a collection of assets and some additional meta
        properties. Fully Populated with Formats internally (not just uuid's).
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Asset'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an asset id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Assets
      type: object
    Asset:
      description: |-
        An Asset Model representing data extracted from an Application connecting a group of data containing one or more Formats.

        Below formats, preview, and original CAN to be pollinated (DAG Unsafe) because it is a root node and it's child leaf nodes will prevent cycles agressively.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: "The globally available UID representing the asset in the Database,\
            \ both locally and in the cloud."
          example: 2254f2c8-5797-40e8-ac56-41166dc0e159
          type: string
        name:
          type: string
        creator:
          example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        synced:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        formats:
          $ref: '#/components/schemas/Formats'
        preview:
          $ref: '#/components/schemas/Preview'
        original:
          $ref: '#/components/schemas/ReferencedFormat'
        shares:
          $ref: '#/components/schemas/Shares'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        websites:
          $ref: '#/components/schemas/Websites'
        interacted:
          $ref: '#/components/schemas/GroupedTimestamp'
        tags:
          $ref: '#/components/schemas/Tags'
        sensitives:
          $ref: '#/components/schemas/Sensitives'
        persons:
          $ref: '#/components/schemas/Persons'
        curated:
          description: This is an optional boolean that will flag that this asset
            came from a currated collection.
          type: boolean
        discovered:
          type: boolean
        activities:
          $ref: '#/components/schemas/Activities'
        score:
          $ref: '#/components/schemas/Score'
        favorited:
          type: boolean
        pseudo:
          description: This will determine if this is a asset that the user did not
            explicitly save.
          type: boolean
        annotations:
          $ref: '#/components/schemas/Annotations'
        hints:
          $ref: '#/components/schemas/Hints'
        anchors:
          $ref: '#/components/schemas/Anchors'
        conversations:
          $ref: '#/components/schemas/Conversations'
        summaries:
          $ref: '#/components/schemas/WorkstreamSummaries'
        demo:
          description: This will let us know if this asset was generated as a 'demo'
            snippet
          type: boolean
      required:
      - created
      - creator
      - formats
      - id
      - mechanism
      - original
      - preview
      - updated
      title: Asset
      type: object
    Formats:
      description: A base class for a collection of formats and some additional meta
        properties.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Format'
          type: array
      required:
      - iterable
      title: Formats
      type: object
    Preview:
      description: "This is a preview Model that will hold references to at minimum\
        \ the base preview. which can be potentiall a base image, or also base text/code\
        \ and then the oveylay is another format(image/text/code) that is 'overlayed'\
        \ ontop of the base format."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        base:
          $ref: '#/components/schemas/ReferencedFormat'
        overlay:
          $ref: '#/components/schemas/ReferencedFormat'
      required:
      - base
      title: Preview
      type: object
    Shares:
      description: this is just an iterable of our individual share models.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          description: this is just an iterable of our individual share models.
          items:
            $ref: '#/components/schemas/Share'
          type: array
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Shares
      type: object
    Share:
      description: |-
        This represents what information that is relavent to anything and every sharing related. v1 will look very bare and will add more and more data as we go!

        if user is undefined && access is public then we have an asset that is publicly available.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: This is the uuid that represents this share model.
          type: string
        user:
          description: this is the uuid of the user that the share is created for.
          type: string
        asset:
          $ref: '#/components/schemas/FlattenedAsset'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        link:
          description: This is the prebuilt link.
          type: string
        access:
          $ref: '#/components/schemas/AccessEnum'
        accessors:
          $ref: '#/components/schemas/Accessors'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        short:
          description: This is a shortened version of our uuid.
          type: string
        name:
          description: "this is an optional name we can give to the link, ie ?p=JAVASCRIPT\
            \ or what ever the user wants as long as it is available."
          type: string
        distributions:
          $ref: '#/components/schemas/Distributions'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - access
      - accessors
      - created
      - id
      - link
      - short
      title: Share
      type: object
    Distributions:
      description: This is the plural Model of a Distribution.
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/Distribution'
          type: array
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      required:
      - iterable
      title: Distributions
      type: object
      x-stoplight:
        id: 4agjstjbuf6ep
    Distribution:
      description: |-
        This is a fully referenced version of a Distribution.
        TODO add additional distributions such as slack, google_chat, ...etc
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        share:
          $ref: '#/components/schemas/FlattenedShare'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mailgun:
          $ref: '#/components/schemas/MailgunDistribution'
        github:
          $ref: '#/components/schemas/GitHubDistribution'
      required:
      - created
      - id
      - share
      - updated
      title: Distribution
      type: object
      x-stoplight:
        id: caq7q8ojyajs0
    Websites:
      description: This is a specific model for related websites to an asset.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Website'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an website\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Websites
      type: object
    Website:
      description: This is a specific model for related websites to an asset.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        url:
          description: this is the actual website url.
          type: string
        name:
          description: This is a name that is customized.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - name
      - updated
      - url
      title: Website
      type: object
    Tags:
      description: This is a model that represents multiple Tag Models
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an tag id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Tags
      type: object
    Tag:
      description: "This represents a fully polinated Tag, that is either attached\
        \ to an asset or a format that adds additional information \"tags\" to describe\
        \ itself.Helps improve Search and other contextual information that is useful\
        \ for the user."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: UUID that represents the tag.
          type: string
        text:
          description: represnts the value of a tag.
          type: string
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        category:
          $ref: '#/components/schemas/TagCategoryEnum'
        relationship:
          $ref: '#/components/schemas/Relationship'
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - category
      - created
      - id
      - text
      - updated
      title: Tag
      type: object
    Sensitives:
      description: This is a model that represents many individual sensitive pieces
        of data.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Sensitive'
          type: array
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Sensitives
      type: object
    Sensitive:
      description: This is a fully referenced representation of a sensitive pieces
        of data.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        asset:
          $ref: '#/components/schemas/FlattenedAsset'
        text:
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/SensitiveCategoryEnum'
        severity:
          $ref: '#/components/schemas/SensitiveSeverityEnum'
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/SensitiveMetadata'
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        score:
          $ref: '#/components/schemas/Score'
      required:
      - asset
      - category
      - created
      - description
      - id
      - mechanism
      - name
      - severity
      - text
      - updated
      title: Sensitive
      type: object
    Persons:
      description: This is the plural of Person. will have top level meta about the
        person including an iterable of all the person.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Person'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an person\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Persons
      type: object
    Person:
      description: |-
        if expiration is add then, after the alloted expiration date the user will only have view && comment only permissions. Only present in the case there is a scope such as a defined collection/asset...

        if asset is passed then that means this person belongs to a scoped asset.

        NOTE****: annotations here are annotations to describe the person!!! if in the future we want to add who wrote an annotation on and asset or soemthing like that, we will want to add a new field on here called authorships.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        type:
          $ref: '#/components/schemas/PersonType'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        interactions:
          description: This is an optional value that will keep track of the number
            of times this has been interacted with.
          type: integer
        access:
          additionalProperties:
            $ref: '#/components/schemas/PersonAccess'
          description: "This is a Map<String, PersonAccess> where the the key is an\
            \ asset id."
          type: object
        tags:
          $ref: '#/components/schemas/FlattenedTags'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        models:
          additionalProperties:
            $ref: '#/components/schemas/PersonModel'
          description: "This is a Map<String, PersonModel>, where the the key is an\
            \ asset id."
          type: object
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        score:
          $ref: '#/components/schemas/Score'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      required:
      - created
      - id
      - type
      - updated
      title: Person
      type: object
    Hints:
      description: This is the plural of a Hint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Hint'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an hint id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Hints
      type: object
      x-stoplight:
        id: wfmw2qozhwlhv
    Hint:
      description: "This is a hint that is attached to an asset, used for suggested_queries,\
        \ and hints given via the qgpt flow."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        mechanisms:
          additionalProperties:
            $ref: '#/components/schemas/MechanismEnum'
          description: "This is a Map<String, MechanismEnum> where the the key is\
            \ an asset id."
          type: object
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        type:
          $ref: '#/components/schemas/HintTypeEnum'
        text:
          description: This is the text of the hint.
          type: string
        model:
          $ref: '#/components/schemas/ReferencedModel'
        score:
          $ref: '#/components/schemas/Score'
      required:
      - created
      - id
      - text
      - type
      - updated
      title: Hint
      type: object
    Conversations:
      description: This is a plural version of a Conversation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Conversation'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an Conversation\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Conversations
      type: object
      x-stoplight:
        id: e6wn8svszg6ow
    Conversation:
      description: |-
        This is a fully referenced Conversation.

        This will hold together a conversation. Ie allthe message within a conversation.

        All the additional properties on here used on here like(anchors/assets) are used for context that will seed the conversation.

        model is a calculated property, and will be the model of the last message sent if applicable.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        name:
          description: This is a name that is customized.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        favorited:
          type: boolean
        application:
          $ref: '#/components/schemas/Application'
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        model:
          $ref: '#/components/schemas/ReferencedModel'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        type:
          $ref: '#/components/schemas/ConversationTypeEnum'
        grounding:
          $ref: '#/components/schemas/ConversationGrounding'
        score:
          $ref: '#/components/schemas/Score'
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
        demo:
          description: This will let us know if this conversation was generated as
            a 'demo' conversation
          type: boolean
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
      required:
      - created
      - id
      - messages
      - type
      - updated
      title: Conversation
      type: object
      x-stoplight:
        id: typnu965gdvtw
    WorkstreamSummaries:
      description: This is a collection of many WorkstreamSummary
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamSummary'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an summary\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: WorkstreamSummaries
      type: object
      x-stoplight:
        id: 6x6tiv80fzx7z
    WorkstreamSummary:
      description: "This is representation or a summarized version of the highly relevant\
        \ WorkstreamEvent events from a given time period, 1 day, 1 week, 1 month,\
        \ dependinng on your given flow."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        events:
          $ref: '#/components/schemas/FlattenedWorkstreamEvents'
        name:
          type: string
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        ranges:
          $ref: '#/components/schemas/FlattenedRanges'
        model:
          $ref: '#/components/schemas/Model'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        applications:
          $ref: '#/components/schemas/Applications'
      required:
      - created
      - id
      - model
      - name
      - range
      - updated
      title: WorkstreamSummary
      type: object
      x-stoplight:
        id: 89sodddjqbtk4
    SaveSuggestion:
      description: |-
        This is the SaveSuggestion. Mainly creating an additional model here because I imagine that we will want to add some additional data to this in the future (potentially with more numerical data that is emitted from the ML Models)

        **Note: suggested is required here because we will want to say if we reccomend to take this action of save or not.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        suggested:
          description: "This is a boolean, that will say if you should or should not\
            \ take action."
          type: boolean
      required:
      - suggested
      title: SaveSuggestion
      type: object
    SuggestionTarget:
      description: This is the target that was sent to pieces. This will return the
        string that represents this coppied || pasted asset. This will also send along
        the SeededConnectorCreation and will send along the vector that we created
        based on the seed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seed:
          $ref: '#/components/schemas/SeededConnectorCreation'
        vector:
          description: This is the vector representation of this target that we generated.
          type: integer
      required:
      - seed
      - vector
      title: SuggestionTarget
      type: object
    Reaction:
      description: |-
        This will the the Request body of the Request Endpoint.

        Reuse will not be required here because we do NOT know if the user will choose to reuse what we have suggested.

        save will however be required because this will let us know if we should save the coppied asset that was first sent over or not.

        seed is required, because we will want to know 100% sure what the original suggestion was made against.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        save:
          description: This will just be a simple boolean here that will say if the
            use should save the asset or not.
          type: boolean
        reuse:
          $ref: '#/components/schemas/ReuseReaction'
        seed:
          $ref: '#/components/schemas/SeededConnectorCreation'
      required:
      - save
      - seed
      title: Reaction
      type: object
    ReuseReaction:
      description: if reuse was used in the reaction then we can provide the uuid
        of the asset that was reused.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
      required:
      - asset
      title: ReuseReaction
      type: object
    Session:
      description: This is a specific model that will let us know at what time this
        user was using the application.
      properties:
        id:
          description: The UUID of the current Session
          type: string
        opened:
          $ref: '#/components/schemas/GroupedTimestamp'
        closed:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - id
      - opened
      title: Session
      type: object
    ExportedAsset:
      description: This is a model for a minimum exported version of an asset.
      properties:
        name:
          description: |
            this is the title of the asset
          type: string
        description:
          description: this is the description of the asset
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        raw:
          $ref: '#/components/schemas/FileFormat'
      required:
      - created
      - description
      - name
      - raw
      title: ExportedAsset
      type: object
      x-stoplight:
        id: ejp7e4pjtsw5j
    SeededAccessor:
      description: This is a pre-created accessor that simply takes an os id and an
        optional user(flattened)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        os:
          description: this is an os id.
          type: string
        user:
          $ref: '#/components/schemas/FlattenedUserProfile'
        share:
          description: this is the share that the asset is apart of.
          type: string
      required:
      - os
      - share
      title: SeededAccessor
      type: object
    AssetReclassification:
      description: This is a model that will represent the miminum properties required
        to update the classification of this asset.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ext:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        asset:
          $ref: '#/components/schemas/Asset'
      required:
      - asset
      - ext
      title: AssetReclassification
      type: object
    Seed:
      description: |-
        A seed Model used to wrap a format or asset

        Note: we will expand this now to support additional paramerters.

        Note: however if create an asset, only pass in the asset, not passing in an asset in this case will cause the endpoint to fail.

        TODO: for a breaking change update the type enum here to add support for the additional materials or remove it entirely.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/SeededAsset'
        person:
          $ref: '#/components/schemas/SeededPerson'
        anchor:
          $ref: '#/components/schemas/SeededAnchor'
        website:
          $ref: '#/components/schemas/SeededWebsite'
        type:
          enum:
          - SEEDED_FORMAT
          - SEEDED_ASSET
          example: SEEDED_ASSET
          type: string
      title: Seed
      type: object
    SeededAsset:
      description: |
        This is seed data that will be come an asset.

        discovered: if set to true this seededAsset was discovered using one of our discovery endpoints.

        pseudo: if this is an asset that a user did NOT explicitly save.

        available: This is a model that is used within our '/assets/draft' endpoint that will emitt a seed with all the available format that one can generate based on the original seed that was passed in. ie if a png was passed in, we may  say that there is a text/code format available. If available formats is passed into the '/assets/create' we will short curcuit certain operations to speed up the process, for instance, if we determine that there is no text within this image then there is no sense in running ocr.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        metadata:
          $ref: '#/components/schemas/SeededAssetMetadata'
        application:
          $ref: '#/components/schemas/Application'
        format:
          $ref: '#/components/schemas/SeededFormat'
        discovered:
          type: boolean
        available:
          $ref: '#/components/schemas/AvailableFormats'
        pseudo:
          type: boolean
        enrichment:
          $ref: '#/components/schemas/SeededAssetEnrichment'
        demo:
          description: This will let us know if this asset was generated as a 'demo'
            snippet
          type: boolean
      required:
      - application
      - format
      title: SeededAsset
      type: object
    AvailableFormats:
      description: This is a specific model here used within the SeededAsset that
        enables us to return all the available formats on a specific seed that was
        passed as an input within the '/assets/draft' endpoint
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Classification'
          type: array
      required:
      - iterable
      title: AvailableFormats
      type: object
      x-stoplight:
        id: g6tes2ded0ns1
    PseudoAssets:
      description: "This is a model of all optional properties, that will get returned\
        \ from /assets/pseudo."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifiers:
          $ref: '#/components/schemas/FlattenedAssets'
      title: PseudoAssets
      type: object
    SeededAssetsRecommendation:
      description: "This is the input data model for the /assets/recommend [GET] endpoint.\
        \ It includes both a list of assets but also "
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets:
          $ref: '#/components/schemas/Assets'
        interactions:
          $ref: '#/components/schemas/InteractedAssets'
      required:
      - assets
      - interactions
      title: SeededAssetsRecommendation
      type: object
    InteractedAssets:
      description: A model which contains a list of InteractedAssets with potentially
        additional properties.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/InteractedAsset'
          type: array
      required:
      - iterable
      title: InteractedAssets
      type: object
    InteractedAsset:
      description: 'A model that represents an asset that has been interacted with. '
      properties:
        asset:
          description: "A uuid model. 36 Characters (4 Dashes, 32 Numbers/Letters) "
          example: 6a2f41a3-c54c-fce8-32d2-0324e1c32e22
          format: uuid
          maxLength: 36
          minLength: 36
          pattern: "[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}"
          title: UniversalUniqueIdentifier (UUID)
          type: string
          x-tags:
          - uuid
        interactions:
          $ref: '#/components/schemas/InteractedAsset_interactions'
      title: InteractedAsset
      type: object
    SearchedAssets:
      description: This is a modle that will return fro mthe search endpoint that
        will just contain an array of assets!
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedAsset'
          type: array
        suggested:
          description: the number of fuzzy/suggested search results.
          type: number
        exact:
          description: the number of exact results
          type: number
      required:
      - exact
      - iterable
      - suggested
      title: SearchedAssets
      type: object
    SearchedAsset:
      description: This is a modle that will represent a searched asset!
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/Asset'
        exact:
          type: boolean
        score:
          type: number
        match:
          $ref: '#/components/schemas/SearchedMatchEnum'
        identifier:
          description: This is the uuid of the asset.
          type: string
        pseudo:
          description: If this is a pseudo asset that was also returned.
          type: boolean
      required:
      - exact
      - identifier
      - match
      - score
      title: SearchedAsset
      type: object
    SearchedMatchEnum:
      enum:
      - TITLE
      - ANNOTATION
      - HINT
      - CONTENT
      - FUZZY
      - MULTIPLE
      - TAGS
      - WEBSITES
      - PERSONS
      title: SearchedMatchEnum
      type: string
    AssetsSearchWithFiltersInput:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          type: string
        space:
          $ref: '#/components/schemas/AssetSearchSpace'
        filters:
          $ref: '#/components/schemas/AssetFilters'
        casing:
          description: "This is an optional bool that will let us know, if we want\
            \ to ignore case or not.(default is to allow casing)ie casing:true."
          type: boolean
      title: AssetsSearchWithFiltersInput
      type: object
    AssetSearchSpace:
      description: "This is provided search spaces, This is a provided assets, TODO\
        \ in the future we might want to add seeds."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        identifers:
          $ref: '#/components/schemas/FlattenedAssets'
      required:
      - identifers
      title: AssetSearchSpace
      type: object
    AssetFilters:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/AssetFilter'
          type: array
        type:
          $ref: '#/components/schemas/FilterOperationTypeEnum'
      required:
      - iterable
      title: AssetFilters
      type: object
    AssetFilter:
      description: |-
        ** in the future, consider adding an optional bool's called nextAnd, nextOr which will say that the next filter will be  AND behavor or OR behavior.

        "operations": here is is an optional property to allow or behavior,(we will only allow 1 level deep of or's), if or is not passed in then it is just simply ignored. If or is passed in then we will be or'd together with the top level filter and considered extras. default behavior for operations is and, however yoour can specifiy OR operations as well.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        classification:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        tags:
          items:
            type: string
          type: array
        websites:
          items:
            type: string
          type: array
        persons:
          items:
            type: string
          type: array
        phrase:
          $ref: '#/components/schemas/AssetFilterPhrase'
        created:
          $ref: '#/components/schemas/AssetFilterTimestamp'
        updated:
          $ref: '#/components/schemas/AssetFilterTimestamp'
        operations:
          $ref: '#/components/schemas/AssetFilters'
      title: AssetFilter
      type: object
    AssetFilterPhrase:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          type: string
        annotation:
          type: boolean
        title:
          type: boolean
        content:
          type: boolean
        options:
          $ref: '#/components/schemas/AssetFilterPhraseOptions'
      title: AssetFilterPhrase
      type: object
    AssetFilterPhraseOptions:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        annotation:
          $ref: '#/components/schemas/AnnotationTypeEnum'
      title: AssetFilterPhrase
      type: object
    AssetFilterTimestamp:
      description: |-
        if you want a range between you can use from && to.

        if you want anything before, use to and NO from.

        if you want anything after, use from and NO to.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        from:
          $ref: '#/components/schemas/GroupedTimestamp'
        to:
          $ref: '#/components/schemas/GroupedTimestamp'
        between:
          type: boolean
      title: AssetFilterTimestamp
      type: object
    FilterOperationTypeEnum:
      enum:
      - AND
      - OR
      title: FilterOperationTypeEnum
      type: string
    AssetsSearchWithFiltersOutput:
      description: "output for the /assets/search [POST] "
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        results:
          $ref: '#/components/schemas/SearchedAssets'
      required:
      - results
      title: AssetsSearchWithFiltersOutput
      type: object
    StreamedIdentifiers:
      description: "This is currently only used within /assets/steam/identifiers &&\
        \ /conversations/steam/identifiers but can be used with other as well, if\
        \ we want to expand this class. && expand the StreamedIdentifier class."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/StreamedIdentifier'
          type: array
      required:
      - iterable
      title: StreamedIdentifiers
      type: object
    StreamedIdentifier:
      description: "This is currently only used within /assets/steam/identifiers &&\
        \ /conversations/steam/identifiers && annotations but can be used with other\
        \ as well, if we want to expand this class."
      properties:
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        annotation:
          $ref: '#/components/schemas/ReferencedAnnotation'
        activity:
          $ref: '#/components/schemas/ReferencedActivity'
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        anchorPoint:
          $ref: '#/components/schemas/ReferencedAnchorPoint'
        hint:
          $ref: '#/components/schemas/ReferencedHint'
        conversationMessage:
          $ref: '#/components/schemas/ReferencedConversationMessage'
        format:
          $ref: '#/components/schemas/ReferencedFormat'
        person:
          $ref: '#/components/schemas/ReferencedPerson'
        range:
          $ref: '#/components/schemas/ReferencedRange'
        sensitive:
          $ref: '#/components/schemas/ReferencedSensitive'
        tag:
          $ref: '#/components/schemas/ReferencedTag'
        website:
          $ref: '#/components/schemas/ReferencedWebsite'
        application:
          $ref: '#/components/schemas/ReferencedApplication'
        model:
          $ref: '#/components/schemas/ReferencedModel'
        workstreamPatternEngineSource:
          $ref: '#/components/schemas/ReferencedIdentifiedWorkstreamPatternEngineSource'
        deleted:
          description: This is a specific bool that will let us know if we deleted
            an Identifierfrom the db.
          type: boolean
      title: StreamedIdentifier
      type: object
    ReferencedApplication:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedApplication'
      required:
      - id
      title: ReferencedApplication
      type: object
    FlattenedApplication:
      description: Flattened version of the Application(for now just the same properties)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: The ID of the application at the device level
          type: string
        name:
          $ref: '#/components/schemas/ApplicationNameEnum'
        version:
          description: This is the specific version number 0.0.0
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        onboarded:
          type: boolean
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        capabilities:
          $ref: '#/components/schemas/CapabilitiesEnum'
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        automaticUnload:
          description: This is a proper that will let us know if we will proactivity
            unload all of your machine learning models.by default this is false.
          type: boolean
      required:
      - id
      - name
      - onboarded
      - platform
      - privacy
      - version
      title: FlattenedApplication
      type: object
    ReferencedIdentifiedWorkstreamPatternEngineSource:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedIdentifiedWorkstreamPatternEngineSource'
      required:
      - id
      title: ReferencedIdentifiedWorkstreamPatternEngineSource
      type: object
    FlattenedIdentifiedWorkstreamPatternEngineSource:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        raw:
          $ref: '#/components/schemas/WorkstreamPatternEngineSource'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        filter:
          description: This will determine if we want to filter this specific source
          type: boolean
        name:
          description: This is the name of the source(defualt original data) this
            is NOT used for matching just for readability
          type: string
      required:
      - created
      - id
      - name
      - raw
      - updated
      title: FlattenedIdentifiedWorkstreamPatternEngineSource
      type: object
    WorkstreamPatternEngineSource:
      description: |-
        This is a specific model for a given WPE qdrant source.

        note: application is optional b/c we may want a network sorce in the future
        TODO: think about adding an enum or something that will delimit the type of processor(vision/filewatcher/network/audio)

        TODO: in the future we can add tabs/filepaths to this model here.
        TODO: Enum for source/processor ? i.e. WorkstreamPatternEngineProcessorEnum.VISION, WorkstreamPatternEngineProcessorEnum.NETWORK, WorkstreamPatternEngineProcessorEnum.FILE_IO, WorkstreamPatternEngineProcessorEnum.AUDIO, etc.

        NOTE: if all three are null we will thro an error.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          deprecated: true
          description: THIS IS DEPRECATED WILL NOT BE USED
          type: string
        window:
          description: This is the name of the tab or open file
          type: string
        url:
          description: This is a url that was extracted from the WPE data.
          type: string
        application:
          description: This is the name of the window(foreground window)/application.(this
            will always be present)
          type: string
        installation:
          description: "This is the path is which this application download location\
            \ is (NOTE, not being used quite yet)"
          type: string
      title: WorkstreamPatternEngineSource
      type: object
    ResultedPKCE:
      description: A Model To Represent the Code Returned from a PKCE Response
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        code:
          description: The PKCE Code to be used to access a Token.
          type: string
        state:
          description: Likely the state that will be returned which should match the
            requested state as well as the nonce
          type: string
      required:
      - code
      - state
      title: ResultedPKCE
      type: object
    CodeAnalyses:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/CodeAnalysis'
          type: array
      required:
      - iterable
      title: CodeAnalyses
      type: object
    SeededConnectorConnection:
      description: A model that is passed to the context API at bootup
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          $ref: '#/components/schemas/SeededTrackedApplication'
      required:
      - application
      title: SeededConnectionContext
      type: object
    SeededTrackedApplication:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          $ref: '#/components/schemas/ApplicationNameEnum'
        version:
          description: This is the specific version number 0.0.0
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
        capabilities:
          $ref: '#/components/schemas/CapabilitiesEnum'
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        automaticUnload:
          description: This is a proper that will let us know if we will proactivity
            unload all of your machine learning models.by default this is false.
          type: boolean
        enrichment:
          $ref: '#/components/schemas/SeededAssetEnrichment'
      required:
      - name
      - platform
      - version
      title: SeededTrackedApplication
      type: object
    Context:
      description: A Context that is returned from almost all calls to the ContextAPI
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        os:
          description: This is th UUID of the OS that this context is currently connected
            to. This attempts to be the same as Segment's anonmyousId feild. It is
            attempted to be set at initial installation at Pieces/.identity/.os
          type: string
        application:
          $ref: '#/components/schemas/Application'
        health:
          $ref: '#/components/schemas/Health'
        user:
          $ref: '#/components/schemas/UserProfile'
      required:
      - application
      - health
      - os
      title: Context
      type: object
    Health:
      description: This is a health model used to determine the "health" of the os
        server and cloud server(Coming Soon). READONLY Model.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        os:
          $ref: '#/components/schemas/OSHealth'
      readOnly: true
      required:
      - os
      title: Health
      type: object
    OSHealth:
      description: This is a specific model for the health of our OS Server.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: id of your OS
          type: string
        version:
          description: this is the current OS version
          type: string
      required:
      - id
      - version
      title: OSHealth
      type: object
    ConversationMessages:
      description: This is a plural version of ConversationMessage.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ConversationMessage'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an ConversationMessage\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: ConversationMessages
      type: object
      x-stoplight:
        id: deb6bc4791079
    ConversationMessage:
      description: |-
        This is a fully referenced ConversationMessage.

        This has the minimum amount of properties to keep this light weight

        (will consider additional properties in the future like people/tags/links xyz)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        deleted:
          $ref: '#/components/schemas/GroupedTimestamp'
        model:
          $ref: '#/components/schemas/Model'
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        sentiment:
          $ref: '#/components/schemas/ConversationMessageSentimentEnum'
        role:
          $ref: '#/components/schemas/QGPTConversationMessageRoleEnum'
        score:
          $ref: '#/components/schemas/Score'
        annotations:
          $ref: '#/components/schemas/FlattenedAnnotations'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
      required:
      - conversation
      - created
      - id
      - role
      - updated
      title: ConversationMessage
      type: object
      x-stoplight:
        id: 90b602c96e5bc
    ConversationSummarizeInput:
      description: Optionally you may pass in a list of conversation message that
        you would like to use for the summary.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
      title: ConversationSummarizeInput
      type: object
      x-stoplight:
        id: ye5egjeq0kmgx
    ConversationSummarizeOutput:
      description: "This is the output model for \"/conversation/{conversation}/summarize"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        annotation:
          $ref: '#/components/schemas/ReferencedAnnotation'
      required:
      - annotation
      - conversation
      title: ConversationSummarizeOutput
      type: object
      x-stoplight:
        id: 646b30ca76de5
    SeededConversation:
      description: |-
        This is a pre-Conversation object.

        This will hold together a conversation. Ie allthe message within a conversation.

        All the additional properties on here used on here like(anchors/assets) are used for context that will seed the conversation.

        model is a calculated property, and will be the model of the last message sent if applicable.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          description: This is a name that is customized.
          type: string
        favorited:
          type: boolean
        application:
          $ref: '#/components/schemas/Application'
        annotations:
          items:
            $ref: '#/components/schemas/SeededAnnotation'
          type: array
        messages:
          items:
            $ref: '#/components/schemas/SeededConversationMessage'
          type: array
        model:
          $ref: '#/components/schemas/ReferencedModel'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          items:
            $ref: '#/components/schemas/SeededAnchor'
          type: array
        type:
          $ref: '#/components/schemas/ConversationTypeEnum'
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
        demo:
          description: This will let us know if this conversation was generated as
            a 'demo' conversation
          type: boolean
      required:
      - type
      title: SeededConversation
      type: object
      x-stoplight:
        id: 71d3t5evv1k7k
    SeededConversationMessage:
      description: |-
        This is a seeded version of a ConversationMessage.

        conversation is optional, this is because it can be used within the SeededConversation, however if this is passed into the /messages/create w/o a conversation uuid then we will throw an error.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        model:
          $ref: '#/components/schemas/Model'
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        sentiment:
          $ref: '#/components/schemas/ConversationMessageSentimentEnum'
        role:
          $ref: '#/components/schemas/QGPTConversationMessageRoleEnum'
      required:
      - fragment
      - role
      title: SeededConversationMessage
      type: object
      x-stoplight:
        id: 00051c20fd9cc
    ConversationsCreateFromAssetOutput:
      description: "This is the model for the output for the \"/conversations/create/from_asset/{asset}\"\
        \ endpoints."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
      required:
      - conversation
      title: ConversationsCreateFromAssetOutput
      type: object
      x-stoplight:
        id: a7tga1zlzdyd0
    ExportedDatabase:
      properties:
        analyses:
          items:
            type: integer
          type: array
        applications:
          items:
            type: integer
          type: array
        assets:
          items:
            type: integer
          type: array
        codeAnalyses:
          items:
            type: integer
          type: array
        files:
          items:
            type: integer
          type: array
        formatMetrics:
          items:
            type: integer
          type: array
        formats:
          items:
            type: integer
          type: array
        fragments:
          items:
            type: integer
          type: array
        imageAnalyses:
          items:
            type: integer
          type: array
        models:
          items:
            type: integer
          type: array
        ocrAnalyses:
          items:
            type: integer
          type: array
        persons:
          items:
            type: integer
          type: array
        sensitives:
          items:
            type: integer
          type: array
        tags:
          items:
            type: integer
          type: array
        websites:
          items:
            type: integer
          type: array
        values:
          $ref: '#/components/schemas/ExportedDatabaseFormats'
        version:
          description: This is the version of your os_server or cloud_server that
            we we exporting from.
          type: string
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        relationships:
          items:
            type: integer
          type: array
        activities:
          items:
            type: integer
          type: array
        annotations:
          items:
            type: integer
          type: array
        hints:
          items:
            type: integer
          type: array
        anchors:
          items:
            type: integer
          type: array
        anchorPoints:
          items:
            type: integer
          type: array
        conversations:
          items:
            type: integer
          type: array
        conversationMessages:
          items:
            type: integer
          type: array
        workstreamEvents:
          items:
            type: integer
          type: array
        ranges:
          items:
            type: integer
          type: array
        workstreamSummaries:
          items:
            type: integer
          type: array
        workstreamPatternEngineSources:
          items:
            type: integer
          type: array
        messageValues:
          $ref: '#/components/schemas/ExportedDatabaseFormats'
        workstreamEventValues:
          $ref: '#/components/schemas/ExportedDatabaseFormats'
      required:
      - analyses
      - applications
      - assets
      - codeAnalyses
      - files
      - formatMetrics
      - formats
      - fragments
      - imageAnalyses
      - models
      - ocrAnalyses
      - persons
      - sensitives
      - tags
      - values
      - version
      - websites
      title: ExportedDatabase
      type: object
    ExportedDatabaseFormats:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ExportedDatabaseFormat'
          type: array
      required:
      - iterable
      title: ExportedDatabaseFormats
      type: object
    ExportedDatabaseFormat:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          description: this is the id of the format
          type: string
        raw:
          description: these are bytes.
          items:
            type: integer
          type: array
      required:
      - id
      - raw
      title: ExportedDatabaseFormat
      type: object
    SeededDiscoverableSensitives:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SeededDiscoverableSensitive'
          type: array
        application:
          type: string
      required:
      - application
      - iterable
      title: SeededDiscoverableSensitives
      type: object
    SeededDiscoverableSensitive:
      description: "This is the SeededDiscoverableSensitive, this has every property\
        \ that the seededSensitive has except this one is all optionally passed in.\
        \ and will override our classification if provided."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        text:
          description: this is the string representative of the sensative piece of
            data.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/SensitiveCategoryEnum'
        severity:
          $ref: '#/components/schemas/SensitiveSeverityEnum'
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/SensitiveMetadata'
      required:
      - asset
      - text
      title: SeededDiscoverableSensitive
      type: object
    DiscoveredSensitives:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/DiscoveredSensitive'
          type: array
        application:
          type: string
      required:
      - application
      - iterable
      title: DiscoveredSensitives
      type: object
    DiscoveredSensitive:
      description: "This will return a discoveredSensitive, with a seed that can be\
        \ used to create if automatic is set to false. and will provide the original\
        \ text provided."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seed:
          $ref: '#/components/schemas/SeededSensitive'
        text:
          type: string
      required:
      - seed
      - text
      title: DiscoveredSensitive
      type: object
    SeededSensitive:
      description: |-
        This is the seededSensitive, this does not have an id yet as we will add it on the server side.

        can optionally pass in our mechanism here, as the default will be manual unless specified.

        TODO consider updating these asset,format to referenced Models
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          type: string
        text:
          description: this is the string representative of the sensative piece of
            data.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/SensitiveCategoryEnum'
        severity:
          $ref: '#/components/schemas/SensitiveSeverityEnum'
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/SensitiveMetadata'
      required:
      - asset
      - category
      - description
      - name
      - severity
      - text
      title: SeededSensitive
      type: object
    SeededDiscoverableRelatedTags:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SeededDiscoverableRelatedTag'
          type: array
        application:
          description: This is the application id that this request is sent from.
          type: string
      required:
      - application
      - iterable
      title: SeededDiscoverableRelatedTags
      type: object
    SeededDiscoverableRelatedTag:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          description: This is the description of the tag.
          type: string
        asset:
          description: this is a uuid that references an asset.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        format:
          description: (optionally) you can attach a tag to a format. so when you
            delete a format this tag will get removed from the asset as well.
          type: string
        category:
          $ref: '#/components/schemas/TagCategoryEnum'
      required:
      - asset
      - text
      title: SeededDiscoverableRelatedTag
      type: object
    DiscoveredRelatedTags:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          type: string
        iterable:
          items:
            $ref: '#/components/schemas/DiscoveredRelatedTag'
          type: array
      required:
      - application
      - iterable
      title: DiscoveredRelatedTags
      type: object
    DiscoveredRelatedTag:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seed:
          $ref: '#/components/schemas/SeededTag'
      required:
      - seed
      title: DiscoveredRelatedTag
      type: object
    SeededTag:
      description: |-
        This is the minimum information needed when creating a Tag.

        Default we will attach manual to a tag unless otherwise specified for mechanism.

        you can optionally add an asset, format, or person uuid to attach this tag directly to it

        TODO consider updating these asset,format to referenced Models
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          description: This is the description of the tag.
          type: string
        asset:
          description: this is a uuid that references an asset.
          type: string
        mechanism:
          $ref: '#/components/schemas/MechanismEnum'
        category:
          $ref: '#/components/schemas/TagCategoryEnum'
        person:
          description: "uuid of the person, you want to add this tag too"
          type: string
      required:
      - text
      title: SeededTag
      type: object
    SeededDiscoverableHtmlWebpages:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SeededDiscoverableHtmlWebpage'
          type: array
        application:
          description: This is the applicaiton Id used to connect to Pieces OS.
          type: string
      required:
      - application
      - iterable
      title: SeededDiscoverableHtmlWebpages
      type: object
    SeededDiscoverableHtmlWebpage:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        url:
          description: |
            The route of the page
          type: string
        page:
          description: page's html as a string
          type: string
      required:
      - page
      - url
      title: SeededDiscoverableHtmlWebpage
      type: object
    DiscoveredHtmlWebpages:
      description: "Assumption: The iterable will be in the exact same order as it\
        \ was passed in within the seededDiscoveredHtmlWebpages"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/DiscoveredHtmlWebpage'
          type: array
        application:
          type: string
      required:
      - application
      - iterable
      title: DiscoveredHtmlWebpages
      type: object
    DiscoveredHtmlWebpage:
      description: "This will return assets that were extracted from the html webpage.\
        \ This will contain the original url so you can double check the results wtih\
        \ the results you passed in, but it will remain in the same order that it\
        \ was passed in if used within the /discover/discover/html/webpage endpoint."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets:
          $ref: '#/components/schemas/DiscoveredAssets'
        url:
          type: string
      required:
      - assets
      - url
      title: DiscoveredHtmlWebpage
      type: object
    DiscoveredAssets:
      description: This is a plural Model that is used within the bulk upload flow
        in both cases of a file(&& needing snippitization) as well as if the fragments
        are passed in and they only need to be clustered.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          description: application id.
          type: string
        iterable:
          description: This is an iterable of already snippitized snippets that have
            been clustered.(These are assets that are going to be uploaded or at minimum
            the assets that we reccommend to upload)
          items:
            $ref: '#/components/schemas/DiscoveredAsset'
          type: array
      required:
      - application
      - iterable
      title: DiscoveredAssets
      type: object
    DiscoveredAsset:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        file:
          $ref: '#/components/schemas/SeededFile'
        fragment:
          $ref: '#/components/schemas/SeededFragment'
        directory:
          type: string
        metadata:
          $ref: '#/components/schemas/SeededAssetMetadata'
        filters:
          $ref: '#/components/schemas/TLPDirectedDiscoveryFilters'
      title: DiscoveredAsset
      type: object
    TLPDirectedDiscoveryFilters:
      description: Contains array of TLPDirectedDiscoveryFilter
      properties:
        iterable:
          description: Array that contains filters like class/function/loop
          items:
            $ref: '#/components/schemas/TLPDirectedDiscoveryFilter'
          type: array
      required:
      - iterable
      title: TLPDirectedDiscoveryFilters
      type: object
      x-stoplight:
        id: 17nd872wtvhkh
    TLPDirectedDiscoveryFilter:
      description: Contains enum which represents code block type
      properties:
        name:
          $ref: '#/components/schemas/TLPDirectedDiscoveryFilterEnum'
      required:
      - name
      title: TLPDirectedDiscoveryFilter
      type: object
      x-stoplight:
        id: f3sjzvv04snxy
    TLPDirectedDiscoveryFilterEnum:
      description: "Code block type like function, class, abstract"
      enum:
      - FUNCTION
      - METHOD
      - CLASS
      - STRUCT
      - ABSTRACT
      - COMMENT
      - IMPORT
      - IF
      - LOOP
      - RETURN
      title: TLPDirectedDiscoveryFilterEnum
      type: string
      x-stoplight:
        id: ewv8gu8hfz498
    SeededDiscoverableAssets:
      description: "Assumption: filters imposed in this model can be overwritten by\
        \ passing them in SeededDiscoverableAsset"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          description: application id.
          type: string
        iterable:
          description: This is an iterable of already snippitized snippets that we
            will compare && cluster.
          items:
            $ref: '#/components/schemas/SeededDiscoverableAsset'
          type: array
        filters:
          $ref: '#/components/schemas/TLPDirectedDiscoveryFilters'
      required:
      - application
      - iterable
      title: SeededDiscoverableAssets
      type: object
    SeededDiscoverableAsset:
      description: "Assumption: filters applied in this model will overwrite filters\
        \ passed in SeededDiscoverableAssets"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        file:
          $ref: '#/components/schemas/SeededFile'
        fragment:
          $ref: '#/components/schemas/SeededFragment'
        directory:
          type: string
        filters:
          $ref: '#/components/schemas/TLPDirectedDiscoveryFilters'
      title: SeededDiscoverableAsset
      type: object
    SeededDistribution:
      description: |-
        TODO if we add another distribution add to this, Distribution, and flattenedDistribution.

        can only use this Model with our Linkify Model.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        mailgun:
          $ref: '#/components/schemas/MailgunDistribution'
        github:
          $ref: '#/components/schemas/SeededGitHubDistribution'
      title: SeededDistribution
      type: object
      x-stoplight:
        id: orslx6c53ex3r
    SeededGitHubDistribution:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        gist:
          $ref: '#/components/schemas/SeededGitHubGistDistribution'
      title: SeededGitHubDistribution
      type: object
      x-stoplight:
        id: 2hzex1ezhpuo3
    SeededGitHubGistDistribution:
      description: This is the minimum information needed to distribute a Piece to
        a Gist.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        recipients:
          $ref: '#/components/schemas/Recipients'
        public:
          description: we will default to true
          type: boolean
        description:
          description: This is the description of the Gist Distribution
          type: string
        name:
          description: This is the name of the gist you will add.
          type: string
      required:
      - name
      title: SeededGitHubGistDistribution
      type: object
      x-stoplight:
        id: 755788c9b52dc
    PrecreatedExternalProviderApiKey:
      description: This is the input model for /external_provider/api_key/create
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          description: This is the ID of the User.
          type: string
        open_AI:
          $ref: '#/components/schemas/Auth0OpenAIUserMetadata'
      required:
      - user
      title: PrecreatedExternalProviderApiKey
      type: object
    CreatedExternalProviderApiKey:
      description: This is the outputmodel for /external_provider/api_key/create
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        metadata:
          $ref: '#/components/schemas/Auth0UserMetadata'
      required:
      - metadata
      title: CreatedExternalProviderApiKey
      type: object
      x-stoplight:
        id: qq9zkoulwoxt8
    PreupdatedExternalProviderApiKey:
      description: "This is the endput model for \"/external_provider/api_key/update\"\
        . everything but the uder will be optional, anything that is defined will\
        \ get an update."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          type: string
        open_AI:
          $ref: '#/components/schemas/Auth0OpenAIUserMetadata'
      required:
      - user
      title: PreupdatedExternalProviderApiKey
      type: object
    UpdatedExternalProviderApiKey:
      description: "This is the update Auth0UserMetadata object, and the specific\
        \ update output model for \"/external_provider/api_key/update\""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        metadata:
          $ref: '#/components/schemas/Auth0UserMetadata'
      required:
      - metadata
      title: UpdatedExternalProviderApiKey
      type: object
      x-stoplight:
        id: kyltrem97npuz
    PredeletedExternalProviderApiKey:
      description: |-
        This is a predeleted version relating to the /external_provider/api_key/delete endpoint.

        This will ensure we remove this specific provider.(anything that is set to true we will reset to null within the database.)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          type: string
        open_AI:
          type: boolean
      required:
      - user
      title: PredeletedExternalProviderApiKey
      type: object
    DeletedExternalProviderApiKey:
      description: This is the returnable for the ""/external_provider/api_key/delete"
        endpoint
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        metadata:
          $ref: '#/components/schemas/Auth0UserMetadata'
      required:
      - metadata
      title: DeletedExternalProviderApiKey
      type: object
      x-stoplight:
        id: 56fh57manaq0a
    FormatReclassification:
      description: This is a model that will represent the miminum properties required
        to update the classification of this format.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ext:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        format:
          $ref: '#/components/schemas/Format'
      required:
      - ext
      - format
      title: FormatReclassification
      type: object
    SeededGithubGistsImport:
      description: |-
        This is the body of the /github/gists/import,

        by default we will look for everything from your private gists, (TODO hook up public gists.)&& get clever

        currently we will not ensure that this is a good pieces for you but we will just get you the gist and let you do what you want with it(room for improvement, if we want to layer in advanced pieces discovery)

        For the future, we might want to add a max number of assets that are returned from this.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          description: application id.
          type: string
        public:
          description: "This will default to false.(ie private), currently not supporting\
            \ pulling public gists."
          type: boolean
      required:
      - application
      title: SeededGithubGistsImport
      type: object
      x-stoplight:
        id: uetelzqkre6hh
    Seeds:
      description: This is a plural model for multiple Seed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Seed'
          type: array
      required:
      - iterable
      title: Seeds
      type: object
    ImageAnalyses:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ImageAnalysis'
          type: array
      required:
      - iterable
      title: ImageAnalyses
      type: object
    LinkifyMultiple:
      description: |
        This is the incoming linkify model.

        if access is PRIVATE then please provide and array of users to enable the link for.

        Assumption, all assets are already backed up to the cloud.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        assets:
          description: This is an array or string that represents an already backed
            up asset. That will be added to a collection.
          items:
            type: string
          type: array
        users:
          description: this is an array of users.
          items:
            $ref: '#/components/schemas/SeededUser'
          type: array
        access:
          $ref: '#/components/schemas/AccessEnum'
        name:
          description: optionally can give the collection a name if you want.
          type: string
      required:
      - access
      - assets
      title: LinkifyMultiple
      type: object
    SeededUser:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        emails:
          items:
            type: string
          type: array
      required:
      - emails
      title: SeededUser
      type: object
    Linkify:
      description: |
        This is the incoming linkify model.

        if access is PRIVATE then please provide and array of users to enable the link for.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seed:
          $ref: '#/components/schemas/Seed'
        asset:
          $ref: '#/components/schemas/Asset'
        users:
          description: this is an array of users.
          items:
            $ref: '#/components/schemas/SeededUser'
          type: array
        access:
          $ref: '#/components/schemas/AccessEnum'
        distributions:
          $ref: '#/components/schemas/SeededDistributions'
      required:
      - access
      title: Linkify
      type: object
    SeededDistributions:
      description: This is the plural version of a SeededDistribution that is not
        referenced just yet.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SeededDistribution'
          type: array
      required:
      - iterable
      title: SeededDistributions
      type: object
      x-stoplight:
        id: b471ymykrw25b
    UnsegmentedTechnicalLanguage:
      description: |-
        This is the input model for '/machine_learning/text/technical_language/parsers/segmentation'

        This will take the unsegmentedText here!
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          type: string
          x-stoplight:
            id: 58gaxay29crfe
      required:
      - value
      title: UnsegmentedTechnicalLanguage
      type: object
      x-stoplight:
        id: 2nxomz0a6u1t0
    SegmentedTechnicalLanguage:
      description: |-
        This is the output model for '/machine_learning/text/technical_language/parsers/segmentation'

        This will have an iterable of the segmented Technical language text/code
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SegmentedTechnicalLanguageFragment'
          type: array
          x-stoplight:
            id: zx4wyajdqxe4d
      required:
      - iterable
      title: SegmentedTechnicalLanguage
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: ntxq4ixsu2boc
    SegmentedTechnicalLanguageFragment:
      description: |-
        This is the output iterable model for '/machine_learning/text/technical_language/parsers/segmentation'

        specific is optional here, however you can pass in classify: true to get the specific classificaiton in the case the generic is code.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        generic:
          $ref: '#/components/schemas/ClassificationGenericEnum'
        specific:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        fragment:
          $ref: '#/components/schemas/FragmentFormat'
      required:
      - fragment
      - generic
      title: SegmentedTechnicalLanguageFragment
      type: object
      x-pieces-internal: true
      x-stoplight:
        id: tqct03ugvmspo
    SeededMacOSAsset:
      description: "An Seeded Asset specific to MacOS which takes in a Value, and\
        \ Application"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          $ref: '#/components/schemas/Application'
        value:
          description: The value of the text that you want to save as an asset.
          example: console.log("hello world")
          type: string
      required:
      - value
      title: SeededMacOSAsset
      type: object
    FormatsMetrics:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/FormatMetric'
          type: array
      required:
      - iterable
      title: FormatsMetrics
      type: object
    FormatMetric:
      description: |-
        FormatMetric

        This is a model that will represent the about of specific formats. ie Generic: 'CODE' specific: 'DART' identifiers: ['FormatUID1, 'FormatUID2']
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        generic:
          $ref: '#/components/schemas/ClassificationGenericEnum'
        specific:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        identifiers:
          description: this is a list of format ids
          items:
            type: string
          type: array
      required:
      - generic
      - identifiers
      - specific
      title: FormatMetric
      type: object
    OrderedMetrics:
      description: This is a returnable for the metrics/formats/ordered
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ordered:
          items:
            type: string
          type: array
      required:
      - ordered
      title: OrderedMetrics
      type: object
    ModelDownloadProgress:
      description: |-
        This is the model that is sent over our ws for streaming the progress of a model that is being downloaded.

        can eventually add a number that display the percent downloaded an so on.(this is called percent 0-100)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        status:
          $ref: '#/components/schemas/ModelDownloadProgressStatusEnum'
        percentage:
          description: Optionally if the download is in progress you will recieve
            a download percent(from 0-100).
          nullable: true
          type: number
          x-stoplight:
            id: zi6lc4jex1t7f
      title: ModelDownloadProgress
      type: object
      x-stoplight:
        id: h3fdsqho1l2ch
    ModelDownloadProgressStatusEnum:
      description: Enum used for the status of the progress in downloading a model.
      enum:
      - INITIALIZED
      - IN-PROGRESS
      - COMPLETED
      - FAILED
      - UNKNOWN
      - CANCELED
      - RESET
      title: ModelDownloadProgressStatusEnum
      type: string
      x-stoplight:
        id: bab1a8291c5bf
    SeededModel:
      description: |-
        This is Precursor to a Model.

        bytes: here is the size of the model in a file local on your computer.
        ram: is the amount of ram usage when the model is loaded into memory.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        version:
          description: this is a version of the model.
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        name:
          description: This is an Optional Name of the Model.
          type: string
        description:
          description: An Optional Description of the model itself.
          type: string
        cloud:
          description: This will inform the user if this was a model that is hosted
            in the cloud
          type: boolean
        type:
          $ref: '#/components/schemas/ModelTypeEnum'
        usage:
          $ref: '#/components/schemas/ModelUsageEnum'
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
        ram:
          $ref: '#/components/schemas/ByteDescriptor'
        quantization:
          description: "quantization is a string like: q8f16_0,  q4f16_1, etc..."
          type: string
        foundation:
          $ref: '#/components/schemas/ModelFoundationEnum'
        downloaded:
          description: This is an optional bool to let us know if this model has been
            downloaded locally.
          type: boolean
        unique:
          description: This is the unique model name used to load the model.
          type: string
        parameters:
          description: This is the number of parameters in terms of billions.
          nullable: true
          type: number
        provider:
          $ref: '#/components/schemas/ExternalMLProviderEnum'
        cpu:
          description: This is an optional bool that is optimized for CPU usage.
          type: boolean
        maxTokens:
          $ref: '#/components/schemas/ModelMaxTokens'
        custom:
          description: This is reserved to customly register models.
          type: boolean
        capabilities:
          $ref: '#/components/schemas/ModelCapabilities'
      required:
      - cloud
      - created
      - name
      - type
      - usage
      - version
      title: SeededModel
      type: object
    ModelDeleteCacheInput:
      description: "This is the input model for '/model/{model}/delete/cache'"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: ModelDeleteCacheInput
      type: object
      x-stoplight:
        id: l6kdrw8rndb3q
    ModelDeleteCacheOutput:
      description: "This is the output model for '/model/{model}/delete/cache'"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        model:
          $ref: '#/components/schemas/ReferencedModel'
      required:
      - model
      title: ModelDeleteCacheOutput
      type: object
      x-stoplight:
        id: hqip1vwjnczth
    Models:
      description: This is a List of MachineLearning Models
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Model'
          type: array
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Models
      type: object
    Notification:
      description: config model for notification invoking
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: integer
        title:
          type: string
        message:
          type: string
        payload:
          type: string
      required:
      - id
      title: Notification
      type: object
    TokenizedPKCE:
      description: This is the flow that mobile apps use to access an API. Use this
        endpoint to exchange an Authorization Code for a Token.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        grant_type:
          description: "Denotes the flow you are using. For Authorization Code, use\
            \ authorization_code or refresh_token."
          enum:
          - refresh_token
          - authorization_code
          type: string
        client_id:
          description: Your application's Client ID.
          type: string
        code:
          description: The Authorization Code received from the initial /authorize
            call.
          type: string
        redirect_uri:
          description: This is required only if it was set at the GET /authorize endpoint.
            The values must match.
          type: string
        code_verifier:
          description: Cryptographically random key that was used to generate the
            code_challenge passed to /authorize.
          type: string
        audience:
          description: "The audience domain: i.e. https://pieces.us.auth0.com"
          example: https://pieces.us.auth0.com
          type: string
      required:
      - client_id
      - code
      - code_verifier
      - grant_type
      - redirect_uri
      title: TokenizedPKCE
      type: object
    OAuthToken:
      description: A model representing a returnable response for a OAuthGroup Token
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        access_token:
          description: The Access Token
          type: string
        token_type:
          enum:
          - Bearer
          type: string
        expires_in:
          example: 86400
          type: integer
        scope:
          type: string
        refresh_token:
          type: string
        id_token:
          type: string
      required:
      - access_token
      - expires_in
      - scope
      - token_type
      title: OAuthToken
      type: object
    OCRAnalyses:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/OCRAnalysis'
          type: array
      required:
      - iterable
      title: OCRAnalyses
      type: object
    OpenAIModelsListInput:
      description: This is the input model for the /open_ai/models/list endpoint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          type: string
      required:
      - user
      title: OpenAIModelsListInput
      type: object
      x-stoplight:
        id: v682bponu66r6
    OpenAIModelsListOutput:
      description: This is the output model for the /open_ai/models/list endpoint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        models:
          $ref: '#/components/schemas/SeededModels'
      required:
      - models
      title: OpenAIModelsListOutput
      type: object
      x-stoplight:
        id: z2koynz8495uz
    SeededModels:
      description: This is a Model that will hold an iterable of SeededModels.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SeededModel'
          type: array
      required:
      - iterable
      title: SeededModels
      type: object
      x-stoplight:
        id: xwt66hfbxybr3
    FilePickerInput:
      description: This is the input model for the FilePicker
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        allowedExtensions:
          items:
            type: string
          type: array
        allowMultiple:
          description: default behavior is set to true
          type: boolean
      title: FilePickerInput
      type: object
    SeededExternalProvider:
      description: This is the minimum information needed to connect an additional
        provider.
      properties:
        type:
          $ref: '#/components/schemas/ExternalProviderTypeEnum'
      required:
      - type
      title: SeededExternalProvider
      type: object
      x-stoplight:
        id: i97rjmncs0t92
    ReturnedUserProfile:
      description: "This is a modle strictly for the purpose that when calling '/user'\
        \ and other user related endpoints the UserProfile could potentially be null,\
        \ so we needed a model to do that."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        user:
          $ref: '#/components/schemas/UserProfile'
      title: ReturnedUserProfile
      type: object
    Users:
      description: A base class for a collection of users and some additional meta
        properties.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/UserProfile'
          type: array
      title: Users
      type: object
    UncheckedOSServerUpdate:
      description: "This is the input body for /os/update/check, just a placeholder\
        \ for now."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: UncheckedOSServerUpdate
      type: object
    OSServerUpdateStatus:
      description: |-
        This is the model for the progress of the current update of Pieces os.

        /os/update/check/stream && /os/update/check/

        we will emit on a progress update

        updated: is an optional property that will let us know when the update was checked last.

        NOTE: it is reccommended to use the stream instead of pulling.
        NOTE: lets think about if we want to have a closing(as well as how we want to handle restarts)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        status:
          $ref: '#/components/schemas/UpdatingStatusEnum'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        percentage:
          description: Optionally if the update is in progress you will recieve a
            download percent(from 0-100).
          nullable: true
          type: number
      required:
      - status
      title: OSServerUpdateStatus
      type: object
    UpdatingStatusEnum:
      description: |-
        This is a simple enum used to determine the status of the Updating process.(of PiecesOS)

        UpdatingStatusEnum(READY_TO_RESTART, AVAILABLE(but not downloaded), DOWNLOADING, UNKNOWN, UP_TO_DATE)

        UNKNOWN: should never be the case

        These are some enums that are currently not implemented but are for future support( REINSTALL_REQUIRED, CONTACT_SUPPORT)
      enum:
      - READY_TO_RESTART
      - AVAILABLE
      - DOWNLOADING
      - UNKNOWN
      - UP_TO_DATE
      - REINSTALL_REQUIRED
      - CONTACT_SUPPORT
      title: UpdatingStatusEnum
      type: string
      x-stoplight:
        id: bvwdklaqis0zl
    PKCE:
      description: An object representing all of the properties involved in a PKCE
        Authentication Flow
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        result:
          $ref: '#/components/schemas/ResultedPKCE'
        challenge:
          $ref: '#/components/schemas/ChallengedPKCE'
        revocation:
          $ref: '#/components/schemas/RevokedPKCE'
        seed:
          $ref: '#/components/schemas/SeededPKCE'
        token:
          $ref: '#/components/schemas/TokenizedPKCE'
        auth0:
          $ref: '#/components/schemas/Auth0'
      title: PKCE
      type: object
    ChallengedPKCE:
      description: A model that Generates A PKCE Challenge Object with the needed
        requirements.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        state:
          description: An opaque value the clients adds to the initial request that
            Auth0 includes when redirecting the back to the client. This value must
            be used by the client to prevent CSRF attacks.
          format: uuid
          type: string
        nonce:
          description: "A local key that is held as the comparator to state, thus\
            \ they should be the same."
          format: uuid
          type: string
        challenge:
          description: Generated challenge from the code_verifier.
          type: string
        method:
          description: "Method used to generate the challenge. The PKCE spec defines\
            \ two methods, S256 and plain, however, Auth0 supports only S256 since\
            \ the latter is discouraged."
          enum:
          - S256
          type: string
        verifier:
          description: Cryptographically random key that was used to generate the
            code_challenge passed to /authorize.
          type: string
      required:
      - challenge
      - method
      - nonce
      - state
      - verifier
      title: ChallengedPKCE
      type: object
    RevokedPKCE:
      description: |-
        A model to support revoking a Token Generated Through PKCE

        The behaviour of this endpoint depends on the state of the Refresh Token Revocation Deletes Grant toggle.

        If this toggle is enabled, then each revocation request invalidates not only the specific token, but all other tokens based on the same authorization grant.

        This means that all Refresh Tokens that have been issued for the same user, application, and audience will be revoked. If this toggle is disabled, then only the refresh token is revoked, while the grant is left intact
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        client_id:
          description: Your application's Client ID. The application should match
            the one the Refresh Token was issued for.
          type: string
        token:
          description: The Refresh Token you want to revoke.
          type: string
      required:
      - client_id
      - token
      title: RevokedPKCE
      type: object
    SeededPKCE:
      description: A model that initialized a PKCE Authentication Flow.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        response_type:
          description: Indicates to Auth0 which OAuth 2.0 Flow you want to perform.
            Use code for Authorization Code Grant (PKCE) Flow.
          enum:
          - code
          - token
          - id_token
          example: code
          type: string
        state:
          description: An opaque value the clients adds to the initial request that
            Auth0 includes when redirecting the back to the client. This value must
            be used by the client to prevent CSRF attacks.
          format: uuid
          type: string
        nonce:
          description: "A local key that is held as the comparator to state, thus\
            \ they should be the same."
          format: uuid
          type: string
        redirect_uri:
          description: http://localhost:8080/authentication/response
          format: uri
          type: string
        code_challenge:
          description: Generated challenge from the code_verifier.
          type: string
        code_challenge_method:
          description: "Method used to generate the challenge. The PKCE spec defines\
            \ two methods, S256 and plain, however, Auth0 supports only S256 since\
            \ the latter is discouraged."
          enum:
          - S256
          type: string
        domain:
          description: https://auth.pieces.services/authorize
          format: uri
          type: string
        audience:
          description: |-
            The unique identifier of the target API you want to access.
            i.e. https://pieces.us.auth0.com/api/v2/
          format: uri
          type: string
        screen_hint:
          description: Provides a hint to Auth0 as to what flow should be displayed.
            The default behavior is to show a login page but you can override this
            by passing 'signup' to show the signup page instead.
          enum:
          - signup
          type: string
        prompt:
          description: "\tTo initiate a silent authentication request, use prompt=none\
            \ (see Remarks for more info)."
          enum:
          - login
          - none
          type: string
        organization:
          type: string
        invitation:
          type: string
        scope:
          description: "The scopes which you want to request authorization for. These\
            \ must be separated by a space. You can request any of the standard OpenID\
            \ Connect (OIDC) scopes about users, such as profile and email, custom\
            \ claims that must conform to a namespaced format, or any scopes supported\
            \ by the target API (for example, read:contacts). Include offline_access\
            \ to get a Refresh Token."
          items:
            enum:
            - offline_access
            - email
            - profile
            - openid
            type: string
          type: array
        client_id:
          description: Your application's Client ID.
          example: 9sW4Pa1LEjX67l6VO14u0207NLYeXnu1
          type: string
        ADDITIONAL_PARAMETERS:
          $ref: '#/components/schemas/SeededPKCE_ADDITIONAL_PARAMETERS'
        response_mode:
          enum:
          - form_post
          - web_message
          - fragment
          - query
          type: string
      required:
      - client_id
      - code_challenge
      - code_challenge_method
      - nonce
      - response_type
      - scope
      - state
      title: SeededPKCE
      type: object
    Auth0:
      description: An object representing all of the properties that are available
        within a Auth0 PKCE Flow
      properties:
        identity:
          $ref: '#/components/schemas/Auth0Identity'
        user:
          $ref: '#/components/schemas/Auth0User'
        metadata:
          $ref: '#/components/schemas/Auth0UserMetadata'
        domain:
          description: The domain of your Auth 0 Service
          type: string
        client:
          description: The Client ID for your Auth0 Service
          type: string
        audience:
          description: The Server Audience of your Auth0 Service
          type: string
        redirects:
          $ref: '#/components/schemas/Auth0_redirects'
        oAuth:
          $ref: '#/components/schemas/OAuthGroup'
        namespace:
          description: An optional namespace parameter to add an additional namespace
          type: string
      required:
      - audience
      - client
      - domain
      - oAuth
      - redirects
      title: Auth0
      type: object
    Auth0Identity:
      description: |-
        Contains info retrieved from the identity provider with which the user originally authenticates. Users may also link their profile to multiple identity providers; those identities will then also appear in this array. The contents of an individual identity provider object varies by provider, but it will typically include the following.
        Link: [https://auth0.com/docs/rules/user-object-in-rules]

        Currently left out:
        - profile_data: (Object) User information associated with the connection. When profiles are linked, it is populated with the associated user info for secondary accounts.
      properties:
        connection:
          description: |
            Name of the Auth0 connection used to authenticate the user.
          type: string
        isSocial:
          description: |
            Indicates whether the connection is a social one.
          type: boolean
        provider:
          description: mapped from user_id  -> id
          type: string
        user_id:
          description: User's unique identifier for this connection/provider.
          type: string
        access_token:
          type: string
        expires_in:
          type: integer
      title: Auth0Identity
      type: object
    Auth0User:
      description: ""
      properties:
        name:
          description: "\tUser's full name."
          example: Tsavo Knott
          type: string
        picture:
          description: 'mapped from picture.URL pointing to the user''s profile picture. '
          example: https://picsum.photos/200
          format: uri
          type: string
        email:
          example: user@pieces.app
          format: email
          type: string
        created_at:
          format: date-time
          type: string
        email_verified:
          description: Indicates whether the user has verified their email address.
            Mapped from email_verified -> emailVerified.
          type: boolean
        family_name:
          description: User's family name.
          type: string
        given_name:
          description: |
            User's given name.
          type: string
        identities:
          description: Contains info retrieved from the identity provider with which
            the user originally authenticates.
          items:
            $ref: '#/components/schemas/Auth0Identity'
          type: array
        nickname:
          description: |
            User's nickname.
          type: string
        updated_at:
          format: date-time
          type: string
        username:
          description: "\t(unique) User's username.\n\t"
          type: string
        user_metadata:
          $ref: '#/components/schemas/Auth0UserMetadata'
        locale:
          type: string
        user_id:
          type: string
        last_ip:
          type: string
        last_login:
          format: date-time
          type: string
        logins_count:
          type: integer
        blocked_for:
          items:
            type: string
          type: array
        guardian_authenticators:
          items:
            type: string
          type: array
      title: Auth0User
      type: object
    OAuthGroup:
      description: A model to group all of the properties associated with OAuthGroup
      properties:
        token:
          $ref: '#/components/schemas/OAuthToken'
        account:
          $ref: '#/components/schemas/OAuthAccount'
      title: OAuthGroup
      type: object
    OAuthAccount:
      description: A Model to support account creation to Auth0's Database.
      properties:
        client_id:
          description: The client_id of your client.
          minLength: 1
          type: string
        email:
          description: The user's email address.
          minLength: 1
          type: string
        connection:
          description: The name of the database configured to your client.
          minLength: 1
          type: string
        username:
          description: The user's username. Only valid if the connection requires
            a username.
          minLength: 1
          type: string
        given_name:
          description: The user's given name(s).
          minLength: 1
          type: string
        family_name:
          description: The user's family name(s).
          minLength: 1
          type: string
        name:
          description: The user's full name.
          minLength: 1
          type: string
        picture:
          description: A URI pointing to the user's picture.
          minLength: 1
          type: string
        nickname:
          description: The user's nickname.
          minLength: 1
          type: string
      required:
      - client_id
      - connection
      - email
      - family_name
      - given_name
      - name
      - nickname
      - picture
      - username
      title: OAuthAccount
      type: object
    QGPTHintsInput:
      description: |-
        Query is your hints question.
        Relevant is the relevant snippets.
        Answer is the previous answer.(that we are asking a hint up for.)

        Query and Answer are both optional here because, you may pass over relevant snippets over ahead of hand if you already have them to answer your questions.
      properties:
        query:
          type: string
        answer:
          $ref: '#/components/schemas/QGPTQuestionAnswer'
        relevant:
          $ref: '#/components/schemas/RelevantQGPTSeeds'
        application:
          description: optional application id
          type: string
        model:
          description: optional model id
          type: string
      required:
      - relevant
      title: QGPTHintsInput
      type: object
    QGPTQuestionAnswer:
      description: This will be a simple model with a score and a text value that
        will represent the value returned for this answer.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        score:
          description: This is the score from 0-1 on how good this answer is.
          type: number
        text:
          type: string
      required:
      - score
      - text
      title: QGPTQuestionAnswer
      type: object
    RelevantQGPTSeeds:
      description: This is a plural of RelevantQGPTSeed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/RelevantQGPTSeed'
          type: array
      required:
      - iterable
      title: RelevantQGPTSeeds
      type: object
    RelevantQGPTSeed:
      description: |-
        This is a generic model used, to wrap a seed, as well as give an identifier used to further identifiy this snippet.

        Seed is optional here because you may just want to provide the id, and not the original seed.

        id is also optional here as you may provide an id or not here.(however with specific endpoint this ID is a guarentee.)

        location:(optional) if a path or an anchor is passed in, this will let us know the specific location within the 'file' that this relevant seed is located
                  note: if this is null and a path/anchor is present then we will use the entire file that is provided.(this logic will be determined within the relevance flow & not by the user)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        seed:
          $ref: '#/components/schemas/Seed'
        path:
          description: This is an optional file path
          type: string
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        location:
          $ref: '#/components/schemas/TextLocation'
      title: RelevantQGPTSeed
      type: object
    QGPTQuestionOutput:
      description: |-
        This is the output/returned value from the /qgpt/question endpoint. && /qgpt/followup

        This will just have a single required property. the possible answers to the question, with a score.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        answers:
          $ref: '#/components/schemas/QGPTQuestionAnswers'
      required:
      - answers
      title: QGPTQuestionOutput
      type: object
    QGPTQuestionAnswers:
      description: This is the plural of QGPTQuestionAnswer
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/QGPTQuestionAnswer'
          type: array
      required:
      - iterable
      title: QGPTQuestionAnswers
      type: object
    QGPTPersonsRelatedInput:
      description: |
        This is used for /qgpt/persons/related.

        will accept a seed, or conversation all optionally.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seed:
          $ref: '#/components/schemas/Seed'
        conversation:
          $ref: '#/components/schemas/QGPTConversation'
        application:
          description: optional application id
          type: string
        model:
          description: optional model id
          type: string
      title: DiscoverPersonsRelatedInput
      type: object
    QGPTConversation:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/QGPTConversationMessage'
          type: array
      title: QGPTConversation
      type: object
    QGPTConversationMessage:
      description: "This will take a single message, and a role."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        text:
          type: string
        role:
          $ref: '#/components/schemas/QGPTConversationMessageRoleEnum'
        timestamp:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - role
      - text
      - timestamp
      title: QGPTConversationMessage
      type: object
    QGPTPersonsRelatedOutput:
      description: |-
        This model is used for the output of the /qgpt/related/persons endpoint.

        Explanations here is a custom object with key value pairs,
        when the key is the personUUId and the value is an explanation as to why this person was reccommended.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        persons:
          $ref: '#/components/schemas/Persons'
        explanations:
          additionalProperties:
            type: string
          description: "This is a Map<String, String> where the the key is a person\
            \ id. and the value is the explanation."
          type: object
      required:
      - persons
      title: QGPTPersonsRelatedOutput
      type: object
      x-stoplight:
        id: 13125eiiqbyo3
    QGPTQuestionInput:
      description: |-
        This is the body input for the /code_gpt/question.

        Note:
        - each relevant seed, must require at minimum a Seed or an id used from the /code_gpt/relevance endpoint or we will throw an error.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        relevant:
          $ref: '#/components/schemas/RelevantQGPTSeeds'
        query:
          description: This is the user asked question.
          type: string
        application:
          description: optional application id
          type: string
        model:
          description: optional model id
          type: string
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
        temporal:
          $ref: '#/components/schemas/TemporalRangeGrounding'
      required:
      - query
      - relevant
      title: QGPTQuestionInput
      type: object
    QGPTRelevanceInput:
      description: |-
        This is the input body for the /code_gpt/relevance endpoint.

        There are a couple different options that you may take with this Model.

        First we will talk about the space in which you will compare your query too.
        These are the following cases for the space.
        1. provide an absolute path on the users machine that we can use locally.
        2. provide Seeds that you want to compare to, which will be ONLY fragment/string values(all other values will be ignored)
        3. provide assets, here you can provide an iterable of the asset id, and we will do the rest
        4. you can set your database boolean to true which will tell us to use your entire DB as the query space.

        Note:
        - for ease of use, we have an additional boolean called 'question', which will also ask your question to gpt3.5, and compare to the relevant snippets that we found. That way you dont need to call /code_gpt/question. Otherwise the next step would be is to take the results and feed them into /code_gpt/question. to get your question answered.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          description: This is the question that the user is asking.
          type: string
        paths:
          description: This is an optional list of file || folder paths.
          items:
            type: string
          type: array
        seeds:
          $ref: '#/components/schemas/Seeds'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        messages:
          $ref: '#/components/schemas/FlattenedConversationMessages'
        options:
          $ref: '#/components/schemas/QGPTRelevanceInputOptions'
        application:
          description: optional application id
          type: string
        model:
          description: optional model id
          type: string
        temporal:
          $ref: '#/components/schemas/TemporalRangeGrounding'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
      required:
      - query
      title: QGPTRelevanceInput
      type: object
    QGPTRelevanceInputOptions:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        database:
          description: This is an optional boolen that will tell us to use our entire
            snippet database as the sample.
          type: boolean
        question:
          description: "This is an optional boolean, that will let the serve know\
            \ if you want to combine the 2 endpointsboth relevance && the Question\
            \ endpoint to return the final results."
          type: boolean
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
      title: QGPTRelevanceInputOptions
      type: object
    QGPTRelevanceOutput:
      description: |-
        This is the returned value from /code_gpt/relevance.

        This will return the snippets that we found are relevant to the query you provided.

        (optional) answer: in the case you provided question: true, then we will also return to you the answer to your question.

        Note:
        - relevant: this is required property and will represent the relevant snippets, to your specific query.(NOTE: these snippet will all have respective id's and seed defined. even though id and seed are optional)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        answer:
          $ref: '#/components/schemas/QGPTQuestionOutput'
        relevant:
          $ref: '#/components/schemas/RelevantQGPTSeeds'
      required:
      - relevant
      title: QGPTRelevanceOutput
      type: object
    QGPTRepromptInput:
      description: |-
        Query is your followup question.

        Conversation is a list of the back and fourth with the qgpt bot.
        where the first entry in the array was the last message sent.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          type: string
        conversation:
          $ref: '#/components/schemas/QGPTConversation'
        application:
          description: optional application id
          type: string
        model:
          description: optional model id
          type: string
        pipeline:
          $ref: '#/components/schemas/QGPTPromptPipeline'
      required:
      - conversation
      - query
      title: QGPTRepromptInput
      type: object
    QGPTRepromptOutput:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          type: string
      required:
      - query
      title: QGPTRepromptOutput
      type: object
    QGPTStreamInput:
      description: This is the input for the /qgpt/stream endpoint.
      properties:
        relevance:
          $ref: '#/components/schemas/QGPTRelevanceInput'
        question:
          $ref: '#/components/schemas/QGPTQuestionInput'
        request:
          description: This is an optional Id you can use to identify the result from
            your request.
          type: string
        conversation:
          description: "This is the ID of a predefined persisted conversation, if\
            \ this is not present we will create a new conversation for the input/output.(in\
            \ the case of a question)"
          type: string
        stop:
          description: This will stop the output of the current LLM
          type: boolean
        reset:
          description: This will fully reset all current Activity within the QGPT
            stream Flows.
          type: boolean
        agent:
          description: "This will let us know if we want to run the agent routing\
            \ as well, this is default to true. However if set to false you will save\
            \ on processing and you will recieve null for the agentRoutes class on\
            \ the QGPTStreamOutput."
          type: boolean
      title: QGPTStreamInput
      type: object
    QGPTStreamOutput:
      description: |-
        This is the out for the /qgpt/stream endpoint.

        200: success
        401: invalid authentication/api key
        429: Rate limit/Quota exceeded
        500: server had an error
        503: the engine is currently overloaded
      properties:
        request:
          description: "This is the id used to represent the stream of response. this\
            \ will always be present. We will use the value passed inby the client,\
            \ or we will generate one."
          type: string
        relevance:
          $ref: '#/components/schemas/QGPTRelevanceOutput'
        question:
          $ref: '#/components/schemas/QGPTQuestionOutput'
        status:
          $ref: '#/components/schemas/QGPTStreamEnum'
        conversation:
          description: "This is the ID of a predefined persisted conversation, if\
            \ this is not present we will create a new conversation for the input/output.(in\
            \ the case of a question)"
          type: string
        statusCode:
          description: This will be provided
          nullable: true
          type: number
          x-stoplight:
            id: nuye00uj41lpw
        errorMessage:
          description: optional error message is the status code is NOT 200
          type: string
          x-stoplight:
            id: z09vb2bdlqgz8
        agentRoutes:
          $ref: '#/components/schemas/QGPTAgentRoutes'
        extracted:
          $ref: '#/components/schemas/QGPTStreamedOutputExtractedMaterials'
      required:
      - conversation
      title: QGPTStreamOutput
      type: object
    QGPTStreamEnum:
      description: This is a specific Enum used for the QGPT Stream.
      enum:
      - CANCELED
      - INITIALIZED
      - IN-PROGRESS
      - COMPLETED
      - FAILED
      - UNKNOWN
      - STOPPED
      - RESET
      title: QGPTStreamEnum
      type: string
      x-stoplight:
        id: lmsxm2ekq27dv
    QGPTAgentRoutes:
      description: |-
        This is apart of the Output and will let the plugin developer know if we reccomend to run specific agent functionality/routes.
        for instance, related.people, code classification...xyz, for now we start with relatedPeople.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        related:
          $ref: '#/components/schemas/QGPTAgentRelatedRoutes'
      title: QGPTAgentRoutes
      type: object
    QGPTAgentRelatedRoutes:
      description: "This is specific for all the related materials, like people, tags,\
        \ websites... xyz"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        people:
          description: "optional bool, that will say if we reccomend to run related.people\
            \ on this conversation, IFF set to TRUE."
          type: boolean
      title: QGPTAgentRelatedRoutes
      type: object
    QGPTStreamedOutputExtractedMaterials:
      description: |-
        This is used as an object that will return some of the extracted materials from both
        the message w/ compeleted/ or stopped

        as well as the context(if using WorkstreamContext)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        textual:
          $ref: '#/components/schemas/QGPTStreamedOutputExtractedTextualMaterials'
      title: QGPTStreamedOutputExtractedMaterials
      type: object
    QGPTStreamedOutputExtractedTextualMaterials:
      description: This is all the textually extracted materials from the QGPT stream
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        message:
          $ref: '#/components/schemas/TextuallyExtractedMaterials'
        workstream:
          $ref: '#/components/schemas/TextuallyExtractedMaterials'
      title: QGPTStreamedOutputExtractedTextualMaterials
      type: object
    TextuallyExtractedMaterials:
      description: This is a plural of an Extraction
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/TextuallyExtractedMaterial'
          type: array
      required:
      - iterable
      title: TextuallyExtractedMaterials
      type: object
    TextuallyExtractedMaterial:
      description: |-
        This is an extraction,
        this was a person/website/anchor that was extracted

        this will return the text location where this was found within the extraction.

        as well return the material itself that was extracted.

        Note:
        - seeds: will only be extracted people if provided, because the website/anchors will be created if extracted.
        - basically only thing that is different about the extracted people, if that if we extract a person that was not already saved,
          then we will not save them, however if there are related people then we will add them as well.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        match:
          $ref: '#/components/schemas/TextLocation'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        seeds:
          $ref: '#/components/schemas/Seeds'
      required:
      - match
      title: TextuallyExtractedMaterial
      type: object
    Relationships:
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/Relationship'
          type: array
      required:
      - iterable
      title: Relationships
      type: object
      x-stoplight:
        id: vqz8hj7kuzfzm
    SeededAssetTags:
      properties:
        iterable:
          items:
            $ref: '#/components/schemas/SeededAssetTag'
          type: array
      required:
      - iterable
      title: SeededAssetTags
      type: object
      x-stoplight:
        id: 8d3qwio1bpzf2
    SeededShare:
      description: ' required to pass in an asset or assets.'
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        asset:
          $ref: '#/components/schemas/Asset'
        users:
          description: if private please specificy some users you want to share this
            with.
          items:
            $ref: '#/components/schemas/SeededUser'
          type: array
        access:
          $ref: '#/components/schemas/AccessEnum'
        assets:
          $ref: '#/components/schemas/Assets'
        name:
          description: "optional name, if it is available. and must be unique."
          type: string
      required:
      - access
      title: SeededShare
      type: object
    ExistentMetadata:
      description: |-
        This is a shared output model for all the exists endpoints:
        /tags/exists : value here is the tag that you want to see if it exists.
        /websites/exists: value here is the url you want to see if it exists
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          type: string
      required:
      - value
      title: ExistentMetadata
      type: object
      x-stoplight:
        id: jfgc4ry6zmlb4
    ExistingMetadata:
      description: |-
        This is a shared input model for all the exists endpoints:
        /tags/exists : if the tag exists you will have a defined tag:ReferencedTag, if not then it doesnt exist.
        /websites/exists: if the url exists you will have a defined website:ReferencedWebsite, if not then it doesnt exist.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        website:
          $ref: '#/components/schemas/ReferencedWebsite'
        tag:
          $ref: '#/components/schemas/ReferencedTag'
      title: ExistingMetadata
      type: object
      x-stoplight:
        id: kp1smsnacffow
    SeededUltraSuiteAsset:
      description: |-
        A SeededUEAsset is the minimum data sent from UE required to create an asset within Pieces.

        Fragment & file are both optional properties however we will throw an internal error if both fragment and file are passed through or if both are undefined.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          description: (optional) name is the name of the file
          type: string
        ext:
          $ref: '#/components/schemas/ClassificationSpecificEnum'
        format:
          $ref: '#/components/schemas/SeededFormat'
        description:
          type: string
      required:
      - format
      title: SeededUltraSuiteAsset
      type: object
    DetectedExternalApplications:
      description: |-
        This is used as the returnable for the /applications/external && /applications/external/related endpoints.

        This will return an iterable of Deteched Application a detected Application is an application that is currently installed on your machine.

        the /applications/external/related endpoint, will return a subset of the applications returned mainly applications that we detect are Pieces Applications that you have yet to install + names of applications where Pieces is coming soon.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/DetectedExternalApplication'
          type: array
      required:
      - iterable
      title: DetectedExternalApplications
      type: object
      x-stoplight:
        id: ih1edhocc74q7
    DetectedExternalApplication:
      description: This is a detected External Application that comes from our endpoint
        that will get a snapshot of the installed applications on your machine.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          description: this is the name of the application
          type: string
        version:
          type: string
      required:
      - name
      title: DetectedExternalApplication
      type: object
      x-stoplight:
        id: u9u6eiz1ypp7o
    PreonboardedPersonaDetails:
      description: |-
        This is an input body for the /machine_learning/text/technical_processing/generators/personification endpoint.

        This will accept some of the personal details ie languages/personas && will transform this in to onbaording snippets
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        languages:
          items:
            type: string
            x-stoplight:
              id: 4rj8y3y3hgofi
          type: array
          x-stoplight:
            id: wreolag2qmpjm
        personas:
          items:
            type: string
            x-stoplight:
              id: 7qaadb5semw8m
          type: array
          x-stoplight:
            id: 96q5gbm46hrk7
      title: PreonboardedPersonaDetails
      type: object
      x-stoplight:
        id: qm5xis2mngb02
    OnboardedPersonaDetails:
      description: |-
        This is an out body for the /machine_learning/text/technical_processing/generators/personification endpoint.

        This will have accepted some of the personal details (in the input body) ie languages/personas && will transform this in to onbaording snippets that we will return with this model
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        seeds:
          $ref: '#/components/schemas/Seeds'
      required:
      - seeds
      title: OnboardedPersonaDetails
      type: object
      x-stoplight:
        id: msvgtp6n9u4r2
    OSDeviceInformationReturnable:
      description: This is the returnable model for the /os/device/information.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        dependencies:
          $ref: '#/components/schemas/OSDeviceDependenciesInformation'
        name:
          description: this is the name of the device
          type: string
        version:
          description: this is the version of the device
          type: string
        hardware:
          $ref: '#/components/schemas/OSDeviceHardwareInformation'
      title: OSDeviceInformationReturnable
      type: object
    OSDeviceDependenciesInformation:
      description: This will lets us know about specific dependencies that we are
        looking for on the device that are needed for specific tasks.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        vulkan:
          description: This will let us know if vulkan is present = true or not there
            ==false
          type: boolean
      required:
      - vulkan
      title: OSDeviceDependenciesInformation
      type: object
    OSDeviceHardwareInformation:
      description: this will let us know specific hardware information
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        cpus:
          items:
            $ref: '#/components/schemas/OSDeviceCPUHardwareInformation'
          type: array
        gpus:
          items:
            $ref: '#/components/schemas/OSDeviceGPUHardwareInformation'
          type: array
        ram:
          $ref: '#/components/schemas/OSDeviceRAMHardwareInformation'
      title: OSDeviceHardwareInformation
      type: object
    OSDeviceCPUHardwareInformation:
      description: This will let us know specific hardware information related to
        the CPU.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          type: string
        l1_cache:
          type: number
        l2_cache:
          type: number
        l3_cache:
          type: number
        shared_memory:
          nullable: true
          type: boolean
        cores:
          type: number
        clock_cycle_speed:
          type: number
      title: OSDeviceCPUHardwareInformation
      type: object
    OSDeviceGPUHardwareInformation:
      description: This will let us know specific hardware information related to
        the GPU.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        name:
          type: string
        memory:
          type: number
        shared_memory:
          nullable: true
          type: boolean
        capabilities:
          $ref: '#/components/schemas/OSDeviceGPUHardwareCapabilitiesInformation'
      title: OSDeviceGPUHardwareInformation
      type: object
    OSDeviceGPUHardwareCapabilitiesInformation:
      description: This will give specific information on task specific capibilites
        for GPU.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        llm:
          description: This will let us know if in the case we have a gpu and our
            gpu has the capabilities to use llms
          type: boolean
      title: OSDeviceGPUHardwareCapabilitiesInformation
      type: object
    OSDeviceRAMHardwareInformation:
      description: This will let us know specific hardware information related to
        the RAM.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        memory:
          type: number
        speed:
          type: number
        type:
          $ref: '#/components/schemas/OSDeviceRAMTypeEnum'
      title: OSDeviceRAMHardwareInformation
      type: object
    OSDeviceRAMTypeEnum:
      description: "ddr3, ddr4, ddr5, gddr6 : this is the type of the RAM"
      enum:
      - DDR2
      - DDR3
      - DDR4
      - DDR5
      - GDDR6
      title: OSDeviceRAMTypeEnum
      type: string
    Backups:
      description: This is a plural model of many Cloud Backups.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Backup'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an website\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: Backups
      type: object
      x-stoplight:
        id: n8ir9eh7deh6z
    Backup:
      description: This is a cloud Backup. This is specific metadata needed inorder
        to retrieve a Backup.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        version:
          type: string
        timestamp:
          type: string
        bytes:
          type: number
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        device_name:
          type: string
        platform:
          $ref: '#/components/schemas/PlatformEnum'
      required:
      - bytes
      - created
      - device_name
      - id
      - platform
      - timestamp
      - version
      title: Backup
      type: object
      x-stoplight:
        id: 6c7mucsmqku7w
    SeededBackup:
      description: "This is a precursor to a Backup, for now this will not need to\
        \ take any properties."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: SeededBackup
      type: object
    BackupStreamedProgress:
      description: This is a specific model to the /backups/create/streamed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        status:
          $ref: '#/components/schemas/ModelDownloadProgressStatusEnum'
        percentage:
          description: Optionally if the download is in progress you will recieve
            a download percent(from 0-100).
          nullable: true
          type: number
        backup:
          $ref: '#/components/schemas/Backup'
      title: BackupStreamedProgress
      type: object
    BackupStatus:
      description: |-
        TODO add more description to this.

        can eventually add a number that display the percent downloaded an so on.(this is called percent 0-100)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        value:
          $ref: '#/components/schemas/BackupStatusEnum'
        percentage:
          description: Optionally if the download is in progress you will receive
            a download percent(from 0-100).
          nullable: true
          type: number
        backup:
          $ref: '#/components/schemas/Backup'
      required:
      - backup
      - status
      title: BackupStatus
      type: object
    BackupStatusEnum:
      description: Enum used for the status of creating a backup or restoring a backup.
      enum:
      - INITIALIZED
      - IN-PROGRESS
      - COMPLETED
      - FAILED
      - UNKNOWN
      - CANCELED
      - RESET
      title: BackupStatusEnum
      type: string
    BackupsStreamedProgress:
      description: This is used in the backups plural stream to stream the changes
        to all the restorations and backups in progress.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        backups:
          items:
            $ref: '#/components/schemas/BackupStreamedProgress'
          type: array
        restorations:
          items:
            $ref: '#/components/schemas/BackupStreamedProgress'
          type: array
      title: BackupsStreamedProgress
      type: object
    Ranges:
      description: This is a collection of many Ranges
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/Range'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an range id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
        continuous:
          type: boolean
      required:
      - iterable
      title: Ranges
      type: object
    Range:
      description: "This is an identified Range, this is ONLY needed when using plural\
        \ rangedTimestamps, in order to ensure granularity(add/modify/delete)"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        to:
          $ref: '#/components/schemas/GroupedTimestamp'
        from:
          $ref: '#/components/schemas/GroupedTimestamp'
        between:
          type: boolean
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
      required:
      - created
      - id
      - updated
      title: Range
      type: object
    SeededRange:
      description: "This is a preIdentified version of a Range.\n\nconversation: this\
        \ is here to specify the relationship that we want to set up with the Range.\
        \ \nIE for this case we want to associate a Range with a Conversation.grounding.temporal.workstream.\
        \ Otherwise, if this\nwas a conversation we would have no way to know what\
        \ relationship that we want to set up on the conversation w/ the range.\n\
        (because this will be set up for many relationShip opportunities that have\
        \ different functionalities)"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        to:
          $ref: '#/components/schemas/GroupedTimestamp'
        from:
          $ref: '#/components/schemas/GroupedTimestamp'
        between:
          type: boolean
        summary:
          $ref: '#/components/schemas/ReferencedWorkstreamSummary'
        conversation:
          $ref: '#/components/schemas/SeededRangeConversationAssociation'
      required:
      - created
      - id
      - updated
      title: SeededRange
      type: object
    SeededRangeConversationAssociation:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        reference:
          $ref: '#/components/schemas/ReferencedConversation'
        grounding:
          $ref: '#/components/schemas/SeededRangeConversationGroundingAssociation'
      required:
      - reference
      title: SeededRangeConversationAssociation
      type: object
    SeededRangeConversationGroundingAssociation:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        temporal:
          $ref: '#/components/schemas/SeededRangeConversationGroundingTemporalAssociation'
      title: SeededRangeConversationGroundingAssociation
      type: object
    SeededRangeConversationGroundingTemporalAssociation:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        workstream:
          type: boolean
      title: SeededRangeConversationGroundingTemporalAssociation
      type: object
    WorkstreamEvents:
      description: This is a collection of many Shadow Activity events.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamEvent'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an activity\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: WorkstreamEvents
      type: object
    WorkstreamEvent:
      description: |-
        This is a Shadow Activity event:

        This is used to for 2 collections the internal Shadow Activity collection and the Shadow Activity Collection.

        The Internal Shadow Activity will me just a massive growing and shrinkling persisted list activity event that will endup getting rolled up into Workstream summaries. When we roll up the internalWorkstreamEvent events we will do a ton of filtering and only take the highly relevant events and turn them into WorkstreamEvent (these will be used to create a reference to the workstream summary, so we can know what event were used to generate the summary and vise versa).

        A Shadow Activity model is a collection of a ton of small interactions with the plugins (copy/paste/file open/file close/tab changed/...etc events) that will also enable use to know what materials are being used to funnel them into our engine to show highly relevant data according to your given flow.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        score:
          $ref: '#/components/schemas/Score'
        application:
          $ref: '#/components/schemas/Application'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        trigger:
          $ref: '#/components/schemas/WorkstreamEventTrigger'
        context:
          $ref: '#/components/schemas/WorkstreamEventContext'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
      required:
      - application
      - created
      - id
      - trigger
      - updated
      title: WorkstreamEvent
      type: object
    SeededWorkstreamEvent:
      description: "This is a precreated version of a WorkstreamEvent event, this\
        \ will be used ingested into PiecesOS and PiecesOS will do all the magic to\
        \ transform this into relevant data show in the workstream feed."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        score:
          $ref: '#/components/schemas/Score'
        application:
          $ref: '#/components/schemas/Application'
        trigger:
          $ref: '#/components/schemas/WorkstreamEventTrigger'
        context:
          $ref: '#/components/schemas/WorkstreamEventContext'
        summary:
          $ref: '#/components/schemas/ReferencedWorkstreamSummary'
        internal_identifier:
          description: "This is used to override the event identifier, if this was\
            \ an event that was originally in the internal events collection."
          type: string
      required:
      - application
      - trigger
      title: SeededWorkstreamEvent
      type: object
    SeededWorkstreamSummary:
      description: This is a seeded version of a WorkstreamSummary
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        events:
          $ref: '#/components/schemas/FlattenedWorkstreamEvents'
        name:
          type: string
        annotations:
          items:
            $ref: '#/components/schemas/SeededAnnotation'
          type: array
        ranges:
          $ref: '#/components/schemas/FlattenedRanges'
        model:
          $ref: '#/components/schemas/Model'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        applications:
          $ref: '#/components/schemas/Applications'
      required:
      - model
      - name
      - range
      title: SeededWorkstreamSummary
      type: object
      x-stoplight:
        id: p58g93fj107ow
    WorkstreamPatternEngineStatus:
      description: "This will return the status for the Workstream pettern engine,\
        \ specifically the activation/deactivation status"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        vision:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionStatus'
      title: WorkstreamPatternEngineStatus
      type: object
    WorkstreamPatternEngineVisionStatus:
      description: |-
        activation: can be active for forever w/ continous true, or it can be activated for the next couple hours

        deactivation: here can be deactivated for forever w/ continuous true, or it can be deactivated for the next couple hours

        Note: one or the other will be set and both are nullable.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        activation:
          $ref: '#/components/schemas/AnonymousTemporalRange'
        deactivation:
          $ref: '#/components/schemas/AnonymousTemporalRange'
      title: WorkstreamPatternEngineVisionStatus
      type: object
    WorkstreamPatternEngineDataCleanupRequest:
      description: |-
        NOTE: if we want to remove all the data the from would be unset, the to will be right now.

        from: is always in the past
        to: is always at least before from in our time.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ranges:
          items:
            $ref: '#/components/schemas/AnonymousTemporalRange'
          type: array
      title: WorkstreamPatternEngineDataCleanupRequest
      type: object
    OSPermissions:
      description: This will return the permission of this specific operating system
        w/ relation to given features.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        processing:
          $ref: '#/components/schemas/OSProcessingPermissions'
      title: OSPermissions
      type: object
    OSProcessingPermissions:
      description: These are the permissions relating to the vision models.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        vision:
          description: "if true it is granted, if not then it is not granted."
          type: boolean
        accessibility:
          description: "if true it is granted, if not then it is not granted."
          type: boolean
      title: GrantedOSProcessingPermissions
      type: object
    UserBetaStatus:
      description: This is used to either grant or remove a specific provider betastatus
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        auth0:
          $ref: '#/components/schemas/Auth0UserBetaStatus'
        user:
          type: string
      required:
      - user
      title: UserBetaStatus
      type: object
    Auth0UserBetaStatus:
      description: |-
        Note: continuous: this means that from this moment in time, the user is continuously opted into beta

        otherwise we will use the from/to values provided.

        Note: in order to opt out of vision, you will just end their beta w/ the updated with a to property that is effectively right now in time.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        vision:
          $ref: '#/components/schemas/AnonymousTemporalRange'
      title: Auth0UserBetaStatus
      type: object
    SeededWorkstreamIngestion:
      description: |-
        This is used as the input in the Context ingestion endpoint for the feed.

        This will take in a required seed, this will get created as an internal WorkstreamEvent until we determine
        internally that this event is relevant and will then attach it to a WorkstreamSummary and it will get moved over to a WorkstreamEvent.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        event:
          $ref: '#/components/schemas/SeededWorkstreamEvent'
      required:
      - event
      title: SeededWorkstreamIngestion
      type: object
    WorkstreamIngestion:
      description: This is used for a returnable in the contest ingestion endpoint
        for the Feed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
      title: WorkstreamIngestion
      type: object
    WorkstreamSuggestions:
      description: |-
        This is a list of the materials used in the workstream suggestions.

        The feed will return a list of individual material that will be required to be fetched and re-referenced.(the materials that is.)

        Considering if we want to have all the materaials just being referenced( ie ReferencedWebsite/ReferencedWorkstreamSummary/...xyz) && rebuilt
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamSuggestion'
          type: array
        types:
          description: |-
            This is iterable <WorkstreamSuggestionType>[] that gives the type of each of the items in the iterable.
            I.E. types[0] is the suggestion type of the item at iterable[0].
          items:
            $ref: '#/components/schemas/WorkstreamSuggestionType'
          type: array
      required:
      - iterable
      title: WorkstreamSuggestions
      type: object
    WorkstreamSuggestion:
      description: |-
        This is an individual material that is apart of the workstream feed.
        might want to also consider plural uuids ie top websites/tags/and others..

        related: this is an optional field that will only be calculated for first degree relationships.
                 ie. an anchor may have related.iterable.first.persons that are not associated but related.
                 via the workstream patturn engine.

        current: if current is defined then this is the current viewed object
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        summary:
          $ref: '#/components/schemas/ReferencedWorkstreamSummary'
        asset:
          $ref: '#/components/schemas/ReferencedAsset'
        tag:
          $ref: '#/components/schemas/ReferencedTag'
        website:
          $ref: '#/components/schemas/ReferencedWebsite'
        anchor:
          $ref: '#/components/schemas/ReferencedAnchor'
        conversation:
          $ref: '#/components/schemas/ReferencedConversation'
        person:
          $ref: '#/components/schemas/ReferencedPerson'
        seed:
          $ref: '#/components/schemas/Seed'
        seeds:
          $ref: '#/components/schemas/Seeds'
        summaries:
          $ref: '#/components/schemas/FlattenedWorkstreamSummaries'
        assets:
          $ref: '#/components/schemas/FlattenedAssets'
        tags:
          $ref: '#/components/schemas/FlattenedTags'
        websites:
          $ref: '#/components/schemas/FlattenedWebsites'
        anchors:
          $ref: '#/components/schemas/FlattenedAnchors'
        conversations:
          $ref: '#/components/schemas/FlattenedConversations'
        persons:
          $ref: '#/components/schemas/FlattenedPersons'
        related:
          $ref: '#/components/schemas/WorkstreamSuggestions'
        current:
          $ref: '#/components/schemas/WorkstreamSuggestion'
      title: WorkstreamSuggestion
      type: object
    WorkstreamSuggestionType:
      description: This is used to map the types of the iterable to given booleans
        of their respective material types
      properties:
        schema:
          type: boolean
        summary:
          type: boolean
        asset:
          type: boolean
        tag:
          type: boolean
        website:
          type: boolean
        anchor:
          type: boolean
        conversation:
          type: boolean
        person:
          type: boolean
        seed:
          type: boolean
        seeds:
          type: boolean
        summaries:
          type: boolean
        assets:
          type: boolean
        tags:
          type: boolean
        websites:
          type: boolean
        anchors:
          type: boolean
        conversations:
          type: boolean
        persons:
          type: boolean
      title: WorkstreamSuggestionType
      type: object
    SeededWorkstreamSuggestionsRefresh:
      description: "This is used in the input of the /workstream/feed/refresh\n\n\
        The application here will let us know if what scope you would like to refresh\
        \ the stream for. IE an Application will \nprovide bias in the items that\
        \ are displayed.\n\nnote: context can be used here to provide further bias\
        \ to the suggestions."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        application:
          $ref: '#/components/schemas/Application'
        context:
          $ref: '#/components/schemas/WorkstreamEventContext'
      required:
      - application
      title: SeededWorkstreamSuggestionsRefresh
      type: object
    WorkstreamSuggestionsRefresh:
      description: "This will return the new refreshed suggestions, about what data\
        \ changed, and the data that was used to bias the suggestions."
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        suggestions:
          $ref: '#/components/schemas/WorkstreamSuggestions'
      required:
      - suggestions
      title: WorkstreamSuggestionsRefresh
      type: object
    SearchInput:
      description: |-
        generic endpoint body for the searching endpoints

        query: this is optional, but the query string you will use to find your material

        mode: this is the searching method/type that we will use to search your materials

        TODO: consider passing in a score here ie only return things that match references/reuse/updates/...etc > x

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials,
        this would be an input property of suggestions?:boolean that will say if they want suggested materials returned as well
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        engines:
          $ref: '#/components/schemas/SearchEngines'
      required:
      - engines
      title: SearchInput
      type: object
    SearchEngines:
      description: |-
        This is a model for plural Engine.
        This means that you can run multiple searches, this follow similar behavior to the Asset Filtering.where you can
        create you own complex operations: IE search a query in FTS, and filter all that have the create from here to here.

        note: each Engine will only represent 1 search operation, however you many pass in operations to create further nesting. IE

        Engine: [FTS + w/ operations: [created filter, updated filer, ncs Search] w/ a type of OR:::: This can be as nested as you want however will just increase the time till it returns results.]

        note: type: default behavior for the type is an AND operation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchEngine'
          type: array
        type:
          $ref: '#/components/schemas/FilterOperationTypeEnum'
      required:
      - iterable
      title: SearchEngines
      type: object
    SearchEngine:
      description: |-
        This will determine the type of search that will run

        These are all different searching methods all of which are exclusive.
        Meaning that you cannot mix & match types.

        operations: is here if you want to build complex searching behavior.
        (A || B) && (B || C) , note this can get very complex but can be as flexible as you need.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        query:
          type: string
        embeddings:
          $ref: '#/components/schemas/EmbeddingsSearchOptions'
        full_text:
          $ref: '#/components/schemas/FullTextSearchOptions'
        temporal:
          $ref: '#/components/schemas/TemporalSearchOptions'
        workstream:
          $ref: '#/components/schemas/WorkstreamSearchOptions'
        operations:
          $ref: '#/components/schemas/SearchEngines'
      title: SearchEngine
      type: object
    EmbeddingsSearchOptions:
      description: |-
        similarity: this is optional from 0 - 1, (where 1 is exact and 0 is everything)

        TODO consider a plural of types for running many embedding search scopes
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        type:
          $ref: '#/components/schemas/EmbeddingsSearchOptionsEmbeddingTypeEnum'
        similarity:
          type: number
      required:
      - type
      title: FullTextSearchOptions
      type: object
    EmbeddingsSearchOptionsEmbeddingTypeEnum:
      description: TODO
      enum:
      - JINA
      - NCS
      title: EmbeddingsSearchOptionsTypeEnum
      type: string
    FullTextSearchOptions:
      description: |-
        similarity: you will want to pass in a value from 0-1. (where 1 is exact and 0 is everything)

        exact: (optional) this will default to false, which will run a fuzzy search, unless set to true.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        similarity:
          nullable: true
          type: number
        exact:
          type: boolean
      title: FullTextSearchOptions
      type: object
    TemporalSearchOptions:
      description: |-
        created: will return the materials based on if the range is satisfied w/ this created timestamp
        ** same goes for updated
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        created:
          $ref: '#/components/schemas/AnonymousTemporalRange'
        updated:
          $ref: '#/components/schemas/AnonymousTemporalRange'
      title: TemporalSearchOptions
      type: object
    WorkstreamSearchOptions:
      description: |-
        This is a search realted to the workstream pattern engine data,
        for instance in a WPE/vision/search we will want to be able to search via a WorkstreamPatternEngineSource.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        sources:
          $ref: '#/components/schemas/WorkstreamPatternEngineSources'
      title: WorkstreamSearchOptions
      type: object
    WorkstreamPatternEngineSources:
      description: This is a plural version of the WPE qdrant applications
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamPatternEngineSource'
          type: array
      required:
      - iterable
      title: WorkstreamPatternEngineSources
      type: object
    SearchedTags:
      description: This is the plural Model used to return many searchedTags.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedTag'
          type: array
      required:
      - iterable
      title: SearchedTags
      type: object
    SearchedTag:
      description: |-
        This is used for the Tags searching endpoint.

        tag here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        tag:
          $ref: '#/components/schemas/Tag'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the tag.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedTag
      type: object
    SearchedWebsites:
      description: This is the plural Model used to return many SearchedWebsite.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedWebsite'
          type: array
      required:
      - iterable
      title: SearchedWebsites
      type: object
    SearchedWebsite:
      description: |-
        This is used for the Websites searching endpoint.

        website here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        website:
          $ref: '#/components/schemas/Website'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the website.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedWebsite
      type: object
    SearchedPersons:
      description: This is the plural Model used to return many SearchedPerson.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedPerson'
          type: array
      required:
      - iterable
      title: SearchedPersons
      type: object
    SearchedPerson:
      description: |-
        This is used for the Persons searching endpoint.

        person here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        person:
          $ref: '#/components/schemas/Person'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the person.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedPerson
      type: object
    SearchedSensitives:
      description: This is the plural Model used to return many SearchedSensitive.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedSensitive'
          type: array
      required:
      - iterable
      title: SearchedSensitives
      type: object
    SearchedSensitive:
      description: |-
        This is used for the Sensitives searching endpoint.

        sensitive here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        sensitive:
          $ref: '#/components/schemas/Sensitive'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the sensitive.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedSensitive
      type: object
    SearchedAnchors:
      description: This is the plural Model used to return many SearchedAnchor.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedAnchor'
          type: array
      required:
      - iterable
      title: SearchedAnchors
      type: object
    SearchedAnchor:
      description: |-
        This is used for the Anchors searching endpoint.

        anchor here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions

        note: if we match a specific anchorPoint we will provide this as well.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        anchor:
          $ref: '#/components/schemas/Anchor'
        points:
          $ref: '#/components/schemas/SearchedAnchorPoints'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the anchor.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedAnchor
      type: object
    SearchedAnchorPoints:
      description: This is the plural Model used to return many SearchedAnchorPoint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedAnchorPoint'
          type: array
      required:
      - iterable
      title: SearchedAnchorPoints
      type: object
    SearchedAnchorPoint:
      description: |-
        This is used for the AnchorPoints searching endpoint.

        point here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        point:
          $ref: '#/components/schemas/AnchorPoint'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the anchorPoint.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedAnchorPoint
      type: object
    SearchedConversations:
      description: This is the plural Model used to return many SearchedConversation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedConversation'
          type: array
      required:
      - iterable
      title: SearchedConversations
      type: object
    SearchedConversation:
      description: |-
        This is used for the Conversations searching endpoint.

        conversation here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        conversation:
          $ref: '#/components/schemas/Conversation'
        messages:
          $ref: '#/components/schemas/SearchedConversationMessages'
        annotations:
          $ref: '#/components/schemas/SearchedAnnotations'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the conversation.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedConversation
      type: object
    SearchedConversationMessages:
      description: This is the plural Model used to return many SearchedConversationMessage.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedConversationMessage'
          type: array
      required:
      - iterable
      title: SearchedConversationMessages
      type: object
    SearchedConversationMessage:
      description: |-
        This is used for the ConversationMessages searching endpoint && the specific Conversation search && ConversationsSearch

        conversation here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        message:
          $ref: '#/components/schemas/ConversationMessage'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the ConversationMessage.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedConversationMessage
      type: object
    SearchedAnnotations:
      description: This is the plural Model used to return many SearchedAnnotation.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedAnnotation'
          type: array
      required:
      - iterable
      title: SearchedAnnotations
      type: object
    SearchedAnnotation:
      description: |-
        This is used for the Annotation searching endpoint

        annotation here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        annotation:
          $ref: '#/components/schemas/Annotation'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the annotation.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedAnnotation
      type: object
    SearchedHints:
      description: This is the plural Model used to return many SearchedHint.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedHint'
          type: array
      required:
      - iterable
      title: SearchedHints
      type: object
    SearchedHint:
      description: |-
        This is used for the Hint searching endpoint

        hint here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        hint:
          $ref: '#/components/schemas/Hint'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the hint.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedHint
      type: object
    SearchedWorkstreamSummaries:
      description: This is the plural Model used to return many SearchedWorkstreamSummary.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedWorkstreamSummary'
          type: array
      required:
      - iterable
      title: SearchedWorkstreamSummaries
      type: object
    SearchedWorkstreamSummary:
      description: |-
        This is used for the WorkstreamSummaries searching endpoint

        WorkstreamSummary here is only provided if transferables are set to true.

        temporal: if this is provided this means that their material matched the input via a timestamp.

        TODO will want to consider returning related materials to this material potentially both associated/ and not associated materials
        ie suggestion: WorkstreamSuggestions

        annotations: this is provided if we match a specific annotation on a WorkstreamSummary
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        summary:
          $ref: '#/components/schemas/WorkstreamSummary'
        annotations:
          $ref: '#/components/schemas/SearchedAnnotations'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the WorkstreamSummary.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedWorkstreamSummary
      type: object
    OSServerSettings:
      description: |-
        This is the model for the PiecesOS specific settings.

        autoboot: refers to both the bootup of POS on the system login, default is false
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        autoboot:
          type: boolean
      title: OSServerSettings
      type: object
    WorkstreamPatternEngineVisionCalibration:
      description: |-
        This model is used for the dimensions of the copilot/feed/xyz window.

        if dimensions/captured are null this means we do not have the dimensions for this given window.

        TODO: consider adding 5 markers here for the qr codes(ie location of these as wel)
        NOTE: will want to add type of calibration for this specific dimension(ie copilot/feed/xyz)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        foreground:
          description: This is the name of the window(foreground window).(this will
            always be present)
          type: string
        captured:
          $ref: '#/components/schemas/GroupedTimestamp'
        dimensions:
          $ref: '#/components/schemas/WindowDimensions'
      required:
      - foreground
      title: WorkstreamPatternEngineVisionCalibration
      type: object
    WindowDimensions:
      description: |-
        note: this is modeled off of the browsers bounding box DOMRect
        https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        bottom:
          type: number
        height:
          type: number
        left:
          type: number
        right:
          type: number
        top:
          type: number
        width:
          type: number
        x:
          type: number
        "y":
          type: number
      required:
      - bottom
      - height
      - left
      - right
      - top
      - width
      - x
      - "y"
      title: WindowDimensions
      type: object
    WorkstreamPatternEngineVisionCalibrations:
      description: |-
        TODO: description
        This the plural of a single copilot Capture.

        This will return all the the given copilot captures
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamPatternEngineVisionCalibration'
          type: array
      required:
      - iterable
      title: WorkstreamPatternEngineVisionCalibrations
      type: object
    WorkstreamPatternEngineVisionMetadata:
      description: This will return all the WPE vision specific metadata
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        events:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionEventsMetadata'
      title: WorkstreamPatternEngineVisionMetadata
      type: object
    WorkstreamPatternEngineVisionEventsMetadata:
      description: This is specific model that will return the size of the WPE in
        bytes
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
        total:
          description: This is the total number of events.
          type: integer
        oldest:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvent'
        newest:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvent'
      required:
      - bytes
      - total
      title: WorkstreamPatternEngineVisionEventsMetadata
      type: object
    WorkstreamPatternEngineVisionEvent:
      description: |-
        This will return a specific event for the WPE.

        note: value is nullable here because we may want to pass in transferables:true/false
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        source:
          $ref: '#/components/schemas/WorkstreamPatternEngineSource'
        textual:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionEventTextualValue'
      required:
      - created
      - id
      title: WorkstreamPatternEngineVisionEvent
      type: object
    WorkstreamPatternEngineVisionEventTextualValue:
      description: |-
        note: we could add a summarize property.
        TODO: might need an extracted bool to say to aggregate the extracted
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        ocr:
          $ref: '#/components/schemas/TransferableString'
        extracted:
          $ref: '#/components/schemas/TextuallyExtractedMaterial'
      title: WorkstreamPatternEngineVisionEventTextualValue
      type: object
    WorkstreamPatternEngineVisionEvents:
      description: This is a plural snapshot of all of the events within WPE qdrant
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvent'
          type: array
      required:
      - iterable
      title: WorkstreamPatternEngineVisionEvents
      type: object
    SearchedWorkstreamPatternEngineVisionEvents:
      description: This will return a list of the returned events.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedWorkstreamPatternEngineVisionEvent'
          type: array
      required:
      - iterable
      title: SearchedWorkstreamPatternEngineVisionEvents
      type: object
    SearchedWorkstreamPatternEngineVisionEvent:
      description: This will return a list of the returned events.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        event:
          $ref: '#/components/schemas/WorkstreamPatternEngineVisionEvent'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        application:
          type: string
        identifier:
          description: This is the uuid of the event.
          type: string
      required:
      - identifier
      title: SearchedWorkstreamPatternEngineVisionEvent
      type: object
    WorkstreamPatternEngineVisionEventDeletions:
      description: |-
        note: recomended to use the search option here(where you can pass in workstream.
        note: "scope" here will run a search with the given scope and then remove these events.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        search_scope:
          $ref: '#/components/schemas/SearchInput'
        identifiers:
          $ref: '#/components/schemas/FlattenedWorkstreamPatternEngineVisionEvents'
      title: WorkstreamPatternEngineVisionEventDeletions
      type: object
    FlattenedWorkstreamPatternEngineVisionEvents:
      description: This is a plural snapshot of all of the events within WPE qdrant(Referenced)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/ReferencedWorkstreamPatternEngineVisionEvent'
          type: array
      required:
      - iterable
      title: FlattenedWorkstreamPatternEngineVisionEvents
      type: object
    ReferencedWorkstreamPatternEngineVisionEvent:
      description: |-
        This will return a specific event for the WPE.

        note: value is nullable here because we may want to pass in transferables:true/false
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        reference:
          $ref: '#/components/schemas/FlattenedWorkstreamPatternEngineVisionEvent'
      required:
      - id
      title: WorkstreamPatternEngineVisionEvent
      type: object
    FlattenedWorkstreamPatternEngineVisionEvent:
      description: |-
        This is a flattened version of the WorkstreamPatternEngineVisionEvent, where the referenced to other materials are also flattened(DAG Safe)

        Note: TODO later add textual and need to correspond w/ both transferables as well as the FlattenedMaterial
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
      required:
      - created
      - id
      title: FlattenedWorkstreamPatternEngineVisionEvent
      type: object
    OSServerMetadata:
      description: This will return metadata (total materials) in your pieces drive.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        totals:
          $ref: '#/components/schemas/TrackedSummaryTotals'
      title: OSServerMetadata
      type: object
      x-pieces-internal: true
    TrackedSummaryTotals:
      description: This is the counts of things that users can add.
      properties:
        assets:
          type: integer
        tags:
          type: integer
        websites:
          type: integer
        persons:
          type: integer
        sensitives:
          type: integer
        shares:
          type: integer
        copilot_sends:
          type: integer
        copilot_receives:
          type: integer
        copilot_sessions:
          type: integer
        copilot_conversations:
          type: integer
        productivity_score:
          type: integer
        searches:
          type: integer
        references:
          type: integer
        reuses:
          type: integer
        anchor_files:
          type: integer
        anchor_folders:
          type: integer
        isr_reports:
          type: integer
        requests:
          nullable: true
          type: integer
      required:
      - anchor_files
      - anchor_folders
      - assets
      - copilot_conversations
      - copilot_receives
      - copilot_sends
      - copilot_sessions
      - isr_reports
      - persons
      - productivity_score
      - references
      - reuses
      - searches
      - sensitives
      - shares
      - tags
      - websites
      title: TrackedSummaryTotals
      type: object
      x-pieces-internal: true
    InactiveOSServerApplet:
      description: "Note: parent is optional here in the case that (parent here is\
        \ the integration that wants the module launched(VSCode))"
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        parent:
          $ref: '#/components/schemas/Application'
        port:
          description: This is the port number in which we want to serve the copilot
            at.
          nullable: true
          type: integer
        type:
          $ref: '#/components/schemas/OSAppletEnum'
      required:
      - type
      title: InactiveOSServerApplet
      type: object
    OSAppletEnum:
      description: |-
        This is an enum specifically for the different types of micro_applications/experiences/feature module

        NOTE: TODO copilot_wasm or copilot_minimal
        NOTE: WORKSTREAM_ACTIVITY and WORKFLOW_ACTIVITY might be diff in the future(workflow is what we have today, workstream will be a v2)
        NOTE: PLACEHOLDERS here are here to buy some additional changes for enums that dont yet exist(JIC) if not used, then not used.
      enum:
      - COPILOT
      - PIECES_OS_TOOLBAR
      - WORKSTREAM_SUGGESTIONS
      - SAVED_MATERIALS
      - WORKFLOW_ACTIVITY
      - WORKSTREAM_ACTIVITY
      - GLOBAL_SEARCH
      - PIECES_SUITE_SETTINGS_AND_INTEGRATIONS_MANAGER
      - CAPTURED_CONTEXT
      - UPDATES_AND_UPCOMING
      - NOTIFICATIONS_MANAGER
      - SHAREBLE_LINK_VIEWER
      - FUTURE_APPLET_MODULE_PLACEHOLDER_A
      - FUTURE_APPLET_MODULE_PLACEHOLDER_B
      - FUTURE_APPLET_MODULE_PLACEHOLDER_C
      - UNKNOWN_APPLET_MODULE
      title: OSAppletEnum
      type: string
    ActiveOSServerApplet:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        port:
          type: integer
        type:
          $ref: '#/components/schemas/OSAppletEnum'
      required:
      - port
      - type
      title: ActiveOSServerApplet
      type: object
    TerminatingOSServerApplet:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        parent:
          $ref: '#/components/schemas/Application'
        port:
          description: Validation check if the port is passed in.
          nullable: true
          type: integer
        type:
          $ref: '#/components/schemas/OSAppletEnum'
      required:
      - type
      title: TerminatingOSServerApplet
      type: object
    VerifiedOSFilesystemPath:
      description: |-
        This will return is the given path was verified/ or it was invalid.

        and if it is valid if it is a file/folder

        note: file/directory are both null.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        path:
          type: string
        file:
          type: boolean
        directory:
          type: boolean
        verified:
          description: This means if the path(file/folder) exists on the machine.
          type: boolean
        denied:
          description: This means that attempting to access the file was not aloud(ie
            no permission)
          type: boolean
        bytes:
          $ref: '#/components/schemas/ByteDescriptor'
      required:
      - path
      - verified
      title: VerifiedOSFilesystemPath
      type: object
    OSFileStreamingReadAttempt:
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        path:
          type: string
      required:
      - path
      title: OSFileStreamingReadAttempt
      type: object
    OSFileStreamingRead:
      description: This is a model to return stream progress for a file read.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        status:
          $ref: '#/components/schemas/ModelDownloadProgressStatusEnum'
        percentage:
          description: Optionally if the download is in progress you will receive
            a download percent(from 0-100).
          nullable: true
          type: number
        path:
          type: string
        id:
          description: This is a generated UUID that represents this current stream
            in progress(can be used to cancel this in the future)
          type: string
        bytes:
          $ref: '#/components/schemas/TransferableBytes'
        progress:
          $ref: '#/components/schemas/OSFileStreamingReadProgress'
      required:
      - id
      - path
      - status
      title: OSFileStreamingRead
      type: object
    OSFileStreamingReadProgress:
      description: This is the progress for the OSFileStreamingRead
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        total:
          $ref: '#/components/schemas/ByteDescriptor'
        transferred:
          $ref: '#/components/schemas/ByteDescriptor'
      required:
      - total
      - transferred
      title: OSFileStreamingReadProgress
      type: object
    OllamaDeployments:
      description: This is the plural model for Deployment of Ollama.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/OllamaDeployment'
          type: array
      required:
      - iterable
      title: OllamaDeployments
      type: object
    OllamaDeployment:
      description: |-
        A deployment will be used in 4 cases:
        1. used to describe an installation in progress
        2. used to describe an update in progress
        3. used to say what deployment will be needed to upgrade to.
        4. used to say what the current version of ollama is present on the machine.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        status:
          $ref: '#/components/schemas/OllamaDeploymentStatusEnum'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        percentage:
          description: Optionally if the update is in progress you will recieve a
            download percent(from 0-100).
          nullable: true
          type: number
        version:
          type: string
        userManaged:
          description: "Optionally set, specifically in the case where an update is\
            \ required, and a user need to take manual action."
          type: boolean
      required:
      - version
      title: OllamaDeployment
      type: object
    OllamaDeploymentStatusEnum:
      description: Enum used for the status of Ollama
      enum:
      - INITIALIZED
      - IN-PROGRESS
      - COMPLETED
      - FAILED
      - UNKNOWN
      - CANCELED
      - RESET
      title: OllamaDeploymentStatusEnum
      type: string
    OllamaStatus:
      description: |-
        This will get used in the Websocket and in the get request for Ollama
        Note:
         - updating (nullable) will be used in the case an update is underway
         - installing (nullable) will be used in the case an installation is underway
         - updateRequired (nullable) will be used in the case an update is required
         - installation (nullable) will be provided in the case Ollama is installed.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        updating:
          $ref: '#/components/schemas/OllamaDeployment'
        installing:
          $ref: '#/components/schemas/OllamaDeployment'
        updateRequired:
          $ref: '#/components/schemas/OllamaDeployment'
        installation:
          $ref: '#/components/schemas/OllamaDeployment'
        recommendation:
          $ref: '#/components/schemas/OllamaRecommendation'
      title: OllamaStatus
      type: object
    OllamaRecommendation:
      description: |-
        This is a model that will let the products know some of our recommendations around Ollama:

        for now: will just add a recommendation if the user should even use Ollama or NOT. -- (inference)

        inference: IE if we want to recommendation the user to use inference (ie call the model) or not
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        inference:
          description: This is a bool that will let the client know if we recommend
            to use ollama for inference or not
          type: boolean
      title: OllamaRecommendation
      type: object
    SeededWorkstreamPatternEngineSource:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        raw:
          $ref: '#/components/schemas/WorkstreamPatternEngineSource'
        filter:
          description: This will determine if we want to filter this specific source
          type: boolean
        readable:
          description: This is the name of the source(defualt original data) this
            is NOT used for matching just for readability
          type: string
      required:
      - raw
      - readable
      title: SeededWorkstreamPatternEngineSource
      type: object
    IdentifiedWorkstreamPatternEngineSource:
      description: |-
        This is a specific persisted model for WorkstreamPatternEngineSources that are persisted in the database(not just on the WPE event)

        note: there is a "WorkstreamPatternEngineSource" model however we will NOT be modify this because it is linked to a different model that would require additional code to properly associate/disassociate.

        note: we get 3 raw events from the WPE data so far:(encapsulated in the "WorkstreamPatternEngineSource") event
        1. browserUrl - defaults to null
        2. appTitle - ** not sure on default here ** (this is because this is always present on all WPE events.)
        3. windowTitle - defaults to "Window Title Not Found"

        note: raw is the raw value from the WPE(expect I will replace the defaults w/ nullish values)
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        id:
          type: string
        raw:
          $ref: '#/components/schemas/WorkstreamPatternEngineSource'
        created:
          $ref: '#/components/schemas/GroupedTimestamp'
        updated:
          $ref: '#/components/schemas/GroupedTimestamp'
        filter:
          description: This will determine if we want to filter this specific source
          type: boolean
        score:
          $ref: '#/components/schemas/Score'
        readable:
          description: This is the name of the source(defualt original data) this
            is NOT used for matching just for readability
          type: string
      required:
      - created
      - id
      - raw
      - readable
      - updated
      title: IdentifiedWorkstreamPatternEngineSource
      type: object
    IdentifiedWorkstreamPatternEngineSources:
      description: ""
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
          type: array
        indices:
          additionalProperties:
            type: integer
          description: "This is a Map<String, int> where the the key is an source\
            \ id."
          type: object
        score:
          $ref: '#/components/schemas/Score'
      required:
      - iterable
      title: IdentifiedWorkstreamPatternEngineSources
      type: object
    SearchedIdentifiedWorkstreamPatternEngineSources:
      description: This is the plural Model used to return many SearchedIdentifiedWorkstreamPatternEngineSource.
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        iterable:
          items:
            $ref: '#/components/schemas/SearchedIdentifiedWorkstreamPatternEngineSource'
          type: array
      required:
      - iterable
      title: SearchedIdentifiedWorkstreamPatternEngineSources
      type: object
    SearchedIdentifiedWorkstreamPatternEngineSource:
      description: TODO
      properties:
        schema:
          $ref: '#/components/schemas/EmbeddedModelSchema'
        workstreamPatternEngineSource:
          $ref: '#/components/schemas/IdentifiedWorkstreamPatternEngineSource'
        exact:
          type: boolean
        similarity:
          type: number
        temporal:
          type: boolean
        identifier:
          description: This is the uuid of the source.
          type: string
      required:
      - exact
      - identifier
      - similarity
      title: SearchedIdentifiedWorkstreamPatternEngineSource
      type: object
    SeededTrackedAssetsEvent_metadata:
      description: "Additional Metadata as Neeeded i.e. Search + Query, etc"
      properties:
        search:
          $ref: '#/components/schemas/TrackedAssetsEventSearchMetadata'
      type: object
    GraphicalOCRDescriptiveStatistics_confidence:
      properties:
        mean:
          type: string
      required:
      - mean
      type: object
    InteractedAsset_interactions:
      properties:
        viewed:
          description: https://en.wikipedia.org/wiki/ISO_8601#Time_intervals
          format: duration
          pattern: "P[YYYY]-[MM]-[DD]T[hh]:[mm]:[ss]"
          type: string
        touched:
          default: false
          description: If the user touched or panned over the asset.
          type: boolean
        scrolled:
          default: false
          description: If the user scrolled over the asset.
          type: boolean
      required:
      - viewed
      type: object
    SeededPKCE_ADDITIONAL_PARAMETERS:
      description: "Append any additional parameter to the end of your request, and\
        \ it will be sent to the provider. For example, access_type=offline (for Google\
        \ Refresh Tokens) , display=popup (for Windows Live popup mode)."
      properties:
        access_type:
          enum:
          - offline
          type: string
        display:
          enum:
          - popup
          type: string
      type: object
    Auth0_redirects:
      description: The redirect URI for you Auth 0 Service
      properties:
        authenticated:
          description: Where the Auth0 redirects after the user is authorized
          type: string
        unauthenticated:
          description: The redirect where a user returns once unauthenticated
          type: string
      type: object
  securitySchemes:
    auth0:
      flows:
        authorizationCode:
          authorizationUrl: ""
          refreshUrl: ""
          scopes: {}
          tokenUrl: ""
        clientCredentials:
          refreshUrl: ""
          scopes: {}
          tokenUrl: ""
        implicit:
          authorizationUrl: ""
          refreshUrl: ""
          scopes: {}
      type: oauth2
    authorization:
      flows:
        authorizationCode:
          authorizationUrl: ""
          refreshUrl: ""
          scopes: {}
          tokenUrl: ""
        clientCredentials:
          refreshUrl: ""
          scopes: {}
          tokenUrl: ""
        implicit:
          authorizationUrl: ""
          refreshUrl: ""
          scopes: {}
      type: oauth2
    application:
      description: A required applicationID header for the connection application.
      in: header
      name: X-Application-ID
      type: apiKey

