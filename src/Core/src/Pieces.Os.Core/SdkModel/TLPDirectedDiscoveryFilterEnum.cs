/*
 * Pieces Isomorphic OpenAPI
 *
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Pieces.Os.Core.Client.OpenAPIDateConverter;

namespace Pieces.Os.Core.SdkModel
{
    /// <summary>
    /// Code block type like function, class, abstract
    /// </summary>
    /// <value>Code block type like function, class, abstract</value>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum TLPDirectedDiscoveryFilterEnum
    {
        /// <summary>
        /// Enum FUNCTION for value: FUNCTION
        /// </summary>
        [EnumMember(Value = "FUNCTION")]
        FUNCTION = 1,

        /// <summary>
        /// Enum METHOD for value: METHOD
        /// </summary>
        [EnumMember(Value = "METHOD")]
        METHOD = 2,

        /// <summary>
        /// Enum CLASS for value: CLASS
        /// </summary>
        [EnumMember(Value = "CLASS")]
        CLASS = 3,

        /// <summary>
        /// Enum STRUCT for value: STRUCT
        /// </summary>
        [EnumMember(Value = "STRUCT")]
        STRUCT = 4,

        /// <summary>
        /// Enum ABSTRACT for value: ABSTRACT
        /// </summary>
        [EnumMember(Value = "ABSTRACT")]
        ABSTRACT = 5,

        /// <summary>
        /// Enum COMMENT for value: COMMENT
        /// </summary>
        [EnumMember(Value = "COMMENT")]
        COMMENT = 6,

        /// <summary>
        /// Enum IMPORT for value: IMPORT
        /// </summary>
        [EnumMember(Value = "IMPORT")]
        IMPORT = 7,

        /// <summary>
        /// Enum IF for value: IF
        /// </summary>
        [EnumMember(Value = "IF")]
        IF = 8,

        /// <summary>
        /// Enum LOOP for value: LOOP
        /// </summary>
        [EnumMember(Value = "LOOP")]
        LOOP = 9,

        /// <summary>
        /// Enum RETURN for value: RETURN
        /// </summary>
        [EnumMember(Value = "RETURN")]
        RETURN = 10
    }

}
