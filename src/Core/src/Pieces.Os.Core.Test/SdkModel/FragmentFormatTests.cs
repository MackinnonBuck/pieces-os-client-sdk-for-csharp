/*
 * Pieces Isomorphic OpenAPI
 *
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pieces.Os.Core.SdkModel;
using Pieces.Os.Core.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pieces.Os.Core.Test.Model
{
    /// <summary>
    ///  Class for testing FragmentFormat
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class FragmentFormatTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for FragmentFormat
        //private FragmentFormat instance;

        public FragmentFormatTests()
        {
            // TODO uncomment below to create an instance of FragmentFormat
            //instance = new FragmentFormat();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FragmentFormat
        /// </summary>
        [Fact]
        public void FragmentFormatInstanceTest()
        {
            // TODO uncomment below to test "IsType" FragmentFormat
            //Assert.IsType<FragmentFormat>(instance);
        }

        /// <summary>
        /// Test the property 'Schema'
        /// </summary>
        [Fact]
        public void SchemaTest()
        {
            // TODO unit test for the property 'Schema'
        }

        /// <summary>
        /// Test the property 'VarString'
        /// </summary>
        [Fact]
        public void VarStringTest()
        {
            // TODO unit test for the property 'VarString'
        }

        /// <summary>
        /// Test the property 'Bytes'
        /// </summary>
        [Fact]
        public void BytesTest()
        {
            // TODO unit test for the property 'Bytes'
        }

        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
    }
}
