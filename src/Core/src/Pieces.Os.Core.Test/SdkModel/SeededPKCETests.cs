/*
 * Pieces Isomorphic OpenAPI
 *
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pieces.Os.Core.SdkModel;
using Pieces.Os.Core.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pieces.Os.Core.Test.Model
{
    /// <summary>
    ///  Class for testing SeededPKCE
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SeededPKCETests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SeededPKCE
        //private SeededPKCE instance;

        public SeededPKCETests()
        {
            // TODO uncomment below to create an instance of SeededPKCE
            //instance = new SeededPKCE();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SeededPKCE
        /// </summary>
        [Fact]
        public void SeededPKCEInstanceTest()
        {
            // TODO uncomment below to test "IsType" SeededPKCE
            //Assert.IsType<SeededPKCE>(instance);
        }

        /// <summary>
        /// Test the property 'Schema'
        /// </summary>
        [Fact]
        public void SchemaTest()
        {
            // TODO unit test for the property 'Schema'
        }

        /// <summary>
        /// Test the property 'ResponseType'
        /// </summary>
        [Fact]
        public void ResponseTypeTest()
        {
            // TODO unit test for the property 'ResponseType'
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Fact]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }

        /// <summary>
        /// Test the property 'Nonce'
        /// </summary>
        [Fact]
        public void NonceTest()
        {
            // TODO unit test for the property 'Nonce'
        }

        /// <summary>
        /// Test the property 'RedirectUri'
        /// </summary>
        [Fact]
        public void RedirectUriTest()
        {
            // TODO unit test for the property 'RedirectUri'
        }

        /// <summary>
        /// Test the property 'CodeChallenge'
        /// </summary>
        [Fact]
        public void CodeChallengeTest()
        {
            // TODO unit test for the property 'CodeChallenge'
        }

        /// <summary>
        /// Test the property 'CodeChallengeMethod'
        /// </summary>
        [Fact]
        public void CodeChallengeMethodTest()
        {
            // TODO unit test for the property 'CodeChallengeMethod'
        }

        /// <summary>
        /// Test the property 'Domain'
        /// </summary>
        [Fact]
        public void DomainTest()
        {
            // TODO unit test for the property 'Domain'
        }

        /// <summary>
        /// Test the property 'Audience'
        /// </summary>
        [Fact]
        public void AudienceTest()
        {
            // TODO unit test for the property 'Audience'
        }

        /// <summary>
        /// Test the property 'ScreenHint'
        /// </summary>
        [Fact]
        public void ScreenHintTest()
        {
            // TODO unit test for the property 'ScreenHint'
        }

        /// <summary>
        /// Test the property 'Prompt'
        /// </summary>
        [Fact]
        public void PromptTest()
        {
            // TODO unit test for the property 'Prompt'
        }

        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Fact]
        public void OrganizationTest()
        {
            // TODO unit test for the property 'Organization'
        }

        /// <summary>
        /// Test the property 'Invitation'
        /// </summary>
        [Fact]
        public void InvitationTest()
        {
            // TODO unit test for the property 'Invitation'
        }

        /// <summary>
        /// Test the property 'Scope'
        /// </summary>
        [Fact]
        public void ScopeTest()
        {
            // TODO unit test for the property 'Scope'
        }

        /// <summary>
        /// Test the property 'ClientId'
        /// </summary>
        [Fact]
        public void ClientIdTest()
        {
            // TODO unit test for the property 'ClientId'
        }

        /// <summary>
        /// Test the property 'ADDITIONAL_PARAMETERS'
        /// </summary>
        [Fact]
        public void ADDITIONAL_PARAMETERSTest()
        {
            // TODO unit test for the property 'ADDITIONAL_PARAMETERS'
        }

        /// <summary>
        /// Test the property 'ResponseMode'
        /// </summary>
        [Fact]
        public void ResponseModeTest()
        {
            // TODO unit test for the property 'ResponseMode'
        }
    }
}
