/*
 * Pieces Isomorphic OpenAPI
 *
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Pieces.Os.Core.SdkModel;
using Pieces.Os.Core.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Pieces.Os.Core.Test.Model
{
    /// <summary>
    ///  Class for testing QGPTStreamOutput
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class QGPTStreamOutputTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for QGPTStreamOutput
        //private QGPTStreamOutput instance;

        public QGPTStreamOutputTests()
        {
            // TODO uncomment below to create an instance of QGPTStreamOutput
            //instance = new QGPTStreamOutput();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QGPTStreamOutput
        /// </summary>
        [Fact]
        public void QGPTStreamOutputInstanceTest()
        {
            // TODO uncomment below to test "IsType" QGPTStreamOutput
            //Assert.IsType<QGPTStreamOutput>(instance);
        }

        /// <summary>
        /// Test the property 'Request'
        /// </summary>
        [Fact]
        public void RequestTest()
        {
            // TODO unit test for the property 'Request'
        }

        /// <summary>
        /// Test the property 'Relevance'
        /// </summary>
        [Fact]
        public void RelevanceTest()
        {
            // TODO unit test for the property 'Relevance'
        }

        /// <summary>
        /// Test the property 'Question'
        /// </summary>
        [Fact]
        public void QuestionTest()
        {
            // TODO unit test for the property 'Question'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'Conversation'
        /// </summary>
        [Fact]
        public void ConversationTest()
        {
            // TODO unit test for the property 'Conversation'
        }

        /// <summary>
        /// Test the property 'StatusCode'
        /// </summary>
        [Fact]
        public void StatusCodeTest()
        {
            // TODO unit test for the property 'StatusCode'
        }

        /// <summary>
        /// Test the property 'ErrorMessage'
        /// </summary>
        [Fact]
        public void ErrorMessageTest()
        {
            // TODO unit test for the property 'ErrorMessage'
        }

        /// <summary>
        /// Test the property 'AgentRoutes'
        /// </summary>
        [Fact]
        public void AgentRoutesTest()
        {
            // TODO unit test for the property 'AgentRoutes'
        }

        /// <summary>
        /// Test the property 'Extracted'
        /// </summary>
        [Fact]
        public void ExtractedTest()
        {
            // TODO unit test for the property 'Extracted'
        }
    }
}
