/*
 * Pieces Isomorphic OpenAPI
 *
 * Endpoints for Assets, Formats, Users, Asset, Format, User.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: tsavo@pieces.app
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Pieces.Os.Core.Client;
using Pieces.Os.Core.Api;
// uncomment below to import models
//using Pieces.Os.Core.SdkModel;

namespace Pieces.Os.Core.Test.Api
{
    /// <summary>
    ///  Class for testing QGPTApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class QGPTApiTests : IDisposable
    {
        private QGPTApi instance;

        public QGPTApiTests()
        {
            instance = new QGPTApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of QGPTApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' QGPTApi
            //Assert.IsType<QGPTApi>(instance);
        }

        /// <summary>
        /// Test Hints
        /// </summary>
        [Fact]
        public void HintsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QGPTHintsInput qGPTHintsInput = null;
            //var response = instance.Hints(qGPTHintsInput);
            //Assert.IsType<QGPTQuestionOutput>(response);
        }

        /// <summary>
        /// Test PersonsRelated
        /// </summary>
        [Fact]
        public void PersonsRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? transferables = null;
            //QGPTPersonsRelatedInput qGPTPersonsRelatedInput = null;
            //var response = instance.PersonsRelated(transferables, qGPTPersonsRelatedInput);
            //Assert.IsType<QGPTPersonsRelatedOutput>(response);
        }

        /// <summary>
        /// Test QgptStream
        /// </summary>
        [Fact]
        public void QgptStreamTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QGPTStreamInput qGPTStreamInput = null;
            //var response = instance.QgptStream(qGPTStreamInput);
            //Assert.IsType<QGPTStreamOutput>(response);
        }

        /// <summary>
        /// Test Question
        /// </summary>
        [Fact]
        public void QuestionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QGPTQuestionInput qGPTQuestionInput = null;
            //var response = instance.Question(qGPTQuestionInput);
            //Assert.IsType<QGPTQuestionOutput>(response);
        }

        /// <summary>
        /// Test Relevance
        /// </summary>
        [Fact]
        public void RelevanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QGPTRelevanceInput qGPTRelevanceInput = null;
            //var response = instance.Relevance(qGPTRelevanceInput);
            //Assert.IsType<QGPTRelevanceOutput>(response);
        }

        /// <summary>
        /// Test Reprompt
        /// </summary>
        [Fact]
        public void RepromptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //QGPTRepromptInput qGPTRepromptInput = null;
            //var response = instance.Reprompt(qGPTRepromptInput);
            //Assert.IsType<QGPTRepromptOutput>(response);
        }
    }
}
